{"repository": {"owner": {"login": "highcharts"}, "name": "highcharts", "forkCount": 2708, "stargazerCount": 9957, "createdAt": "2010-06-11T12:23:53Z", "updatedAt": "2021-03-17T06:08:44Z", "repositoryTopics": {"edges": []}, "languages": {"edges": [{"node": {"name": "JavaScript"}}, {"node": {"name": "CSS"}}, {"node": {"name": "PHP"}}, {"node": {"name": "HTML"}}, {"node": {"name": "Java"}}, {"node": {"name": "Shell"}}, {"node": {"name": "Batchfile"}}, {"node": {"name": "Perl"}}, {"node": {"name": "Python"}}, {"node": {"name": "XSLT"}}, {"node": {"name": "TypeScript"}}, {"node": {"name": "VBScript"}}, {"node": {"name": "SCSS"}}]}, "primaryLanguage": {"name": "TypeScript"}}, "id": "MDU6SXNzdWUxOTk3NTM3Ng==", "number": 2280, "author": {"login": "sebastianbochan"}, "title": "waterfall - stacking", "body": "Stacked waterfall seems to not working.\n\nExample: http://jsfiddle.net/AFjAG/7/\n\nHC 3.0.5\n", "bodyHTML": "<p>Stacked waterfall seems to not working.</p>\n<p>Example: <a rel=\"nofollow\" href=\"http://jsfiddle.net/AFjAG/7/\">http://jsfiddle.net/AFjAG/7/</a></p>\n<p>HC 3.0.5</p>", "bodyText": "Stacked waterfall seems to not working.\nExample: http://jsfiddle.net/AFjAG/7/\nHC 3.0.5", "assignees": {"edges": [{"node": {"login": "pawelfus"}}, {"node": {"login": "PaulDalek"}}]}, "createdAt": "2013-09-24T12:59:08Z", "closed": true, "closedAt": "2019-03-25T15:17:40Z", "lastEditedAt": null, "publishedAt": "2013-09-24T12:59:08Z", "comments": {"edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwMTU5NDQxNg==", "author": {"login": "sebastianbochan"}, "body": "+1\n", "bodyText": "+1", "bodyHTML": "<p>+1</p>", "createdAt": "2015-05-13T09:36:03Z", "publishedAt": "2015-05-13T09:36:03Z", "lastEditedAt": null, "updatedAt": "2015-05-13T09:36:03Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8935, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "+1", "sentSegmented": ["+1"], "sentSegmentedWithoutStops": ["+1"], "sentSegmentedWithoutStopsStemmed": ["+1"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI2MjQ5MDA4OQ==", "author": {"login": "dmitrygorbenko"}, "body": "I faced the same issue:\r\nhttps://jsfiddle.net/DimaGorbenko/rdg5j45h/1/\r\nIt's connected to stacking.\r\nTry to remove key\r\n   stacking: \"normal\"\r\nand you'll get chart.\r\nBut I'd like to have stacked version :)\r\n\r\nThe funny thing is what this chart was working in HC version 4.1.8, but stopped working in 4.2.1.\r\nAt least these versions I have and I tested them.\r\nI can do more testing to find exact version which stopped supporting this feature.\r\n\r\nWhat do you think, is it a bug, or broken feature ? Are you going to fix it ? Any plans ? I just need to understand what to do.\r\n\r\nThanks,\r\nDima", "bodyText": "I faced the same issue:\nhttps://jsfiddle.net/DimaGorbenko/rdg5j45h/1/\nIt's connected to stacking.\nTry to remove key\nstacking: \"normal\"\nand you'll get chart.\nBut I'd like to have stacked version :)\nThe funny thing is what this chart was working in HC version 4.1.8, but stopped working in 4.2.1.\nAt least these versions I have and I tested them.\nI can do more testing to find exact version which stopped supporting this feature.\nWhat do you think, is it a bug, or broken feature ? Are you going to fix it ? Any plans ? I just need to understand what to do.\nThanks,\nDima", "bodyHTML": "<p>I faced the same issue:<br>\n<a rel=\"nofollow\" href=\"https://jsfiddle.net/DimaGorbenko/rdg5j45h/1/\">https://jsfiddle.net/DimaGorbenko/rdg5j45h/1/</a><br>\nIt's connected to stacking.<br>\nTry to remove key<br>\nstacking: \"normal\"<br>\nand you'll get chart.<br>\nBut I'd like to have stacked version :)</p>\n<p>The funny thing is what this chart was working in HC version 4.1.8, but stopped working in 4.2.1.<br>\nAt least these versions I have and I tested them.<br>\nI can do more testing to find exact version which stopped supporting this feature.</p>\n<p>What do you think, is it a bug, or broken feature ? Are you going to fix it ? Any plans ? I just need to understand what to do.</p>\n<p>Thanks,<br>\nDima</p>", "createdAt": "2016-11-23T11:28:53Z", "publishedAt": "2016-11-23T11:28:53Z", "lastEditedAt": null, "updatedAt": "2016-11-23T11:28:53Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8936, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I faced the same issue:", "sentSegmented": ["i", "faced", "the", "same", "issue"], "sentSegmentedWithoutStops": ["faced", "issue"], "sentSegmentedWithoutStopsStemmed": ["face", "issu"]}, {"number": 8937, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "https://jsfiddle.net/DimaGorbenko/rdg5j45h/1/", "sentSegmented": ["https", "//jsfiddle.net/dimagorbenko/rdg5j45h/1/"], "sentSegmentedWithoutStops": ["https", "//jsfiddle.net/dimagorbenko/rdg5j45h/1/"], "sentSegmentedWithoutStopsStemmed": ["http", "//jsfiddle.net/dimagorbenko/rdg5j45h/1/"]}, {"number": 8938, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's connected to stacking.", "sentSegmented": ["it", "'s", "connected", "to", "stacking"], "sentSegmentedWithoutStops": ["'s", "connected", "stacking"], "sentSegmentedWithoutStopsStemmed": ["'s", "connect", "stack"]}, {"number": 8939, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Try to remove key", "sentSegmented": ["try", "to", "remove", "key"], "sentSegmentedWithoutStops": ["try", "remove", "key"], "sentSegmentedWithoutStopsStemmed": ["tri", "remov", "key"]}, {"number": 8940, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "stacking: \"normal\"", "sentSegmented": ["stacking", "normal"], "sentSegmentedWithoutStops": ["stacking", "normal"], "sentSegmentedWithoutStopsStemmed": ["stack", "normal"]}, {"number": 8941, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "and you'll get chart.", "sentSegmented": ["and", "you", "'ll", "get", "chart"], "sentSegmentedWithoutStops": ["'ll", "get", "chart"], "sentSegmentedWithoutStopsStemmed": ["'ll", "get", "chart"]}, {"number": 8942, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But I'd like to have stacked version :)", "sentSegmented": ["but", "i", "'d", "like", "to", "have", "stacked", "version"], "sentSegmentedWithoutStops": ["'d", "like", "stacked", "version"], "sentSegmentedWithoutStopsStemmed": ["'d", "like", "stack", "version"]}, {"number": 8943, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The funny thing is what this chart was working in HC version 4.1.8, but stopped working in 4.2.1.", "sentSegmented": ["the", "funny", "thing", "is", "what", "this", "chart", "was", "working", "in", "hc", "version", "4.1.8", "but", "stopped", "working", "in", "4.2.1"], "sentSegmentedWithoutStops": ["funny", "thing", "chart", "working", "hc", "version", "4.1.8", "stopped", "working", "4.2.1"], "sentSegmentedWithoutStopsStemmed": ["funni", "thing", "chart", "work", "hc", "version", "4.1.8", "stop", "work", "4.2.1"]}, {"number": 8944, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "At least these versions I have and I tested them.", "sentSegmented": ["at", "least", "these", "versions", "i", "have", "and", "i", "tested", "them"], "sentSegmentedWithoutStops": ["least", "versions", "tested"], "sentSegmentedWithoutStopsStemmed": ["least", "version", "test"]}, {"number": 8945, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I can do more testing to find exact version which stopped supporting this feature.", "sentSegmented": ["i", "can", "do", "more", "testing", "to", "find", "exact", "version", "which", "stopped", "supporting", "this", "feature"], "sentSegmentedWithoutStops": ["testing", "find", "exact", "version", "stopped", "supporting", "feature"], "sentSegmentedWithoutStopsStemmed": ["test", "find", "exact", "version", "stop", "support", "featur"]}, {"number": 8946, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "What do you think, is it a bug, or broken feature ?", "sentSegmented": ["what", "do", "you", "think", "is", "it", "a", "bug", "or", "broken", "feature"], "sentSegmentedWithoutStops": ["think", "bug", "broken", "feature"], "sentSegmentedWithoutStopsStemmed": ["think", "bug", "broken", "featur"]}, {"number": 8947, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Are you going to fix it ?", "sentSegmented": ["are", "you", "going", "to", "fix", "it"], "sentSegmentedWithoutStops": ["going", "fix"], "sentSegmentedWithoutStopsStemmed": ["go", "fix"]}, {"number": 8948, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Any plans ?", "sentSegmented": ["any", "plans"], "sentSegmentedWithoutStops": ["plans"], "sentSegmentedWithoutStopsStemmed": ["plan"]}, {"number": 8949, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I just need to understand what to do.", "sentSegmented": ["i", "just", "need", "to", "understand", "what", "to", "do"], "sentSegmentedWithoutStops": ["need", "understand"], "sentSegmentedWithoutStopsStemmed": ["need", "understand"]}, {"number": 8950, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks,", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}, {"number": 8951, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Dima", "sentSegmented": ["dima"], "sentSegmentedWithoutStops": ["dima"], "sentSegmentedWithoutStopsStemmed": ["dima"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI2MjQ5NjE0Ng==", "author": {"login": "pawelfus"}, "body": "Hi @dmitrygorbenko \r\n\r\nThe issue is caused by this commit: 8d8cbee - where stack-indicator was introduced, and we missed this functionality in waterfall. It's not the same issue as the one originally posted. I created a separate issue for it: #6020\r\n\r\nThanks for reporting! Of course, we will fix this.", "bodyText": "Hi @dmitrygorbenko\nThe issue is caused by this commit: 8d8cbee - where stack-indicator was introduced, and we missed this functionality in waterfall. It's not the same issue as the one originally posted. I created a separate issue for it: #6020\nThanks for reporting! Of course, we will fix this.", "bodyHTML": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dmitrygorbenko/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dmitrygorbenko\">@dmitrygorbenko</a></p>\n<p>The issue is caused by this commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/highcharts/highcharts/commit/8d8cbeefd4ce94a3ad9ba97daa1171262abfbe9c/hovercard\" href=\"https://github.com/highcharts/highcharts/commit/8d8cbeefd4ce94a3ad9ba97daa1171262abfbe9c\"><tt>8d8cbee</tt></a> - where stack-indicator was introduced, and we missed this functionality in waterfall. It's not the same issue as the one originally posted. I created a separate issue for it: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"191252847\" data-permission-text=\"Title is private\" data-url=\"https://github.com/highcharts/highcharts/issues/6020\" data-hovercard-type=\"issue\" data-hovercard-url=\"/highcharts/highcharts/issues/6020/hovercard\" href=\"https://github.com/highcharts/highcharts/issues/6020\">#6020</a></p>\n<p>Thanks for reporting! Of course, we will fix this.</p>", "createdAt": "2016-11-23T12:03:06Z", "publishedAt": "2016-11-23T12:03:06Z", "lastEditedAt": "2016-11-23T12:04:28Z", "updatedAt": "2016-11-23T12:04:28Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8952, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hi @dmitrygorbenko", "sentSegmented": ["hi", "dmitrygorbenko"], "sentSegmentedWithoutStops": ["hi", "dmitrygorbenko"], "sentSegmentedWithoutStopsStemmed": ["hi", "dmitrygorbenko"]}, {"number": 8953, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The issue is caused by this commit: 8d8cbee - where stack-indicator was introduced, and we missed this functionality in waterfall.", "sentSegmented": ["the", "issue", "is", "caused", "by", "this", "commit", "8d8cbee", "where", "stack-indicator", "was", "introduced", "and", "we", "missed", "this", "functionality", "in", "waterfall"], "sentSegmentedWithoutStops": ["issue", "caused", "commit", "8d8cbee", "stack-indicator", "introduced", "missed", "functionality", "waterfall"], "sentSegmentedWithoutStopsStemmed": ["issu", "caus", "commit", "8d8cbee", "stack-ind", "introduc", "miss", "function", "waterfal"]}, {"number": 8954, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's not the same issue as the one originally posted.", "sentSegmented": ["it", "'s", "not", "the", "same", "issue", "as", "the", "one", "originally", "posted"], "sentSegmentedWithoutStops": ["'s", "issue", "one", "originally", "posted"], "sentSegmentedWithoutStopsStemmed": ["'s", "issu", "one", "origin", "post"]}, {"number": 8955, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I created a separate issue for it: #6020", "sentSegmented": ["i", "created", "a", "separate", "issue", "for", "it", "6020"], "sentSegmentedWithoutStops": ["created", "separate", "issue", "6020"], "sentSegmentedWithoutStopsStemmed": ["creat", "separ", "issu", "6020"]}, {"number": 8956, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks for reporting!", "sentSegmented": ["thanks", "for", "reporting"], "sentSegmentedWithoutStops": ["thanks", "reporting"], "sentSegmentedWithoutStopsStemmed": ["thank", "report"]}, {"number": 8957, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Of course, we will fix this.", "sentSegmented": ["of", "course", "we", "will", "fix", "this"], "sentSegmentedWithoutStops": ["course", "fix"], "sentSegmentedWithoutStopsStemmed": ["cours", "fix"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI2MjUzNTgxMg==", "author": {"login": "dmitrygorbenko"}, "body": "hi @pawelfus \r\n\r\nThank you !\r\nGreat to know you are working on this :+1:  or will )\r\nMeanwhile I'll try to use some other chart type.\r\n\r\nDima", "bodyText": "hi @pawelfus\nThank you !\nGreat to know you are working on this \ud83d\udc4d  or will )\nMeanwhile I'll try to use some other chart type.\nDima", "bodyHTML": "<p>hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/pawelfus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pawelfus\">@pawelfus</a></p>\n<p>Thank you !<br>\nGreat to know you are working on this <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji>  or will )<br>\nMeanwhile I'll try to use some other chart type.</p>\n<p>Dima</p>", "createdAt": "2016-11-23T14:56:18Z", "publishedAt": "2016-11-23T14:56:18Z", "lastEditedAt": "2016-11-23T14:56:32Z", "updatedAt": "2016-11-23T14:56:32Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8958, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "hi @pawelfus", "sentSegmented": ["hi", "pawelfus"], "sentSegmentedWithoutStops": ["hi", "pawelfus"], "sentSegmentedWithoutStopsStemmed": ["hi", "pawelfu"]}, {"number": 8959, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thank you !", "sentSegmented": ["thank", "you"], "sentSegmentedWithoutStops": ["thank"], "sentSegmentedWithoutStopsStemmed": ["thank"]}, {"number": 8960, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Great to know you are working on this \ud83d\udc4d  or will )", "sentSegmented": ["great", "to", "know", "you", "are", "working", "on", "this", "or", "will"], "sentSegmentedWithoutStops": ["great", "know", "working"], "sentSegmentedWithoutStopsStemmed": ["great", "know", "work"]}, {"number": 8961, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Meanwhile I'll try to use some other chart type.", "sentSegmented": ["meanwhile", "i", "'ll", "try", "to", "use", "some", "other", "chart", "type"], "sentSegmentedWithoutStops": ["meanwhile", "'ll", "try", "use", "chart", "type"], "sentSegmentedWithoutStopsStemmed": ["meanwhil", "'ll", "tri", "use", "chart", "type"]}, {"number": 8962, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Dima", "sentSegmented": ["dima"], "sentSegmentedWithoutStops": ["dima"], "sentSegmentedWithoutStopsStemmed": ["dima"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI4OTAzNzQxNw==", "author": {"login": "pawelfus"}, "body": "Example with the commit above: http://jsfiddle.net/2jLsLwnz/", "bodyText": "Example with the commit above: http://jsfiddle.net/2jLsLwnz/", "bodyHTML": "<p>Example with the commit above: <a rel=\"nofollow\" href=\"http://jsfiddle.net/2jLsLwnz/\">http://jsfiddle.net/2jLsLwnz/</a></p>", "createdAt": "2017-03-24T14:27:43Z", "publishedAt": "2017-03-24T14:27:43Z", "lastEditedAt": null, "updatedAt": "2017-03-24T14:27:43Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8963, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Example with the commit above: http://jsfiddle.net/2jLsLwnz/", "sentSegmented": ["example", "with", "the", "commit", "above", "http", "//jsfiddle.net/2jlslwnz/"], "sentSegmentedWithoutStops": ["example", "commit", "http", "//jsfiddle.net/2jlslwnz/"], "sentSegmentedWithoutStopsStemmed": ["exampl", "commit", "http", "//jsfiddle.net/2jlslwnz/"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMxMDAyMjk2Mw==", "author": {"login": "bendenois"}, "body": "Hi,\r\n\r\nDo you know when the fix will be released ?\r\n\r\nThank you.\r\n\r\nBenjamin", "bodyText": "Hi,\nDo you know when the fix will be released ?\nThank you.\nBenjamin", "bodyHTML": "<p>Hi,</p>\n<p>Do you know when the fix will be released ?</p>\n<p>Thank you.</p>\n<p>Benjamin</p>", "createdAt": "2017-06-21T09:26:53Z", "publishedAt": "2017-06-21T09:26:53Z", "lastEditedAt": null, "updatedAt": "2017-06-21T09:26:53Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8964, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hi,", "sentSegmented": ["hi"], "sentSegmentedWithoutStops": ["hi"], "sentSegmentedWithoutStopsStemmed": ["hi"]}, {"number": 8965, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Do you know when the fix will be released ?", "sentSegmented": ["do", "you", "know", "when", "the", "fix", "will", "be", "released"], "sentSegmentedWithoutStops": ["know", "fix", "released"], "sentSegmentedWithoutStopsStemmed": ["know", "fix", "releas"]}, {"number": 8966, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thank you.", "sentSegmented": ["thank", "you"], "sentSegmentedWithoutStops": ["thank"], "sentSegmentedWithoutStopsStemmed": ["thank"]}, {"number": 8967, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Benjamin", "sentSegmented": ["benjamin"], "sentSegmentedWithoutStops": ["benjamin"], "sentSegmentedWithoutStopsStemmed": ["benjamin"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMxMDA0NTg5OA==", "author": {"login": "sebastianbochan"}, "body": "@TorsteinHonsi \r\nIt seems that the commit is only on hc5-fixes and is not merged with master yet. Do we have any plans to do that or stacking has extra bugs? ", "bodyText": "@TorsteinHonsi\nIt seems that the commit is only on hc5-fixes and is not merged with master yet. Do we have any plans to do that or stacking has extra bugs?", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/TorsteinHonsi/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TorsteinHonsi\">@TorsteinHonsi</a><br>\nIt seems that the commit is only on hc5-fixes and is not merged with master yet. Do we have any plans to do that or stacking has extra bugs?</p>", "createdAt": "2017-06-21T11:09:58Z", "publishedAt": "2017-06-21T11:09:58Z", "lastEditedAt": "2017-06-21T11:10:10Z", "updatedAt": "2017-06-21T11:10:10Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8968, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@TorsteinHonsi", "sentSegmented": ["torsteinhonsi"], "sentSegmentedWithoutStops": ["torsteinhonsi"], "sentSegmentedWithoutStopsStemmed": ["torsteinhonsi"]}, {"number": 8969, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It seems that the commit is only on hc5-fixes and is not merged with master yet.", "sentSegmented": ["it", "seems", "that", "the", "commit", "is", "only", "on", "hc5-fixes", "and", "is", "not", "merged", "with", "master", "yet"], "sentSegmentedWithoutStops": ["seems", "commit", "hc5-fixes", "merged", "master", "yet"], "sentSegmentedWithoutStopsStemmed": ["seem", "commit", "hc5-fix", "merg", "master", "yet"]}, {"number": 8970, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Do we have any plans to do that or stacking has extra bugs?", "sentSegmented": ["do", "we", "have", "any", "plans", "to", "do", "that", "or", "stacking", "has", "extra", "bugs"], "sentSegmentedWithoutStops": ["plans", "stacking", "extra", "bugs"], "sentSegmentedWithoutStopsStemmed": ["plan", "stack", "extra", "bug"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMxMDMyMzM1OQ==", "author": {"login": "TorsteinHonsi"}, "body": "It is on the master too...", "bodyText": "It is on the master too...", "bodyHTML": "<p>It is on the master too...</p>", "createdAt": "2017-06-22T09:11:27Z", "publishedAt": "2017-06-22T09:11:27Z", "lastEditedAt": null, "updatedAt": "2017-06-22T09:11:27Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8971, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It is on the master too...", "sentSegmented": ["it", "is", "on", "the", "master", "too"], "sentSegmentedWithoutStops": ["master"], "sentSegmentedWithoutStopsStemmed": ["master"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMxMDMyNDcwMQ==", "author": {"login": "sebastianbochan"}, "body": "You are right, I run my local files which were not up to date.", "bodyText": "You are right, I run my local files which were not up to date.", "bodyHTML": "<p>You are right, I run my local files which were not up to date.</p>", "createdAt": "2017-06-22T09:16:52Z", "publishedAt": "2017-06-22T09:16:52Z", "lastEditedAt": "2017-06-22T09:16:59Z", "updatedAt": "2017-06-22T09:16:59Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8972, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You are right, I run my local files which were not up to date.", "sentSegmented": ["you", "are", "right", "i", "run", "my", "local", "files", "which", "were", "not", "up", "to", "date"], "sentSegmentedWithoutStops": ["right", "run", "local", "files", "date"], "sentSegmentedWithoutStopsStemmed": ["right", "run", "local", "file", "date"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM2OTIwMDc1Nw==", "author": {"login": "RenaldasK"}, "body": "Any update on this?", "bodyText": "Any update on this?", "bodyHTML": "<p>Any update on this?</p>", "createdAt": "2018-02-28T10:45:39Z", "publishedAt": "2018-02-28T10:45:39Z", "lastEditedAt": null, "updatedAt": "2018-02-28T10:45:39Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8973, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Any update on this?", "sentSegmented": ["any", "update", "on", "this"], "sentSegmentedWithoutStops": ["update"], "sentSegmentedWithoutStopsStemmed": ["updat"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM3MDQzNzQ5NQ==", "author": {"login": "TorsteinHonsi"}, "body": "@pawelfus ?\r\n", "bodyText": "@pawelfus ?", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/pawelfus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pawelfus\">@pawelfus</a> ?</p>", "createdAt": "2018-03-05T14:33:44Z", "publishedAt": "2018-03-05T14:33:44Z", "lastEditedAt": null, "updatedAt": "2018-03-05T14:33:44Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8974, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@pawelfus ?", "sentSegmented": ["pawelfus"], "sentSegmentedWithoutStops": ["pawelfus"], "sentSegmentedWithoutStopsStemmed": ["pawelfu"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM3MDQ1MjEwNQ==", "author": {"login": "pawelfus"}, "body": "Basic support for stacking is implemented: negative/positive points are fine: http://jsfiddle.net/2jLsLwnz/\r\n\r\nWhat me miss is support for different amount of points, for example in the original demo, we have only one point for the first series, without isSum/isIntermediate points. That case breaks stacking as we don't create any extra points. Simplified demos with the same amount of points: http://jsfiddle.net/BlackLabel/AFjAG/63/  (replaced with 0-values) and http://jsfiddle.net/BlackLabel/AFjAG/65/ (missing points, problem with lines, should be hidden). ", "bodyText": "Basic support for stacking is implemented: negative/positive points are fine: http://jsfiddle.net/2jLsLwnz/\nWhat me miss is support for different amount of points, for example in the original demo, we have only one point for the first series, without isSum/isIntermediate points. That case breaks stacking as we don't create any extra points. Simplified demos with the same amount of points: http://jsfiddle.net/BlackLabel/AFjAG/63/  (replaced with 0-values) and http://jsfiddle.net/BlackLabel/AFjAG/65/ (missing points, problem with lines, should be hidden).", "bodyHTML": "<p>Basic support for stacking is implemented: negative/positive points are fine: <a rel=\"nofollow\" href=\"http://jsfiddle.net/2jLsLwnz/\">http://jsfiddle.net/2jLsLwnz/</a></p>\n<p>What me miss is support for different amount of points, for example in the original demo, we have only one point for the first series, without isSum/isIntermediate points. That case breaks stacking as we don't create any extra points. Simplified demos with the same amount of points: <a rel=\"nofollow\" href=\"http://jsfiddle.net/BlackLabel/AFjAG/63/\">http://jsfiddle.net/BlackLabel/AFjAG/63/</a>  (replaced with 0-values) and <a rel=\"nofollow\" href=\"http://jsfiddle.net/BlackLabel/AFjAG/65/\">http://jsfiddle.net/BlackLabel/AFjAG/65/</a> (missing points, problem with lines, should be hidden).</p>", "createdAt": "2018-03-05T15:18:11Z", "publishedAt": "2018-03-05T15:18:11Z", "lastEditedAt": "2018-03-05T15:18:32Z", "updatedAt": "2018-03-05T15:18:32Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8975, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Basic support for stacking is implemented: negative/positive points are fine: http://jsfiddle.net/2jLsLwnz/", "sentSegmented": ["basic", "support", "for", "stacking", "is", "implemented", "negative/positive", "points", "are", "fine", "http", "//jsfiddle.net/2jlslwnz/"], "sentSegmentedWithoutStops": ["basic", "support", "stacking", "implemented", "negative/positive", "points", "fine", "http", "//jsfiddle.net/2jlslwnz/"], "sentSegmentedWithoutStopsStemmed": ["basic", "support", "stack", "implement", "negative/posit", "point", "fine", "http", "//jsfiddle.net/2jlslwnz/"]}, {"number": 8976, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "What me miss is support for different amount of points, for example in the original demo, we have only one point for the first series, without isSum/isIntermediate points.", "sentSegmented": ["what", "me", "miss", "is", "support", "for", "different", "amount", "of", "points", "for", "example", "in", "the", "original", "demo", "we", "have", "only", "one", "point", "for", "the", "first", "series", "without", "issum/isintermediate", "points"], "sentSegmentedWithoutStops": ["miss", "support", "different", "amount", "points", "example", "original", "demo", "one", "point", "first", "series", "without", "issum/isintermediate", "points"], "sentSegmentedWithoutStopsStemmed": ["miss", "support", "differ", "amount", "point", "exampl", "origin", "demo", "one", "point", "first", "seri", "without", "issum/isintermedi", "point"]}, {"number": 8977, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "That case breaks stacking as we don't create any extra points.", "sentSegmented": ["that", "case", "breaks", "stacking", "as", "we", "do", "n't", "create", "any", "extra", "points"], "sentSegmentedWithoutStops": ["case", "breaks", "stacking", "n't", "create", "extra", "points"], "sentSegmentedWithoutStopsStemmed": ["case", "break", "stack", "n't", "creat", "extra", "point"]}, {"number": 8978, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Simplified demos with the same amount of points: http://jsfiddle.net/BlackLabel/AFjAG/63/  (replaced with 0-values) and http://jsfiddle.net/BlackLabel/AFjAG/65/ (missing points, problem with lines, should be hidden).", "sentSegmented": ["simplified", "demos", "with", "the", "same", "amount", "of", "points", "http", "//jsfiddle.net/blacklabel/afjag/63/", "replaced", "with", "0-values", "and", "http", "//jsfiddle.net/blacklabel/afjag/65/", "missing", "points", "problem", "with", "lines", "should", "be", "hidden"], "sentSegmentedWithoutStops": ["simplified", "demos", "amount", "points", "http", "//jsfiddle.net/blacklabel/afjag/63/", "replaced", "0-values", "http", "//jsfiddle.net/blacklabel/afjag/65/", "missing", "points", "problem", "lines", "hidden"], "sentSegmentedWithoutStopsStemmed": ["simplifi", "demo", "amount", "point", "http", "//jsfiddle.net/blacklabel/afjag/63/", "replac", "0-valu", "http", "//jsfiddle.net/blacklabel/afjag/65/", "miss", "point", "problem", "line", "hidden"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM3MDczNjUxMA==", "author": {"login": "TorsteinHonsi"}, "body": "I added a sample for this, so people can see it can be done: 7ef966fa0b35ca58cecc352244d95f60db61a0b9.\r\n\r\nThere's also a problem with data labels positions.", "bodyText": "I added a sample for this, so people can see it can be done: 7ef966f.\nThere's also a problem with data labels positions.", "bodyHTML": "<p>I added a sample for this, so people can see it can be done: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/highcharts/highcharts/commit/7ef966fa0b35ca58cecc352244d95f60db61a0b9/hovercard\" href=\"https://github.com/highcharts/highcharts/commit/7ef966fa0b35ca58cecc352244d95f60db61a0b9\"><tt>7ef966f</tt></a>.</p>\n<p>There's also a problem with data labels positions.</p>", "createdAt": "2018-03-06T10:29:44Z", "publishedAt": "2018-03-06T10:29:44Z", "lastEditedAt": null, "updatedAt": "2018-03-06T10:29:44Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-03-06T11:01:37Z"}}]}, "bodyParsed": [{"number": 8979, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I added a sample for this, so people can see it can be done: 7ef966f.", "sentSegmented": ["i", "added", "a", "sample", "for", "this", "so", "people", "can", "see", "it", "can", "be", "done", "7ef966f"], "sentSegmentedWithoutStops": ["added", "sample", "people", "see", "done", "7ef966f"], "sentSegmentedWithoutStopsStemmed": ["ad", "sampl", "peopl", "see", "done", "7ef966f"]}, {"number": 8980, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "There's also a problem with data labels positions.", "sentSegmented": ["there", "'s", "also", "a", "problem", "with", "data", "labels", "positions"], "sentSegmentedWithoutStops": ["'s", "also", "problem", "data", "labels", "positions"], "sentSegmentedWithoutStopsStemmed": ["'s", "also", "problem", "data", "label", "posit"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM3MDg5Nzc3NA==", "author": {"login": "RenaldasK"}, "body": "Thanks!", "bodyText": "Thanks!", "bodyHTML": "<p>Thanks!</p>", "createdAt": "2018-03-06T19:25:17Z", "publishedAt": "2018-03-06T19:25:17Z", "lastEditedAt": null, "updatedAt": "2018-03-06T19:25:17Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8981, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks!", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MDc2MjY5OQ==", "author": {"login": "RenaldasK"}, "body": "@pawelfus the charts breaks if you change the first value in the first series to a negative. Go to your JSFiddle [http://jsfiddle.net/2jLsLwnz/](http://jsfiddle.net/2jLsLwnz/) and change the first data value in the first series from 20 to -20. The chart will throw an error and fail to render:\r\n\r\n`highcharts.js:25418 Uncaught TypeError: Cannot read property '0' of undefined\r\n    at object.translate (VM86 highcharts.js:25418)\r\n    at object.<anonymous> (VM87 highcharts-more.js:4756)\r\n    at object.obj.(/2jLsLwnz/anonymous function) [as translate] (https://github.highcharts.com/hc5-fixes/highcharts.js:923:16)\r\n    at object.translate (VM86 highcharts.js:29806)\r\n    at object.<anonymous> (VM87 highcharts-more.js:4942)\r\n    at object.obj.(/2jLsLwnz/anonymous function) [as translate] (https://github.highcharts.com/hc5-fixes/highcharts.js:923:16)\r\n    at object.translate (VM87 highcharts-more.js:3380)\r\n    at VM86 highcharts.js:21329\r\n    at Array.forEach (<anonymous>)\r\n    at H.each (VM86 highcharts.js:1698)`", "bodyText": "@pawelfus the charts breaks if you change the first value in the first series to a negative. Go to your JSFiddle http://jsfiddle.net/2jLsLwnz/ and change the first data value in the first series from 20 to -20. The chart will throw an error and fail to render:\nhighcharts.js:25418 Uncaught TypeError: Cannot read property '0' of undefined at object.translate (VM86 highcharts.js:25418) at object.<anonymous> (VM87 highcharts-more.js:4756) at object.obj.(/2jLsLwnz/anonymous function) [as translate] (https://github.highcharts.com/hc5-fixes/highcharts.js:923:16) at object.translate (VM86 highcharts.js:29806) at object.<anonymous> (VM87 highcharts-more.js:4942) at object.obj.(/2jLsLwnz/anonymous function) [as translate] (https://github.highcharts.com/hc5-fixes/highcharts.js:923:16) at object.translate (VM87 highcharts-more.js:3380) at VM86 highcharts.js:21329 at Array.forEach (<anonymous>) at H.each (VM86 highcharts.js:1698)", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/pawelfus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pawelfus\">@pawelfus</a> the charts breaks if you change the first value in the first series to a negative. Go to your JSFiddle <a rel=\"nofollow\" href=\"http://jsfiddle.net/2jLsLwnz/\">http://jsfiddle.net/2jLsLwnz/</a> and change the first data value in the first series from 20 to -20. The chart will throw an error and fail to render:</p>\n<p><code>highcharts.js:25418 Uncaught TypeError: Cannot read property '0' of undefined at object.translate (VM86 highcharts.js:25418) at object.&lt;anonymous&gt; (VM87 highcharts-more.js:4756) at object.obj.(/2jLsLwnz/anonymous function) [as translate] (https://github.highcharts.com/hc5-fixes/highcharts.js:923:16) at object.translate (VM86 highcharts.js:29806) at object.&lt;anonymous&gt; (VM87 highcharts-more.js:4942) at object.obj.(/2jLsLwnz/anonymous function) [as translate] (https://github.highcharts.com/hc5-fixes/highcharts.js:923:16) at object.translate (VM87 highcharts-more.js:3380) at VM86 highcharts.js:21329 at Array.forEach (&lt;anonymous&gt;) at H.each (VM86 highcharts.js:1698)</code></p>", "createdAt": "2018-04-12T10:51:27Z", "publishedAt": "2018-04-12T10:51:27Z", "lastEditedAt": null, "updatedAt": "2018-04-12T10:51:27Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8982, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@pawelfus the charts breaks if you change the first value in the first series to a negative.", "sentSegmented": ["pawelfus", "the", "charts", "breaks", "if", "you", "change", "the", "first", "value", "in", "the", "first", "series", "to", "a", "negative"], "sentSegmentedWithoutStops": ["pawelfus", "charts", "breaks", "change", "first", "value", "first", "series", "negative"], "sentSegmentedWithoutStopsStemmed": ["pawelfu", "chart", "break", "chang", "first", "valu", "first", "seri", "neg"]}, {"number": 8983, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Go to your JSFiddle http://jsfiddle.net/2jLsLwnz/ and change the first data value in the first series from 20 to -20.", "sentSegmented": ["go", "to", "your", "jsfiddle", "http", "//jsfiddle.net/2jlslwnz/", "and", "change", "the", "first", "data", "value", "in", "the", "first", "series", "from", "20", "to", "-20"], "sentSegmentedWithoutStops": ["go", "jsfiddle", "http", "//jsfiddle.net/2jlslwnz/", "change", "first", "data", "value", "first", "series", "20", "-20"], "sentSegmentedWithoutStopsStemmed": ["go", "jsfiddl", "http", "//jsfiddle.net/2jlslwnz/", "chang", "first", "data", "valu", "first", "seri", "20", "-20"]}, {"number": 8984, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The chart will throw an error and fail to render:", "sentSegmented": ["the", "chart", "will", "throw", "an", "error", "and", "fail", "to", "render"], "sentSegmentedWithoutStops": ["chart", "throw", "error", "fail", "render"], "sentSegmentedWithoutStopsStemmed": ["chart", "throw", "error", "fail", "render"]}, {"number": 8985, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "highcharts.js:25418 Uncaught TypeError: Cannot read property '0' of undefined at object.translate (VM86 highcharts.js:25418) at object.", "sentSegmented": ["highcharts.js:25418", "uncaught", "typeerror", "can", "not", "read", "property", "0", "of", "undefined", "at", "object.translate", "vm86", "highcharts.js:25418", "at", "object"], "sentSegmentedWithoutStops": ["highcharts.js:25418", "uncaught", "typeerror", "read", "property", "0", "undefined", "object.translate", "vm86", "highcharts.js:25418", "object"], "sentSegmentedWithoutStopsStemmed": ["highcharts.js:25418", "uncaught", "typeerror", "read", "properti", "0", "undefin", "object.transl", "vm86", "highcharts.js:25418", "object"]}, {"number": 8986, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(VM87 highcharts-more.js:4756) at object.obj.", "sentSegmented": ["vm87", "highcharts-more.js:4756", "at", "object.obj"], "sentSegmentedWithoutStops": ["vm87", "highcharts-more.js:4756", "object.obj"], "sentSegmentedWithoutStopsStemmed": ["vm87", "highcharts-more.js:4756", "object.obj"]}, {"number": 8987, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(/2jLsLwnz/anonymous function) [as translate] (https://github.highcharts.com/hc5-fixes/highcharts.js:923:16) at object.translate (VM86 highcharts.js:29806) at object.", "sentSegmented": ["/2jlslwnz/anonymous", "function", "as", "translate", "https", "//github.highcharts.com/hc5-fixes/highcharts.js:923:16", "at", "object.translate", "vm86", "highcharts.js:29806", "at", "object"], "sentSegmentedWithoutStops": ["/2jlslwnz/anonymous", "function", "translate", "https", "//github.highcharts.com/hc5-fixes/highcharts.js:923:16", "object.translate", "vm86", "highcharts.js:29806", "object"], "sentSegmentedWithoutStopsStemmed": ["/2jlslwnz/anonym", "function", "translat", "http", "//github.highcharts.com/hc5-fixes/highcharts.js:923:16", "object.transl", "vm86", "highcharts.js:29806", "object"]}, {"number": 8988, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(VM87 highcharts-more.js:4942) at object.obj.", "sentSegmented": ["vm87", "highcharts-more.js:4942", "at", "object.obj"], "sentSegmentedWithoutStops": ["vm87", "highcharts-more.js:4942", "object.obj"], "sentSegmentedWithoutStopsStemmed": ["vm87", "highcharts-more.js:4942", "object.obj"]}, {"number": 8989, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(/2jLsLwnz/anonymous function) [as translate] (https://github.highcharts.com/hc5-fixes/highcharts.js:923:16) at object.translate (VM87 highcharts-more.js:3380) at VM86 highcharts.js:21329 at Array.forEach () at H.each (VM86 highcharts.js:1698)", "sentSegmented": ["/2jlslwnz/anonymous", "function", "as", "translate", "https", "//github.highcharts.com/hc5-fixes/highcharts.js:923:16", "at", "object.translate", "vm87", "highcharts-more.js:3380", "at", "vm86", "highcharts.js:21329", "at", "array.foreach", "at", "h.each", "vm86", "highcharts.js:1698"], "sentSegmentedWithoutStops": ["/2jlslwnz/anonymous", "function", "translate", "https", "//github.highcharts.com/hc5-fixes/highcharts.js:923:16", "object.translate", "vm87", "highcharts-more.js:3380", "vm86", "highcharts.js:21329", "array.foreach", "h.each", "vm86", "highcharts.js:1698"], "sentSegmentedWithoutStopsStemmed": ["/2jlslwnz/anonym", "function", "translat", "http", "//github.highcharts.com/hc5-fixes/highcharts.js:923:16", "object.transl", "vm87", "highcharts-more.js:3380", "vm86", "highcharts.js:21329", "array.foreach", "h.each", "vm86", "highcharts.js:1698"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MDc2NDcxOQ==", "author": {"login": "pawelfus"}, "body": "Thanks! I will check this today/tomorrow.", "bodyText": "Thanks! I will check this today/tomorrow.", "bodyHTML": "<p>Thanks! I will check this today/tomorrow.</p>", "createdAt": "2018-04-12T10:58:45Z", "publishedAt": "2018-04-12T10:58:45Z", "lastEditedAt": null, "updatedAt": "2018-04-12T10:58:45Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8990, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks!", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}, {"number": 8991, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I will check this today/tomorrow.", "sentSegmented": ["i", "will", "check", "this", "today/tomorrow"], "sentSegmentedWithoutStops": ["check", "today/tomorrow"], "sentSegmentedWithoutStopsStemmed": ["check", "today/tomorrow"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MDg2Mjk5OA==", "author": {"login": "RenaldasK"}, "body": "After a lot trial and error here is what I found: \r\nit's unable to render the chart if the sum or intermediate sum in the series adds up to a negative total.\r\n\r\nExample:\r\nStacked waterfall with the following data in one of the series will render the chart fine:\r\n`\r\n[\r\n  -20,\r\n  20,\r\n  { isIntermediateSum: true }, \r\n  30,\r\n  -30,\r\n  { isSum: true }\r\n]\r\n`\r\nNotice how the values before `intermediateSum` add up to 0, as well as the values before isSum add up to 0. However if the negative values are increased even by 1, the library throws an error and fails to render the chart, e.g.:\r\n`\r\n[\r\n  -21,\r\n  20,\r\n  { isIntermediateSum: true }, \r\n  30,\r\n  -30,\r\n  { isSum: true }\r\n]\r\n`\r\nHowever if the positive values are increased too, the chart will render fine again, e.g.:\r\n`\r\n[\r\n  -21,\r\n  21,\r\n  { isIntermediateSum: true }, \r\n  30,\r\n  -30,\r\n  { isSum: true }\r\n]\r\n`\r\n\r\nI need to get this working for a client, and any workaround will do. If this cannot be fixed/workaround, I will have to resort to using some \"hacky\" approach with stacked bar charts to recreate stacked waterfall using invisible bars or something (if that is even possible).\r\n\r\nAny help is much appreciated! Thanks!", "bodyText": "After a lot trial and error here is what I found:\nit's unable to render the chart if the sum or intermediate sum in the series adds up to a negative total.\nExample:\nStacked waterfall with the following data in one of the series will render the chart fine:\n[ -20, 20, { isIntermediateSum: true },  30, -30, { isSum: true } ]\nNotice how the values before intermediateSum add up to 0, as well as the values before isSum add up to 0. However if the negative values are increased even by 1, the library throws an error and fails to render the chart, e.g.:\n[ -21, 20, { isIntermediateSum: true },  30, -30, { isSum: true } ]\nHowever if the positive values are increased too, the chart will render fine again, e.g.:\n[ -21, 21, { isIntermediateSum: true },  30, -30, { isSum: true } ]\nI need to get this working for a client, and any workaround will do. If this cannot be fixed/workaround, I will have to resort to using some \"hacky\" approach with stacked bar charts to recreate stacked waterfall using invisible bars or something (if that is even possible).\nAny help is much appreciated! Thanks!", "bodyHTML": "<p>After a lot trial and error here is what I found:<br>\nit's unable to render the chart if the sum or intermediate sum in the series adds up to a negative total.</p>\n<p>Example:<br>\nStacked waterfall with the following data in one of the series will render the chart fine:<br>\n<code>[ -20, 20, { isIntermediateSum: true },  30, -30, { isSum: true } ]</code><br>\nNotice how the values before <code>intermediateSum</code> add up to 0, as well as the values before isSum add up to 0. However if the negative values are increased even by 1, the library throws an error and fails to render the chart, e.g.:<br>\n<code>[ -21, 20, { isIntermediateSum: true },  30, -30, { isSum: true } ]</code><br>\nHowever if the positive values are increased too, the chart will render fine again, e.g.:<br>\n<code>[ -21, 21, { isIntermediateSum: true },  30, -30, { isSum: true } ]</code></p>\n<p>I need to get this working for a client, and any workaround will do. If this cannot be fixed/workaround, I will have to resort to using some \"hacky\" approach with stacked bar charts to recreate stacked waterfall using invisible bars or something (if that is even possible).</p>\n<p>Any help is much appreciated! Thanks!</p>", "createdAt": "2018-04-12T16:20:00Z", "publishedAt": "2018-04-12T16:20:00Z", "lastEditedAt": null, "updatedAt": "2018-04-12T16:20:00Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-04-13T11:18:01Z"}}]}, "bodyParsed": [{"number": 8992, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "After a lot trial and error here is what I found:", "sentSegmented": ["after", "a", "lot", "trial", "and", "error", "here", "is", "what", "i", "found"], "sentSegmentedWithoutStops": ["lot", "trial", "error", "found"], "sentSegmentedWithoutStopsStemmed": ["lot", "trial", "error", "found"]}, {"number": 8993, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "it's unable to render the chart if the sum or intermediate sum in the series adds up to a negative total.", "sentSegmented": ["it", "'s", "unable", "to", "render", "the", "chart", "if", "the", "sum", "or", "intermediate", "sum", "in", "the", "series", "adds", "up", "to", "a", "negative", "total"], "sentSegmentedWithoutStops": ["'s", "unable", "render", "chart", "sum", "intermediate", "sum", "series", "adds", "negative", "total"], "sentSegmentedWithoutStopsStemmed": ["'s", "unabl", "render", "chart", "sum", "intermedi", "sum", "seri", "add", "neg", "total"]}, {"number": 8994, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Example:", "sentSegmented": ["example"], "sentSegmentedWithoutStops": ["example"], "sentSegmentedWithoutStopsStemmed": ["exampl"]}, {"number": 8995, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Stacked waterfall with the following data in one of the series will render the chart fine:", "sentSegmented": ["stacked", "waterfall", "with", "the", "following", "data", "in", "one", "of", "the", "series", "will", "render", "the", "chart", "fine"], "sentSegmentedWithoutStops": ["stacked", "waterfall", "following", "data", "one", "series", "render", "chart", "fine"], "sentSegmentedWithoutStopsStemmed": ["stack", "waterfal", "follow", "data", "one", "seri", "render", "chart", "fine"]}, {"number": 8996, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "[ -20, 20, { isIntermediateSum: true },  30, -30, { isSum: true } ]", "sentSegmented": ["-20", "20", "isintermediatesum", "true", "30", "-30", "issum", "true"], "sentSegmentedWithoutStops": ["-20", "20", "isintermediatesum", "true", "30", "-30", "issum", "true"], "sentSegmentedWithoutStopsStemmed": ["-20", "20", "isintermediatesum", "true", "30", "-30", "issum", "true"]}, {"number": 8997, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Notice how the values before intermediateSum add up to 0, as well as the values before isSum add up to 0.", "sentSegmented": ["notice", "how", "the", "values", "before", "intermediatesum", "add", "up", "to", "0", "as", "well", "as", "the", "values", "before", "issum", "add", "up", "to", "0"], "sentSegmentedWithoutStops": ["notice", "values", "intermediatesum", "add", "0", "well", "values", "issum", "add", "0"], "sentSegmentedWithoutStopsStemmed": ["notic", "valu", "intermediatesum", "add", "0", "well", "valu", "issum", "add", "0"]}, {"number": 8998, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "However if the negative values are increased even by 1, the library throws an error and fails to render the chart, e.g.", "sentSegmented": ["however", "if", "the", "negative", "values", "are", "increased", "even", "by", "1", "the", "library", "throws", "an", "error", "and", "fails", "to", "render", "the", "chart", "e.g"], "sentSegmentedWithoutStops": ["however", "negative", "values", "increased", "even", "1", "library", "throws", "error", "fails", "render", "chart", "e.g"], "sentSegmentedWithoutStopsStemmed": ["howev", "neg", "valu", "increas", "even", "1", "librari", "throw", "error", "fail", "render", "chart", "e.g"]}, {"number": 8999, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": ":", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 9000, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "[ -21, 20, { isIntermediateSum: true },  30, -30, { isSum: true } ]", "sentSegmented": ["-21", "20", "isintermediatesum", "true", "30", "-30", "issum", "true"], "sentSegmentedWithoutStops": ["-21", "20", "isintermediatesum", "true", "30", "-30", "issum", "true"], "sentSegmentedWithoutStopsStemmed": ["-21", "20", "isintermediatesum", "true", "30", "-30", "issum", "true"]}, {"number": 9001, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "However if the positive values are increased too, the chart will render fine again, e.g.", "sentSegmented": ["however", "if", "the", "positive", "values", "are", "increased", "too", "the", "chart", "will", "render", "fine", "again", "e.g"], "sentSegmentedWithoutStops": ["however", "positive", "values", "increased", "chart", "render", "fine", "e.g"], "sentSegmentedWithoutStopsStemmed": ["howev", "posit", "valu", "increas", "chart", "render", "fine", "e.g"]}, {"number": 9002, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": ":", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 9003, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "[ -21, 21, { isIntermediateSum: true },  30, -30, { isSum: true } ]", "sentSegmented": ["-21", "21", "isintermediatesum", "true", "30", "-30", "issum", "true"], "sentSegmentedWithoutStops": ["-21", "21", "isintermediatesum", "true", "30", "-30", "issum", "true"], "sentSegmentedWithoutStopsStemmed": ["-21", "21", "isintermediatesum", "true", "30", "-30", "issum", "true"]}, {"number": 9004, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I need to get this working for a client, and any workaround will do.", "sentSegmented": ["i", "need", "to", "get", "this", "working", "for", "a", "client", "and", "any", "workaround", "will", "do"], "sentSegmentedWithoutStops": ["need", "get", "working", "client", "workaround"], "sentSegmentedWithoutStopsStemmed": ["need", "get", "work", "client", "workaround"]}, {"number": 9005, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If this cannot be fixed/workaround, I will have to resort to using some \"hacky\" approach with stacked bar charts to recreate stacked waterfall using invisible bars or something (if that is even possible).", "sentSegmented": ["if", "this", "can", "not", "be", "fixed/workaround", "i", "will", "have", "to", "resort", "to", "using", "some", "hacky", "approach", "with", "stacked", "bar", "charts", "to", "recreate", "stacked", "waterfall", "using", "invisible", "bars", "or", "something", "if", "that", "is", "even", "possible"], "sentSegmentedWithoutStops": ["fixed/workaround", "resort", "using", "hacky", "approach", "stacked", "bar", "charts", "recreate", "stacked", "waterfall", "using", "invisible", "bars", "something", "even", "possible"], "sentSegmentedWithoutStopsStemmed": ["fixed/workaround", "resort", "use", "hacki", "approach", "stack", "bar", "chart", "recreat", "stack", "waterfal", "use", "invis", "bar", "someth", "even", "possibl"]}, {"number": 9006, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Any help is much appreciated!", "sentSegmented": ["any", "help", "is", "much", "appreciated"], "sentSegmentedWithoutStops": ["help", "much", "appreciated"], "sentSegmentedWithoutStopsStemmed": ["help", "much", "appreci"]}, {"number": 9007, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks!", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MTE2MjE1NQ==", "author": {"login": "pawelfus"}, "body": "@RenaldasK Workaround: columnrange is good for this case, simply calculate high+low for each point before rendering series: http://jsfiddle.net/BlackLabel/2jLsLwnz/172/\r\n\r\nStill, questionable is position for negative stacks - what should happen to intermediateSum/Sum when values within a series sums up to 0? Should we display just a bar without height (0pixels) or should we render two stacks within one column (one negative and one positive)? Both are reasonable. I will explore this area.\r\n\r\n*Internal note:*\r\nIssue is a bit more complicated than is seems.. Demos: http://jsfiddle.net/BlackLabel/2jLsLwnz/157/ or http://jsfiddle.net/BlackLabel/2jLsLwnz/156/ - this is result of having two separate stacks (negative and positive) which works fine for all types (and makes sense) but not for waterfall. Honestly, I don't know how stack with points [5, 10, -15] should be rendered. Probably should start from the previous point state and render separate stacks then?\r\n\r\nIn general, within a stack (stack=points on the same x-position, the same category) values should have the same sign: for example category on a waterfall \"taxes\" is always negative, the same for \"cost of X\". If we require this, then we could improve stacking in waterfall.\r\n\r\n ", "bodyText": "@RenaldasK Workaround: columnrange is good for this case, simply calculate high+low for each point before rendering series: http://jsfiddle.net/BlackLabel/2jLsLwnz/172/\nStill, questionable is position for negative stacks - what should happen to intermediateSum/Sum when values within a series sums up to 0? Should we display just a bar without height (0pixels) or should we render two stacks within one column (one negative and one positive)? Both are reasonable. I will explore this area.\nInternal note:\nIssue is a bit more complicated than is seems.. Demos: http://jsfiddle.net/BlackLabel/2jLsLwnz/157/ or http://jsfiddle.net/BlackLabel/2jLsLwnz/156/ - this is result of having two separate stacks (negative and positive) which works fine for all types (and makes sense) but not for waterfall. Honestly, I don't know how stack with points [5, 10, -15] should be rendered. Probably should start from the previous point state and render separate stacks then?\nIn general, within a stack (stack=points on the same x-position, the same category) values should have the same sign: for example category on a waterfall \"taxes\" is always negative, the same for \"cost of X\". If we require this, then we could improve stacking in waterfall.", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RenaldasK/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RenaldasK\">@RenaldasK</a> Workaround: columnrange is good for this case, simply calculate high+low for each point before rendering series: <a rel=\"nofollow\" href=\"http://jsfiddle.net/BlackLabel/2jLsLwnz/172/\">http://jsfiddle.net/BlackLabel/2jLsLwnz/172/</a></p>\n<p>Still, questionable is position for negative stacks - what should happen to intermediateSum/Sum when values within a series sums up to 0? Should we display just a bar without height (0pixels) or should we render two stacks within one column (one negative and one positive)? Both are reasonable. I will explore this area.</p>\n<p><em>Internal note:</em><br>\nIssue is a bit more complicated than is seems.. Demos: <a rel=\"nofollow\" href=\"http://jsfiddle.net/BlackLabel/2jLsLwnz/157/\">http://jsfiddle.net/BlackLabel/2jLsLwnz/157/</a> or <a rel=\"nofollow\" href=\"http://jsfiddle.net/BlackLabel/2jLsLwnz/156/\">http://jsfiddle.net/BlackLabel/2jLsLwnz/156/</a> - this is result of having two separate stacks (negative and positive) which works fine for all types (and makes sense) but not for waterfall. Honestly, I don't know how stack with points [5, 10, -15] should be rendered. Probably should start from the previous point state and render separate stacks then?</p>\n<p>In general, within a stack (stack=points on the same x-position, the same category) values should have the same sign: for example category on a waterfall \"taxes\" is always negative, the same for \"cost of X\". If we require this, then we could improve stacking in waterfall.</p>", "createdAt": "2018-04-13T14:56:47Z", "publishedAt": "2018-04-13T14:56:47Z", "lastEditedAt": "2018-04-13T14:57:01Z", "updatedAt": "2018-04-13T14:57:01Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 9008, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@RenaldasK Workaround: columnrange is good for this case, simply calculate high+low for each point before rendering series: http://jsfiddle.net/BlackLabel/2jLsLwnz/172/", "sentSegmented": ["renaldask", "workaround", "columnrange", "is", "good", "for", "this", "case", "simply", "calculate", "high+low", "for", "each", "point", "before", "rendering", "series", "http", "//jsfiddle.net/blacklabel/2jlslwnz/172/"], "sentSegmentedWithoutStops": ["renaldask", "workaround", "columnrange", "good", "case", "simply", "calculate", "high+low", "point", "rendering", "series", "http", "//jsfiddle.net/blacklabel/2jlslwnz/172/"], "sentSegmentedWithoutStopsStemmed": ["renaldask", "workaround", "columnrang", "good", "case", "simpli", "calcul", "high+low", "point", "render", "seri", "http", "//jsfiddle.net/blacklabel/2jlslwnz/172/"]}, {"number": 9009, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Still, questionable is position for negative stacks - what should happen to intermediateSum/Sum when values within a series sums up to 0?", "sentSegmented": ["still", "questionable", "is", "position", "for", "negative", "stacks", "what", "should", "happen", "to", "intermediatesum/sum", "when", "values", "within", "a", "series", "sums", "up", "to", "0"], "sentSegmentedWithoutStops": ["still", "questionable", "position", "negative", "stacks", "happen", "intermediatesum/sum", "values", "within", "series", "sums", "0"], "sentSegmentedWithoutStopsStemmed": ["still", "question", "posit", "neg", "stack", "happen", "intermediatesum/sum", "valu", "within", "seri", "sum", "0"]}, {"number": 9010, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Should we display just a bar without height (0pixels) or should we render two stacks within one column (one negative and one positive)?", "sentSegmented": ["should", "we", "display", "just", "a", "bar", "without", "height", "0pixels", "or", "should", "we", "render", "two", "stacks", "within", "one", "column", "one", "negative", "and", "one", "positive"], "sentSegmentedWithoutStops": ["display", "bar", "without", "height", "0pixels", "render", "two", "stacks", "within", "one", "column", "one", "negative", "one", "positive"], "sentSegmentedWithoutStopsStemmed": ["display", "bar", "without", "height", "0pixel", "render", "two", "stack", "within", "one", "column", "one", "neg", "one", "posit"]}, {"number": 9011, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Both are reasonable.", "sentSegmented": ["both", "are", "reasonable"], "sentSegmentedWithoutStops": ["reasonable"], "sentSegmentedWithoutStopsStemmed": ["reason"]}, {"number": 9012, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I will explore this area.", "sentSegmented": ["i", "will", "explore", "this", "area"], "sentSegmentedWithoutStops": ["explore", "area"], "sentSegmentedWithoutStopsStemmed": ["explor", "area"]}, {"number": 9013, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Internal note:", "sentSegmented": ["internal", "note"], "sentSegmentedWithoutStops": ["internal", "note"], "sentSegmentedWithoutStopsStemmed": ["intern", "note"]}, {"number": 9014, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Issue is a bit more complicated than is seems.. Demos: http://jsfiddle.net/BlackLabel/2jLsLwnz/157/ or http://jsfiddle.net/BlackLabel/2jLsLwnz/156/ - this is result of having two separate stacks (negative and positive) which works fine for all types (and makes sense) but not for waterfall.", "sentSegmented": ["issue", "is", "a", "bit", "more", "complicated", "than", "is", "seems", "demos", "http", "//jsfiddle.net/blacklabel/2jlslwnz/157/", "or", "http", "//jsfiddle.net/blacklabel/2jlslwnz/156/", "this", "is", "result", "of", "having", "two", "separate", "stacks", "negative", "and", "positive", "which", "works", "fine", "for", "all", "types", "and", "makes", "sense", "but", "not", "for", "waterfall"], "sentSegmentedWithoutStops": ["issue", "bit", "complicated", "seems", "demos", "http", "//jsfiddle.net/blacklabel/2jlslwnz/157/", "http", "//jsfiddle.net/blacklabel/2jlslwnz/156/", "result", "two", "separate", "stacks", "negative", "positive", "works", "fine", "types", "makes", "sense", "waterfall"], "sentSegmentedWithoutStopsStemmed": ["issu", "bit", "complic", "seem", "demo", "http", "//jsfiddle.net/blacklabel/2jlslwnz/157/", "http", "//jsfiddle.net/blacklabel/2jlslwnz/156/", "result", "two", "separ", "stack", "neg", "posit", "work", "fine", "type", "make", "sens", "waterfal"]}, {"number": 9015, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Honestly, I don't know how stack with points [5, 10, -15] should be rendered.", "sentSegmented": ["honestly", "i", "do", "n't", "know", "how", "stack", "with", "points", "5", "10", "-15", "should", "be", "rendered"], "sentSegmentedWithoutStops": ["honestly", "n't", "know", "stack", "points", "5", "10", "-15", "rendered"], "sentSegmentedWithoutStopsStemmed": ["honestli", "n't", "know", "stack", "point", "5", "10", "-15", "render"]}, {"number": 9016, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Probably should start from the previous point state and render separate stacks then?", "sentSegmented": ["probably", "should", "start", "from", "the", "previous", "point", "state", "and", "render", "separate", "stacks", "then"], "sentSegmentedWithoutStops": ["probably", "start", "previous", "point", "state", "render", "separate", "stacks"], "sentSegmentedWithoutStopsStemmed": ["probabl", "start", "previou", "point", "state", "render", "separ", "stack"]}, {"number": 9017, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In general, within a stack (stack=points on the same x-position, the same category) values should have the same sign: for example category on a waterfall \"taxes\" is always negative, the same for \"cost of X\".", "sentSegmented": ["in", "general", "within", "a", "stack", "stack=points", "on", "the", "same", "x-position", "the", "same", "category", "values", "should", "have", "the", "same", "sign", "for", "example", "category", "on", "a", "waterfall", "taxes", "is", "always", "negative", "the", "same", "for", "cost", "of", "x"], "sentSegmentedWithoutStops": ["general", "within", "stack", "stack=points", "x-position", "category", "values", "sign", "example", "category", "waterfall", "taxes", "always", "negative", "cost", "x"], "sentSegmentedWithoutStopsStemmed": ["gener", "within", "stack", "stack=point", "x-posit", "categori", "valu", "sign", "exampl", "categori", "waterfal", "tax", "alway", "neg", "cost", "x"]}, {"number": 9018, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If we require this, then we could improve stacking in waterfall.", "sentSegmented": ["if", "we", "require", "this", "then", "we", "could", "improve", "stacking", "in", "waterfall"], "sentSegmentedWithoutStops": ["require", "could", "improve", "stacking", "waterfall"], "sentSegmentedWithoutStopsStemmed": ["requir", "could", "improv", "stack", "waterfal"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MTE4OTk4Nw==", "author": {"login": "RenaldasK"}, "body": "@pawelfus Thanks a lot for the workaround! I believe it should suffice for my needs. \r\n\r\nRegarding rendering stacks with negative points, we had the same discussion in our team and it's not clear to us either how they should be rendered, so we ended up asking the client for more details/examples on how those charts should look like. \r\n\r\nI will update the issue if there is a \"right\" way of rendering them, but to me it sounds like it's a limitation with stacked waterfall charts.\r\n\r\nThanks again for being so prompt!", "bodyText": "@pawelfus Thanks a lot for the workaround! I believe it should suffice for my needs.\nRegarding rendering stacks with negative points, we had the same discussion in our team and it's not clear to us either how they should be rendered, so we ended up asking the client for more details/examples on how those charts should look like.\nI will update the issue if there is a \"right\" way of rendering them, but to me it sounds like it's a limitation with stacked waterfall charts.\nThanks again for being so prompt!", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/pawelfus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pawelfus\">@pawelfus</a> Thanks a lot for the workaround! I believe it should suffice for my needs.</p>\n<p>Regarding rendering stacks with negative points, we had the same discussion in our team and it's not clear to us either how they should be rendered, so we ended up asking the client for more details/examples on how those charts should look like.</p>\n<p>I will update the issue if there is a \"right\" way of rendering them, but to me it sounds like it's a limitation with stacked waterfall charts.</p>\n<p>Thanks again for being so prompt!</p>", "createdAt": "2018-04-13T16:29:29Z", "publishedAt": "2018-04-13T16:29:29Z", "lastEditedAt": null, "updatedAt": "2018-04-13T16:29:29Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 9019, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@pawelfus Thanks a lot for the workaround!", "sentSegmented": ["pawelfus", "thanks", "a", "lot", "for", "the", "workaround"], "sentSegmentedWithoutStops": ["pawelfus", "thanks", "lot", "workaround"], "sentSegmentedWithoutStopsStemmed": ["pawelfu", "thank", "lot", "workaround"]}, {"number": 9020, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I believe it should suffice for my needs.", "sentSegmented": ["i", "believe", "it", "should", "suffice", "for", "my", "needs"], "sentSegmentedWithoutStops": ["believe", "suffice", "needs"], "sentSegmentedWithoutStopsStemmed": ["believ", "suffic", "need"]}, {"number": 9021, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Regarding rendering stacks with negative points, we had the same discussion in our team and it's not clear to us either how they should be rendered, so we ended up asking the client for more details/examples on how those charts should look like.", "sentSegmented": ["regarding", "rendering", "stacks", "with", "negative", "points", "we", "had", "the", "same", "discussion", "in", "our", "team", "and", "it", "'s", "not", "clear", "to", "us", "either", "how", "they", "should", "be", "rendered", "so", "we", "ended", "up", "asking", "the", "client", "for", "more", "details/examples", "on", "how", "those", "charts", "should", "look", "like"], "sentSegmentedWithoutStops": ["regarding", "rendering", "stacks", "negative", "points", "discussion", "team", "'s", "clear", "us", "either", "rendered", "ended", "asking", "client", "details/examples", "charts", "look", "like"], "sentSegmentedWithoutStopsStemmed": ["regard", "render", "stack", "neg", "point", "discuss", "team", "'s", "clear", "us", "either", "render", "end", "ask", "client", "details/exampl", "chart", "look", "like"]}, {"number": 9022, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I will update the issue if there is a \"right\" way of rendering them, but to me it sounds like it's a limitation with stacked waterfall charts.", "sentSegmented": ["i", "will", "update", "the", "issue", "if", "there", "is", "a", "right", "way", "of", "rendering", "them", "but", "to", "me", "it", "sounds", "like", "it", "'s", "a", "limitation", "with", "stacked", "waterfall", "charts"], "sentSegmentedWithoutStops": ["update", "issue", "right", "way", "rendering", "sounds", "like", "'s", "limitation", "stacked", "waterfall", "charts"], "sentSegmentedWithoutStopsStemmed": ["updat", "issu", "right", "way", "render", "sound", "like", "'s", "limit", "stack", "waterfal", "chart"]}, {"number": 9023, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks again for being so prompt!", "sentSegmented": ["thanks", "again", "for", "being", "so", "prompt"], "sentSegmentedWithoutStops": ["thanks", "prompt"], "sentSegmentedWithoutStopsStemmed": ["thank", "prompt"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MTUzODY0MA==", "author": {"login": "pawelfus"}, "body": "Thanks! I think the \"right\" solution is to provide only negative/positive values within a stack. ", "bodyText": "Thanks! I think the \"right\" solution is to provide only negative/positive values within a stack.", "bodyHTML": "<p>Thanks! I think the \"right\" solution is to provide only negative/positive values within a stack.</p>", "createdAt": "2018-04-16T09:32:29Z", "publishedAt": "2018-04-16T09:32:29Z", "lastEditedAt": null, "updatedAt": "2018-04-16T09:32:29Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 9024, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks!", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}, {"number": 9025, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I think the \"right\" solution is to provide only negative/positive values within a stack.", "sentSegmented": ["i", "think", "the", "right", "solution", "is", "to", "provide", "only", "negative/positive", "values", "within", "a", "stack"], "sentSegmentedWithoutStops": ["think", "right", "solution", "provide", "negative/positive", "values", "within", "stack"], "sentSegmentedWithoutStopsStemmed": ["think", "right", "solut", "provid", "negative/posit", "valu", "within", "stack"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4Mjc0MDYwOA==", "author": {"login": "pawelfus"}, "body": "*Internal note:*\r\nDebugged issue with negative values:\r\n\r\n- `point.y` is set for sums after stacks are calculated\r\n- when stacking, `point.y` is used to determine stack positive/negative. However it's undefined, so we use positive stack..", "bodyText": "Internal note:\nDebugged issue with negative values:\n\npoint.y is set for sums after stacks are calculated\nwhen stacking, point.y is used to determine stack positive/negative. However it's undefined, so we use positive stack..", "bodyHTML": "<p><em>Internal note:</em><br>\nDebugged issue with negative values:</p>\n<ul>\n<li><code>point.y</code> is set for sums after stacks are calculated</li>\n<li>when stacking, <code>point.y</code> is used to determine stack positive/negative. However it's undefined, so we use positive stack..</li>\n</ul>", "createdAt": "2018-04-19T13:42:58Z", "publishedAt": "2018-04-19T13:42:58Z", "lastEditedAt": null, "updatedAt": "2018-04-19T13:42:58Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 9026, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Internal note:", "sentSegmented": ["internal", "note"], "sentSegmentedWithoutStops": ["internal", "note"], "sentSegmentedWithoutStopsStemmed": ["intern", "note"]}, {"number": 9027, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Debugged issue with negative values:", "sentSegmented": ["debugged", "issue", "with", "negative", "values"], "sentSegmentedWithoutStops": ["debugged", "issue", "negative", "values"], "sentSegmentedWithoutStopsStemmed": ["debug", "issu", "neg", "valu"]}, {"number": 9028, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "point.y is set for sums after stacks are calculated", "sentSegmented": ["point.y", "is", "set", "for", "sums", "after", "stacks", "are", "calculated"], "sentSegmentedWithoutStops": ["point.y", "set", "sums", "stacks", "calculated"], "sentSegmentedWithoutStopsStemmed": ["point.i", "set", "sum", "stack", "calcul"]}, {"number": 9029, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "when stacking, point.y is used to determine stack positive/negative.", "sentSegmented": ["when", "stacking", "point.y", "is", "used", "to", "determine", "stack", "positive/negative"], "sentSegmentedWithoutStops": ["stacking", "point.y", "used", "determine", "stack", "positive/negative"], "sentSegmentedWithoutStopsStemmed": ["stack", "point.i", "use", "determin", "stack", "positive/neg"]}, {"number": 9030, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "However it's undefined, so we use positive stack..", "sentSegmented": ["however", "it", "'s", "undefined", "so", "we", "use", "positive", "stack"], "sentSegmentedWithoutStops": ["however", "'s", "undefined", "use", "positive", "stack"], "sentSegmentedWithoutStopsStemmed": ["howev", "'s", "undefin", "use", "posit", "stack"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4Mjc1MjkyMg==", "author": {"login": "pawelfus"}, "body": "**Workaround:**\r\nDemo: http://jsfiddle.net/BlackLabel/2jLsLwnz/197/\r\n\r\n```javascript\r\n(function(H) {\r\n  H.seriesTypes.waterfall.prototype.generatePoints = function() {\r\n    var previousIntermediate = this.options.threshold,\r\n      point,\r\n      len,\r\n      i,\r\n      y;\r\n    // Parent call:\r\n    H.seriesTypes.column.prototype.generatePoints.apply(this);\r\n\r\n    for (i = 0, len = this.points.length; i < len; i++) {\r\n      point = this.points[i];\r\n      y = this.processedYData[i];\r\n      // override point value for sums\r\n      // #3710 Update point does not propagate to sum\r\n      if (point.isSum) {\r\n        point.y = H.correctFloat(y);\r\n      } else if (point.isIntermediateSum) {\r\n        point.y = H.correctFloat(y - previousIntermediate); // #3840\r\n        previousIntermediate = y;\r\n      }\r\n    }\r\n  };\r\n})(Highcharts)\r\n```", "bodyText": "Workaround:\nDemo: http://jsfiddle.net/BlackLabel/2jLsLwnz/197/\n(function(H) {\n  H.seriesTypes.waterfall.prototype.generatePoints = function() {\n    var previousIntermediate = this.options.threshold,\n      point,\n      len,\n      i,\n      y;\n    // Parent call:\n    H.seriesTypes.column.prototype.generatePoints.apply(this);\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      point = this.points[i];\n      y = this.processedYData[i];\n      // override point value for sums\n      // #3710 Update point does not propagate to sum\n      if (point.isSum) {\n        point.y = H.correctFloat(y);\n      } else if (point.isIntermediateSum) {\n        point.y = H.correctFloat(y - previousIntermediate); // #3840\n        previousIntermediate = y;\n      }\n    }\n  };\n})(Highcharts)", "bodyHTML": "<p><strong>Workaround:</strong><br>\nDemo: <a rel=\"nofollow\" href=\"http://jsfiddle.net/BlackLabel/2jLsLwnz/197/\">http://jsfiddle.net/BlackLabel/2jLsLwnz/197/</a></p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">H</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-v\">H</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">seriesTypes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">waterfall</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">generatePoints</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">var</span> <span class=\"pl-s1\">previousIntermediate</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">options</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">threshold</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s1\">point</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s1\">len</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s1\">i</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-s1\">y</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-c\">// Parent call:</span>\n    <span class=\"pl-v\">H</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">seriesTypes</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">column</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">generatePoints</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">apply</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n    <span class=\"pl-k\">for</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">i</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">len</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">points</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">&lt;</span> <span class=\"pl-s1\">len</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">++</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">point</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">points</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-s1\">y</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">processedYData</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-c\">// override point value for sums</span>\n      <span class=\"pl-c\">// #3710 Update point does not propagate to sum</span>\n      <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">point</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isSum</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">point</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">y</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">H</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">correctFloat</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">y</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span> <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">point</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">isIntermediateSum</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">point</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">y</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">H</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">correctFloat</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">y</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">previousIntermediate</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// #3840</span>\n        <span class=\"pl-s1\">previousIntermediate</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">y</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Highcharts</span><span class=\"pl-kos\">)</span></pre></div>", "createdAt": "2018-04-19T14:15:40Z", "publishedAt": "2018-04-19T14:15:40Z", "lastEditedAt": null, "updatedAt": "2018-04-19T14:15:40Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 9031, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Workaround:", "sentSegmented": ["workaround"], "sentSegmentedWithoutStops": ["workaround"], "sentSegmentedWithoutStopsStemmed": ["workaround"]}, {"number": 9032, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Demo: http://jsfiddle.net/BlackLabel/2jLsLwnz/197/", "sentSegmented": ["demo", "http", "//jsfiddle.net/blacklabel/2jlslwnz/197/"], "sentSegmentedWithoutStops": ["demo", "http", "//jsfiddle.net/blacklabel/2jlslwnz/197/"], "sentSegmentedWithoutStopsStemmed": ["demo", "http", "//jsfiddle.net/blacklabel/2jlslwnz/197/"]}, {"number": 9033, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(function(H) {", "sentSegmented": ["function", "h"], "sentSegmentedWithoutStops": ["h"], "sentSegmentedWithoutStopsStemmed": ["h"]}, {"number": 9034, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  H.seriesTypes.waterfall.prototype.generatePoints = function() {", "sentSegmented": ["h.seriestypes.waterfall.prototype.generatepoints", "function"], "sentSegmentedWithoutStops": ["h.seriestypes.waterfall.prototype.generatepoints"], "sentSegmentedWithoutStopsStemmed": ["h.seriestypes.waterfall.prototype.generatepoint"]}, {"number": 9035, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    var previousIntermediate = this.options.threshold,", "sentSegmented": ["var", "previousintermediate", "this.options.threshold"], "sentSegmentedWithoutStops": ["previousintermediate", "this.options.threshold"], "sentSegmentedWithoutStopsStemmed": ["previousintermedi", "this.options.threshold"]}, {"number": 9036, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      point,", "sentSegmented": ["point"], "sentSegmentedWithoutStops": ["point"], "sentSegmentedWithoutStopsStemmed": ["point"]}, {"number": 9037, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      len,", "sentSegmented": ["len"], "sentSegmentedWithoutStops": ["len"], "sentSegmentedWithoutStopsStemmed": ["len"]}, {"number": 9038, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      i,", "sentSegmented": ["i"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 9039, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      y;", "sentSegmented": ["y"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 9040, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Parent call:", "sentSegmented": ["parent", "call"], "sentSegmentedWithoutStops": ["parent"], "sentSegmentedWithoutStopsStemmed": ["parent"]}, {"number": 9041, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    H.seriesTypes.column.prototype.generatePoints.apply(this);", "sentSegmented": ["h.seriestypes.column.prototype.generatepoints.apply", "this"], "sentSegmentedWithoutStops": ["h.seriestypes.column.prototype.generatepoints.apply"], "sentSegmentedWithoutStopsStemmed": ["h.seriestypes.column.prototype.generatepoints.appli"]}, {"number": 9042, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    for (i = 0, len = this.points.length; i < len; i++) {", "sentSegmented": ["for", "i", "0", "len", "this.points.length", "i", "len", "i++"], "sentSegmentedWithoutStops": ["0", "len", "this.points.length", "len", "i++"], "sentSegmentedWithoutStopsStemmed": ["0", "len", "this.points.length", "len", "i++"]}, {"number": 9043, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      point = this.points[i];", "sentSegmented": ["point", "this.points", "i"], "sentSegmentedWithoutStops": ["point", "this.points"], "sentSegmentedWithoutStopsStemmed": ["point", "this.point"]}, {"number": 9044, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      y = this.processedYData[i];", "sentSegmented": ["y", "this.processedydata", "i"], "sentSegmentedWithoutStops": ["this.processedydata"], "sentSegmentedWithoutStopsStemmed": ["this.processedydata"]}, {"number": 9045, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      // override point value for sums", "sentSegmented": ["override", "point", "value", "for", "sums"], "sentSegmentedWithoutStops": ["override", "point", "value", "sums"], "sentSegmentedWithoutStopsStemmed": ["overrid", "point", "valu", "sum"]}, {"number": 9046, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      // #3710 Update point does not propagate to sum", "sentSegmented": ["3710", "update", "point", "does", "not", "propagate", "to", "sum"], "sentSegmentedWithoutStops": ["3710", "update", "point", "propagate", "sum"], "sentSegmentedWithoutStopsStemmed": ["3710", "updat", "point", "propag", "sum"]}, {"number": 9047, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      if (point.isSum) {", "sentSegmented": ["if", "point.issum"], "sentSegmentedWithoutStops": ["point.issum"], "sentSegmentedWithoutStopsStemmed": ["point.issum"]}, {"number": 9048, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "        point.y = H.correctFloat(y);", "sentSegmented": ["point.y", "h.correctfloat", "y"], "sentSegmentedWithoutStops": ["point.y", "h.correctfloat"], "sentSegmentedWithoutStopsStemmed": ["point.i", "h.correctfloat"]}, {"number": 9049, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      } else if (point.isIntermediateSum) {", "sentSegmented": ["else", "if", "point.isintermediatesum"], "sentSegmentedWithoutStops": ["point.isintermediatesum"], "sentSegmentedWithoutStopsStemmed": ["point.isintermediatesum"]}, {"number": 9050, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "        point.y = H.correctFloat(y - previousIntermediate); // #3840", "sentSegmented": ["point.y", "h.correctfloat", "y", "previousintermediate", "3840"], "sentSegmentedWithoutStops": ["point.y", "h.correctfloat", "previousintermediate", "3840"], "sentSegmentedWithoutStopsStemmed": ["point.i", "h.correctfloat", "previousintermedi", "3840"]}, {"number": 9051, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "        previousIntermediate = y;", "sentSegmented": ["previousintermediate", "y"], "sentSegmentedWithoutStops": ["previousintermediate"], "sentSegmentedWithoutStopsStemmed": ["previousintermedi"]}, {"number": 9052, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 9053, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 9054, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  };", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 9055, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "})(Highcharts)", "sentSegmented": ["highcharts"], "sentSegmentedWithoutStops": ["highcharts"], "sentSegmentedWithoutStopsStemmed": ["highchart"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ3NjI0MzQzOQ==", "author": {"login": "PaulDalek"}, "body": "A new stacking option (overlap) is available for stacked waterfall series now (https://api.highcharts.com/highcharts/series.waterfall.stacking).", "bodyText": "A new stacking option (overlap) is available for stacked waterfall series now (https://api.highcharts.com/highcharts/series.waterfall.stacking).", "bodyHTML": "<p>A new stacking option (overlap) is available for stacked waterfall series now (<a rel=\"nofollow\" href=\"https://api.highcharts.com/highcharts/series.waterfall.stacking\">https://api.highcharts.com/highcharts/series.waterfall.stacking</a>).</p>", "createdAt": "2019-03-25T15:17:40Z", "publishedAt": "2019-03-25T15:17:40Z", "lastEditedAt": null, "updatedAt": "2019-03-25T15:17:40Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 9056, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "A new stacking option (overlap) is available for stacked waterfall series now (https://api.highcharts.com/highcharts/series.waterfall.stacking).", "sentSegmented": ["a", "new", "stacking", "option", "overlap", "is", "available", "for", "stacked", "waterfall", "series", "now", "https", "//api.highcharts.com/highcharts/series.waterfall.stacking"], "sentSegmentedWithoutStops": ["new", "stacking", "option", "overlap", "available", "stacked", "waterfall", "series", "https", "//api.highcharts.com/highcharts/series.waterfall.stacking"], "sentSegmentedWithoutStopsStemmed": ["new", "stack", "option", "overlap", "avail", "stack", "waterfal", "seri", "http", "//api.highcharts.com/highcharts/series.waterfall.stack"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOFr3RUA==", "hasNextPage": true}, "totalCount": 23}, "labels": {"edges": [{"node": {"createdAt": "2007-10-20T11:24:19Z", "name": "Type: Enhancement"}}]}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-02-28T10:45:23Z"}}]}, "state": "CLOSED", "titleSegmented": ["waterfall", "stacking"], "titleSegmentedWithoutStops": ["waterfall", "stacking"], "titleSegmentedWithoutStopsStemmed": ["waterfal", "stack"], "bodyParsed": [{"number": 8932, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Stacked waterfall seems to not working.", "sentSegmented": ["stacked", "waterfall", "seems", "to", "not", "working"], "sentSegmentedWithoutStops": ["stacked", "waterfall", "seems", "working"], "sentSegmentedWithoutStopsStemmed": ["stack", "waterfal", "seem", "work"]}, {"number": 8933, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Example: http://jsfiddle.net/AFjAG/7/", "sentSegmented": ["example", "http", "//jsfiddle.net/afjag/7/"], "sentSegmentedWithoutStops": ["example", "http", "//jsfiddle.net/afjag/7/"], "sentSegmentedWithoutStopsStemmed": ["exampl", "http", "//jsfiddle.net/afjag/7/"]}, {"number": 8934, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "HC 3.0.5", "sentSegmented": ["hc", "3.0.5"], "sentSegmentedWithoutStops": ["hc", "3.0.5"], "sentSegmentedWithoutStopsStemmed": ["hc", "3.0.5"]}]}