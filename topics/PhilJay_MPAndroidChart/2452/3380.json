{"repository": {"owner": {"login": "PhilJay"}, "name": "MPAndroidChart", "forkCount": 8313, "stargazerCount": 32958, "createdAt": "2014-04-25T14:29:47Z", "updatedAt": "2021-03-18T02:59:22Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "java"}}}, {"node": {"topic": {"name": "chart"}}}, {"node": {"topic": {"name": "graph"}}}, {"node": {"topic": {"name": "android"}}}, {"node": {"topic": {"name": "mpandroidchart"}}}]}, "languages": {"edges": [{"node": {"name": "Java"}}]}, "primaryLanguage": {"name": "Java"}}, "id": "MDU6SXNzdWUyNTMxNTA4MDg=", "number": 3380, "author": {"login": "lucadln"}, "title": "Bar entry values are not displayed in HorizontalBarCharts", "body": "A horizontal bar chart was creating using the following code:\r\n\r\n        \r\n        // Initialize bar chart\r\n        HorizontalBarChart barChart = (HorizontalBarChart) findViewById(R.id.chart);\r\n\r\n        // Create bars\r\n        ArrayList<BarEntry> points = new ArrayList<>();\r\n        points.add(new BarEntry(0f, 80));\r\n        points.add(new BarEntry(1f, 50));\r\n        points.add(new BarEntry(2f, 20));\r\n        points.add(new BarEntry(3f, 60));\r\n        points.add(new BarEntry(4f, 80));\r\n        points.add(new BarEntry(5f, 100));\r\n        points.add(new BarEntry(6f, 50));\r\n        // Add bars to a bar set\r\n        BarDataSet barSet = new BarDataSet(points, \"Tenses\");\r\n        // Create a BarData object and assign it to the chart\r\n        BarData barData = new BarData(barSet);\r\n        // Display it as a percentage\r\n        barData.setValueFormatter(new PercentFormatter());\r\n        barChart.setData(barData);\r\n\r\n        barSet.setDrawValues(true);\r\n\r\n        barChart.invalidate();`\r\n\r\nWhen running the application, the values corresponding to each bar are not displayed.\r\n\r\n![demo_photo](https://user-images.githubusercontent.com/27018423/29748386-d2a71f38-8b1e-11e7-81a8-f11a827de263.png)\r\n\r\nThe expected result was to show values like in this picture:\r\n\r\n![e1bpe](https://user-images.githubusercontent.com/27018423/29748508-e95485ac-8b20-11e7-8f32-4a3ec44632fd.jpeg)\r\n\r\n\r\nThis was tested using the MPAndroidChart:v3.0.2.", "bodyHTML": "<p>A horizontal bar chart was creating using the following code:</p>\n<pre><code>    // Initialize bar chart\n    HorizontalBarChart barChart = (HorizontalBarChart) findViewById(R.id.chart);\n\n    // Create bars\n    ArrayList&lt;BarEntry&gt; points = new ArrayList&lt;&gt;();\n    points.add(new BarEntry(0f, 80));\n    points.add(new BarEntry(1f, 50));\n    points.add(new BarEntry(2f, 20));\n    points.add(new BarEntry(3f, 60));\n    points.add(new BarEntry(4f, 80));\n    points.add(new BarEntry(5f, 100));\n    points.add(new BarEntry(6f, 50));\n    // Add bars to a bar set\n    BarDataSet barSet = new BarDataSet(points, \"Tenses\");\n    // Create a BarData object and assign it to the chart\n    BarData barData = new BarData(barSet);\n    // Display it as a percentage\n    barData.setValueFormatter(new PercentFormatter());\n    barChart.setData(barData);\n\n    barSet.setDrawValues(true);\n\n    barChart.invalidate();`\n</code></pre>\n<p>When running the application, the values corresponding to each bar are not displayed.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/27018423/29748386-d2a71f38-8b1e-11e7-81a8-f11a827de263.png\"><img src=\"https://user-images.githubusercontent.com/27018423/29748386-d2a71f38-8b1e-11e7-81a8-f11a827de263.png\" alt=\"demo_photo\" style=\"max-width:100%;\"></a></p>\n<p>The expected result was to show values like in this picture:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/27018423/29748508-e95485ac-8b20-11e7-8f32-4a3ec44632fd.jpeg\"><img src=\"https://user-images.githubusercontent.com/27018423/29748508-e95485ac-8b20-11e7-8f32-4a3ec44632fd.jpeg\" alt=\"e1bpe\" style=\"max-width:100%;\"></a></p>\n<p>This was tested using the MPAndroidChart:v3.0.2.</p>", "bodyText": "A horizontal bar chart was creating using the following code:\n    // Initialize bar chart\n    HorizontalBarChart barChart = (HorizontalBarChart) findViewById(R.id.chart);\n\n    // Create bars\n    ArrayList<BarEntry> points = new ArrayList<>();\n    points.add(new BarEntry(0f, 80));\n    points.add(new BarEntry(1f, 50));\n    points.add(new BarEntry(2f, 20));\n    points.add(new BarEntry(3f, 60));\n    points.add(new BarEntry(4f, 80));\n    points.add(new BarEntry(5f, 100));\n    points.add(new BarEntry(6f, 50));\n    // Add bars to a bar set\n    BarDataSet barSet = new BarDataSet(points, \"Tenses\");\n    // Create a BarData object and assign it to the chart\n    BarData barData = new BarData(barSet);\n    // Display it as a percentage\n    barData.setValueFormatter(new PercentFormatter());\n    barChart.setData(barData);\n\n    barSet.setDrawValues(true);\n\n    barChart.invalidate();`\n\nWhen running the application, the values corresponding to each bar are not displayed.\n\nThe expected result was to show values like in this picture:\n\nThis was tested using the MPAndroidChart:v3.0.2.", "assignees": {"edges": []}, "createdAt": "2017-08-27T08:58:18Z", "closed": true, "closedAt": "2017-09-02T07:03:58Z", "lastEditedAt": "2017-08-27T09:12:19Z", "publishedAt": "2017-08-27T08:58:18Z", "comments": {"totalCount": 8, "edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDMyNTE5Njg3OA==", "author": {"login": "lucadln"}, "body": "Well after working more on this it seems that this is sometimes working and sometimes not. This is the corresponding code.\r\n       \r\n\r\n         // Initialize bar chart\r\n        HorizontalBarChart barChart = (HorizontalBarChart) findViewById(R.id.chart);\r\n\r\n        obtainAllScores(scores);\r\n\r\n        // Create bars\r\n        ArrayList<BarEntry> yvalues = new ArrayList<>();\r\n        yvalues.add(new BarEntry(0f, percentages[0]));\r\n        yvalues.add(new BarEntry(1f, percentages[1]));\r\n        yvalues.add(new BarEntry(2f, percentages[2]));\r\n        yvalues.add(new BarEntry(3f, percentages[3]));\r\n        yvalues.add(new BarEntry(4f, percentages[4]));\r\n        yvalues.add(new BarEntry(5f, percentages[5]));\r\n        yvalues.add(new BarEntry(6f, percentages[6]));\r\n\r\n        // Create a data set\r\n        BarDataSet dataSet = new BarDataSet(yvalues, \"Tenses\");\r\n        dataSet.setDrawValues(true);\r\n\r\n        // Create a data object from the dataSet\r\n        BarData data = new BarData(dataSet);\r\n        // Format data as percentage\r\n        data.setValueFormatter(new PercentFormatter());\r\n\r\n        // Make the chart use the acquired data\r\n        barChart.setData(data);\r\n\r\n        // Create the labels for the bars\r\n        final ArrayList<String> xVals = new ArrayList<>();\r\n        xVals.add(\"Present\");\r\n        xVals.add(\"Pres. Continuous\");\r\n        xVals.add(\"Simple Past\");\r\n        xVals.add(\"Past Perfect\");\r\n        xVals.add(\"Conditional\");\r\n        xVals.add(\"Cond. Perfect\");\r\n        xVals.add(\"Future\");\r\n\r\n        // Display labels for bars\r\n        barChart.getXAxis().setValueFormatter(new IndexAxisValueFormatter(xVals));\r\n\r\n        // Set the maximum value that can be taken by the bars\r\n        barChart.getAxisLeft().setAxisMaximum(100);\r\n\r\n        // Bars are sliding in from left to right\r\n        barChart.animateXY(1000, 1000);\r\n        // Display scores inside the bars\r\n        barChart.setDrawValueAboveBar(false);\r\n\r\n        // Hide grid lines\r\n        barChart.getAxisLeft().setEnabled(false);\r\n        barChart.getAxisRight().setEnabled(false);\r\n        // Hide graph description\r\n        barChart.getDescription().setEnabled(false);\r\n        // Hide graph legend\r\n        barChart.getLegend().setEnabled(false);\r\n\r\n        // Design\r\n        dataSet.setColors(ColorTemplate.VORDIPLOM_COLORS);\r\n        data.setValueTextSize(13f);\r\n        data.setValueTextColor(Color.DKGRAY);\r\n\r\n        barChart.invalidate();\r\n\r\n\r\nWhen all bars have the value 100 no percentage is shown. \r\n\r\n![not_shown](https://user-images.githubusercontent.com/27018423/29750163-977ae668-8b43-11e7-833e-fcd9b3cdf958.png)\r\n\r\nHowever if I make one bar to have the value 0 then percentages will be shown. \r\n\r\n![shown](https://user-images.githubusercontent.com/27018423/29750165-9eef34bc-8b43-11e7-85a9-2d9ad6772d49.png)\r\n\r\nOnce the percentage changes the values will dissapear again.\r\n\r\nThe whole code is available on the DCT15 branch on my git repo https://github.com/lucadln/android.git in the DutchConjugationTrainer folder.\r\n\r\nLATER EDIT: After more investigation it seems that this is a duplicate of #2452 and #2180 .It would be great if there would be at least a workaround for this.", "bodyText": "Well after working more on this it seems that this is sometimes working and sometimes not. This is the corresponding code.\n     // Initialize bar chart\n    HorizontalBarChart barChart = (HorizontalBarChart) findViewById(R.id.chart);\n\n    obtainAllScores(scores);\n\n    // Create bars\n    ArrayList<BarEntry> yvalues = new ArrayList<>();\n    yvalues.add(new BarEntry(0f, percentages[0]));\n    yvalues.add(new BarEntry(1f, percentages[1]));\n    yvalues.add(new BarEntry(2f, percentages[2]));\n    yvalues.add(new BarEntry(3f, percentages[3]));\n    yvalues.add(new BarEntry(4f, percentages[4]));\n    yvalues.add(new BarEntry(5f, percentages[5]));\n    yvalues.add(new BarEntry(6f, percentages[6]));\n\n    // Create a data set\n    BarDataSet dataSet = new BarDataSet(yvalues, \"Tenses\");\n    dataSet.setDrawValues(true);\n\n    // Create a data object from the dataSet\n    BarData data = new BarData(dataSet);\n    // Format data as percentage\n    data.setValueFormatter(new PercentFormatter());\n\n    // Make the chart use the acquired data\n    barChart.setData(data);\n\n    // Create the labels for the bars\n    final ArrayList<String> xVals = new ArrayList<>();\n    xVals.add(\"Present\");\n    xVals.add(\"Pres. Continuous\");\n    xVals.add(\"Simple Past\");\n    xVals.add(\"Past Perfect\");\n    xVals.add(\"Conditional\");\n    xVals.add(\"Cond. Perfect\");\n    xVals.add(\"Future\");\n\n    // Display labels for bars\n    barChart.getXAxis().setValueFormatter(new IndexAxisValueFormatter(xVals));\n\n    // Set the maximum value that can be taken by the bars\n    barChart.getAxisLeft().setAxisMaximum(100);\n\n    // Bars are sliding in from left to right\n    barChart.animateXY(1000, 1000);\n    // Display scores inside the bars\n    barChart.setDrawValueAboveBar(false);\n\n    // Hide grid lines\n    barChart.getAxisLeft().setEnabled(false);\n    barChart.getAxisRight().setEnabled(false);\n    // Hide graph description\n    barChart.getDescription().setEnabled(false);\n    // Hide graph legend\n    barChart.getLegend().setEnabled(false);\n\n    // Design\n    dataSet.setColors(ColorTemplate.VORDIPLOM_COLORS);\n    data.setValueTextSize(13f);\n    data.setValueTextColor(Color.DKGRAY);\n\n    barChart.invalidate();\n\nWhen all bars have the value 100 no percentage is shown.\n\nHowever if I make one bar to have the value 0 then percentages will be shown.\n\nOnce the percentage changes the values will dissapear again.\nThe whole code is available on the DCT15 branch on my git repo https://github.com/lucadln/android.git in the DutchConjugationTrainer folder.\nLATER EDIT: After more investigation it seems that this is a duplicate of #2452 and #2180 .It would be great if there would be at least a workaround for this.", "bodyHTML": "<p>Well after working more on this it seems that this is sometimes working and sometimes not. This is the corresponding code.</p>\n<pre><code>     // Initialize bar chart\n    HorizontalBarChart barChart = (HorizontalBarChart) findViewById(R.id.chart);\n\n    obtainAllScores(scores);\n\n    // Create bars\n    ArrayList&lt;BarEntry&gt; yvalues = new ArrayList&lt;&gt;();\n    yvalues.add(new BarEntry(0f, percentages[0]));\n    yvalues.add(new BarEntry(1f, percentages[1]));\n    yvalues.add(new BarEntry(2f, percentages[2]));\n    yvalues.add(new BarEntry(3f, percentages[3]));\n    yvalues.add(new BarEntry(4f, percentages[4]));\n    yvalues.add(new BarEntry(5f, percentages[5]));\n    yvalues.add(new BarEntry(6f, percentages[6]));\n\n    // Create a data set\n    BarDataSet dataSet = new BarDataSet(yvalues, \"Tenses\");\n    dataSet.setDrawValues(true);\n\n    // Create a data object from the dataSet\n    BarData data = new BarData(dataSet);\n    // Format data as percentage\n    data.setValueFormatter(new PercentFormatter());\n\n    // Make the chart use the acquired data\n    barChart.setData(data);\n\n    // Create the labels for the bars\n    final ArrayList&lt;String&gt; xVals = new ArrayList&lt;&gt;();\n    xVals.add(\"Present\");\n    xVals.add(\"Pres. Continuous\");\n    xVals.add(\"Simple Past\");\n    xVals.add(\"Past Perfect\");\n    xVals.add(\"Conditional\");\n    xVals.add(\"Cond. Perfect\");\n    xVals.add(\"Future\");\n\n    // Display labels for bars\n    barChart.getXAxis().setValueFormatter(new IndexAxisValueFormatter(xVals));\n\n    // Set the maximum value that can be taken by the bars\n    barChart.getAxisLeft().setAxisMaximum(100);\n\n    // Bars are sliding in from left to right\n    barChart.animateXY(1000, 1000);\n    // Display scores inside the bars\n    barChart.setDrawValueAboveBar(false);\n\n    // Hide grid lines\n    barChart.getAxisLeft().setEnabled(false);\n    barChart.getAxisRight().setEnabled(false);\n    // Hide graph description\n    barChart.getDescription().setEnabled(false);\n    // Hide graph legend\n    barChart.getLegend().setEnabled(false);\n\n    // Design\n    dataSet.setColors(ColorTemplate.VORDIPLOM_COLORS);\n    data.setValueTextSize(13f);\n    data.setValueTextColor(Color.DKGRAY);\n\n    barChart.invalidate();\n</code></pre>\n<p>When all bars have the value 100 no percentage is shown.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/27018423/29750163-977ae668-8b43-11e7-833e-fcd9b3cdf958.png\"><img src=\"https://user-images.githubusercontent.com/27018423/29750163-977ae668-8b43-11e7-833e-fcd9b3cdf958.png\" alt=\"not_shown\" style=\"max-width:100%;\"></a></p>\n<p>However if I make one bar to have the value 0 then percentages will be shown.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/27018423/29750165-9eef34bc-8b43-11e7-85a9-2d9ad6772d49.png\"><img src=\"https://user-images.githubusercontent.com/27018423/29750165-9eef34bc-8b43-11e7-85a9-2d9ad6772d49.png\" alt=\"shown\" style=\"max-width:100%;\"></a></p>\n<p>Once the percentage changes the values will dissapear again.</p>\n<p>The whole code is available on the DCT15 branch on my git repo <a href=\"https://github.com/lucadln/android.git\">https://github.com/lucadln/android.git</a> in the DutchConjugationTrainer folder.</p>\n<p>LATER EDIT: After more investigation it seems that this is a duplicate of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"188253010\" data-permission-text=\"Title is private\" data-url=\"https://github.com/PhilJay/MPAndroidChart/issues/2452\" data-hovercard-type=\"issue\" data-hovercard-url=\"/PhilJay/MPAndroidChart/issues/2452/hovercard\" href=\"https://github.com/PhilJay/MPAndroidChart/issues/2452\">#2452</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"172302818\" data-permission-text=\"Title is private\" data-url=\"https://github.com/PhilJay/MPAndroidChart/issues/2180\" data-hovercard-type=\"issue\" data-hovercard-url=\"/PhilJay/MPAndroidChart/issues/2180/hovercard\" href=\"https://github.com/PhilJay/MPAndroidChart/issues/2180\">#2180</a> .It would be great if there would be at least a workaround for this.</p>", "createdAt": "2017-08-27T12:59:39Z", "publishedAt": "2017-08-27T12:59:39Z", "lastEditedAt": "2017-08-27T19:04:05Z", "updatedAt": "2017-08-27T19:04:05Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 250, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Well after working more on this it seems that this is sometimes working and sometimes not.", "sentSegmented": ["well", "after", "working", "more", "on", "this", "it", "seems", "that", "this", "is", "sometimes", "working", "and", "sometimes", "not"], "sentSegmentedWithoutStops": ["well", "working", "seems", "sometimes", "working", "sometimes"], "sentSegmentedWithoutStopsStemmed": ["well", "work", "seem", "sometim", "work", "sometim"]}, {"number": 251, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This is the corresponding code.", "sentSegmented": ["this", "is", "the", "corresponding", "code"], "sentSegmentedWithoutStops": ["corresponding", "code"], "sentSegmentedWithoutStopsStemmed": ["correspond", "code"]}, {"number": 252, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "// Initialize bar chart", "sentSegmented": ["initialize", "bar", "chart"], "sentSegmentedWithoutStops": ["initialize", "bar", "chart"], "sentSegmentedWithoutStopsStemmed": ["initi", "bar", "chart"]}, {"number": 253, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    HorizontalBarChart barChart = (HorizontalBarChart) findViewById(R.id.chart);", "sentSegmented": ["horizontalbarchart", "barchart", "horizontalbarchart", "findviewbyid", "r.id.chart"], "sentSegmentedWithoutStops": ["horizontalbarchart", "barchart", "horizontalbarchart", "findviewbyid", "r.id.chart"], "sentSegmentedWithoutStopsStemmed": ["horizontalbarchart", "barchart", "horizontalbarchart", "findviewbyid", "r.id.chart"]}, {"number": 254, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    obtainAllScores(scores);", "sentSegmented": ["obtainallscores", "scores"], "sentSegmentedWithoutStops": ["obtainallscores", "scores"], "sentSegmentedWithoutStopsStemmed": ["obtainallscor", "score"]}, {"number": 255, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Create bars", "sentSegmented": ["create", "bars"], "sentSegmentedWithoutStops": ["create", "bars"], "sentSegmentedWithoutStopsStemmed": ["creat", "bar"]}, {"number": 256, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    ArrayList yvalues = new ArrayList<>();", "sentSegmented": ["arraylist", "yvalues", "new", "arraylist"], "sentSegmentedWithoutStops": ["arraylist", "yvalues", "arraylist"], "sentSegmentedWithoutStopsStemmed": ["arraylist", "yvalu", "arraylist"]}, {"number": 257, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    yvalues.add(new BarEntry(0f, percentages[0]));", "sentSegmented": ["yvalues.add", "new", "barentry", "0f", "percentages", "0"], "sentSegmentedWithoutStops": ["yvalues.add", "barentry", "0f", "percentages", "0"], "sentSegmentedWithoutStopsStemmed": ["yvalues.add", "barentri", "0f", "percentag", "0"]}, {"number": 258, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    yvalues.add(new BarEntry(1f, percentages[1]));", "sentSegmented": ["yvalues.add", "new", "barentry", "1f", "percentages", "1"], "sentSegmentedWithoutStops": ["yvalues.add", "barentry", "1f", "percentages", "1"], "sentSegmentedWithoutStopsStemmed": ["yvalues.add", "barentri", "1f", "percentag", "1"]}, {"number": 259, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    yvalues.add(new BarEntry(2f, percentages[2]));", "sentSegmented": ["yvalues.add", "new", "barentry", "2f", "percentages", "2"], "sentSegmentedWithoutStops": ["yvalues.add", "barentry", "2f", "percentages", "2"], "sentSegmentedWithoutStopsStemmed": ["yvalues.add", "barentri", "2f", "percentag", "2"]}, {"number": 260, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    yvalues.add(new BarEntry(3f, percentages[3]));", "sentSegmented": ["yvalues.add", "new", "barentry", "3f", "percentages", "3"], "sentSegmentedWithoutStops": ["yvalues.add", "barentry", "3f", "percentages", "3"], "sentSegmentedWithoutStopsStemmed": ["yvalues.add", "barentri", "3f", "percentag", "3"]}, {"number": 261, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    yvalues.add(new BarEntry(4f, percentages[4]));", "sentSegmented": ["yvalues.add", "new", "barentry", "4f", "percentages", "4"], "sentSegmentedWithoutStops": ["yvalues.add", "barentry", "4f", "percentages", "4"], "sentSegmentedWithoutStopsStemmed": ["yvalues.add", "barentri", "4f", "percentag", "4"]}, {"number": 262, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    yvalues.add(new BarEntry(5f, percentages[5]));", "sentSegmented": ["yvalues.add", "new", "barentry", "5f", "percentages", "5"], "sentSegmentedWithoutStops": ["yvalues.add", "barentry", "5f", "percentages", "5"], "sentSegmentedWithoutStopsStemmed": ["yvalues.add", "barentri", "5f", "percentag", "5"]}, {"number": 263, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    yvalues.add(new BarEntry(6f, percentages[6]));", "sentSegmented": ["yvalues.add", "new", "barentry", "6f", "percentages", "6"], "sentSegmentedWithoutStops": ["yvalues.add", "barentry", "6f", "percentages", "6"], "sentSegmentedWithoutStopsStemmed": ["yvalues.add", "barentri", "6f", "percentag", "6"]}, {"number": 264, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Create a data set", "sentSegmented": ["create", "a", "data", "set"], "sentSegmentedWithoutStops": ["create", "data", "set"], "sentSegmentedWithoutStopsStemmed": ["creat", "data", "set"]}, {"number": 265, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    BarDataSet dataSet = new BarDataSet(yvalues, \"Tenses\");", "sentSegmented": ["bardataset", "dataset", "new", "bardataset", "yvalues", "tenses"], "sentSegmentedWithoutStops": ["bardataset", "dataset", "bardataset", "yvalues", "tenses"], "sentSegmentedWithoutStopsStemmed": ["bardataset", "dataset", "bardataset", "yvalu", "tens"]}, {"number": 266, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    dataSet.setDrawValues(true);", "sentSegmented": ["dataset.setdrawvalues", "true"], "sentSegmentedWithoutStops": ["dataset.setdrawvalues", "true"], "sentSegmentedWithoutStopsStemmed": ["dataset.setdrawvalu", "true"]}, {"number": 267, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Create a data object from the dataSet", "sentSegmented": ["create", "a", "data", "object", "from", "the", "dataset"], "sentSegmentedWithoutStops": ["create", "data", "object", "dataset"], "sentSegmentedWithoutStopsStemmed": ["creat", "data", "object", "dataset"]}, {"number": 268, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    BarData data = new BarData(dataSet);", "sentSegmented": ["bardata", "data", "new", "bardata", "dataset"], "sentSegmentedWithoutStops": ["bardata", "data", "bardata", "dataset"], "sentSegmentedWithoutStopsStemmed": ["bardata", "data", "bardata", "dataset"]}, {"number": 269, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Format data as percentage", "sentSegmented": ["format", "data", "as", "percentage"], "sentSegmentedWithoutStops": ["format", "data", "percentage"], "sentSegmentedWithoutStopsStemmed": ["format", "data", "percentag"]}, {"number": 270, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    data.setValueFormatter(new PercentFormatter());", "sentSegmented": ["data.setvalueformatter", "new", "percentformatter"], "sentSegmentedWithoutStops": ["data.setvalueformatter", "percentformatter"], "sentSegmentedWithoutStopsStemmed": ["data.setvalueformatt", "percentformatt"]}, {"number": 271, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Make the chart use the acquired data", "sentSegmented": ["make", "the", "chart", "use", "the", "acquired", "data"], "sentSegmentedWithoutStops": ["make", "chart", "use", "acquired", "data"], "sentSegmentedWithoutStopsStemmed": ["make", "chart", "use", "acquir", "data"]}, {"number": 272, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.setData(data);", "sentSegmented": ["barchart.setdata", "data"], "sentSegmentedWithoutStops": ["barchart.setdata", "data"], "sentSegmentedWithoutStopsStemmed": ["barchart.setdata", "data"]}, {"number": 273, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Create the labels for the bars", "sentSegmented": ["create", "the", "labels", "for", "the", "bars"], "sentSegmentedWithoutStops": ["create", "labels", "bars"], "sentSegmentedWithoutStopsStemmed": ["creat", "label", "bar"]}, {"number": 274, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    final ArrayList xVals = new ArrayList<>();", "sentSegmented": ["final", "arraylist", "xvals", "new", "arraylist"], "sentSegmentedWithoutStops": ["arraylist", "xvals", "arraylist"], "sentSegmentedWithoutStopsStemmed": ["arraylist", "xval", "arraylist"]}, {"number": 275, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    xVals.add(\"Present\");", "sentSegmented": ["xvals.add", "present"], "sentSegmentedWithoutStops": ["xvals.add", "present"], "sentSegmentedWithoutStopsStemmed": ["xvals.add", "present"]}, {"number": 276, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    xVals.add(\"Pres. Continuous\");", "sentSegmented": ["xvals.add", "pres", "continuous"], "sentSegmentedWithoutStops": ["xvals.add", "pres", "continuous"], "sentSegmentedWithoutStopsStemmed": ["xvals.add", "pre", "continu"]}, {"number": 277, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    xVals.add(\"Simple Past\");", "sentSegmented": ["xvals.add", "simple", "past"], "sentSegmentedWithoutStops": ["xvals.add", "simple", "past"], "sentSegmentedWithoutStopsStemmed": ["xvals.add", "simpl", "past"]}, {"number": 278, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    xVals.add(\"Past Perfect\");", "sentSegmented": ["xvals.add", "past", "perfect"], "sentSegmentedWithoutStops": ["xvals.add", "past", "perfect"], "sentSegmentedWithoutStopsStemmed": ["xvals.add", "past", "perfect"]}, {"number": 279, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    xVals.add(\"Conditional\");", "sentSegmented": ["xvals.add", "conditional"], "sentSegmentedWithoutStops": ["xvals.add", "conditional"], "sentSegmentedWithoutStopsStemmed": ["xvals.add", "condit"]}, {"number": 280, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    xVals.add(\"Cond. Perfect\");", "sentSegmented": ["xvals.add", "cond", "perfect"], "sentSegmentedWithoutStops": ["xvals.add", "cond", "perfect"], "sentSegmentedWithoutStopsStemmed": ["xvals.add", "cond", "perfect"]}, {"number": 281, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    xVals.add(\"Future\");", "sentSegmented": ["xvals.add", "future"], "sentSegmentedWithoutStops": ["xvals.add", "future"], "sentSegmentedWithoutStopsStemmed": ["xvals.add", "futur"]}, {"number": 282, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Display labels for bars", "sentSegmented": ["display", "labels", "for", "bars"], "sentSegmentedWithoutStops": ["display", "labels", "bars"], "sentSegmentedWithoutStopsStemmed": ["display", "label", "bar"]}, {"number": 283, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.getXAxis().setValueFormatter(new IndexAxisValueFormatter(xVals));", "sentSegmented": ["barchart.getxaxis", ".setvalueformatter", "new", "indexaxisvalueformatter", "xvals"], "sentSegmentedWithoutStops": ["barchart.getxaxis", ".setvalueformatter", "indexaxisvalueformatter", "xvals"], "sentSegmentedWithoutStopsStemmed": ["barchart.getxaxi", ".setvalueformatt", "indexaxisvalueformatt", "xval"]}, {"number": 284, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Set the maximum value that can be taken by the bars", "sentSegmented": ["set", "the", "maximum", "value", "that", "can", "be", "taken", "by", "the", "bars"], "sentSegmentedWithoutStops": ["set", "maximum", "value", "taken", "bars"], "sentSegmentedWithoutStopsStemmed": ["set", "maximum", "valu", "taken", "bar"]}, {"number": 285, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.getAxisLeft().setAxisMaximum(100);", "sentSegmented": ["barchart.getaxisleft", ".setaxismaximum", "100"], "sentSegmentedWithoutStops": ["barchart.getaxisleft", ".setaxismaximum", "100"], "sentSegmentedWithoutStopsStemmed": ["barchart.getaxisleft", ".setaxismaximum", "100"]}, {"number": 286, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Bars are sliding in from left to right", "sentSegmented": ["bars", "are", "sliding", "in", "from", "left", "to", "right"], "sentSegmentedWithoutStops": ["bars", "sliding", "left", "right"], "sentSegmentedWithoutStopsStemmed": ["bar", "slide", "left", "right"]}, {"number": 287, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.animateXY(1000, 1000);", "sentSegmented": ["barchart.animatexy", "1000", "1000"], "sentSegmentedWithoutStops": ["barchart.animatexy", "1000", "1000"], "sentSegmentedWithoutStopsStemmed": ["barchart.animatexi", "1000", "1000"]}, {"number": 288, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Display scores inside the bars", "sentSegmented": ["display", "scores", "inside", "the", "bars"], "sentSegmentedWithoutStops": ["display", "scores", "inside", "bars"], "sentSegmentedWithoutStopsStemmed": ["display", "score", "insid", "bar"]}, {"number": 289, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.setDrawValueAboveBar(false);", "sentSegmented": ["barchart.setdrawvalueabovebar", "false"], "sentSegmentedWithoutStops": ["barchart.setdrawvalueabovebar", "false"], "sentSegmentedWithoutStopsStemmed": ["barchart.setdrawvalueabovebar", "fals"]}, {"number": 290, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Hide grid lines", "sentSegmented": ["hide", "grid", "lines"], "sentSegmentedWithoutStops": ["hide", "grid", "lines"], "sentSegmentedWithoutStopsStemmed": ["hide", "grid", "line"]}, {"number": 291, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.getAxisLeft().setEnabled(false);", "sentSegmented": ["barchart.getaxisleft", ".setenabled", "false"], "sentSegmentedWithoutStops": ["barchart.getaxisleft", ".setenabled", "false"], "sentSegmentedWithoutStopsStemmed": ["barchart.getaxisleft", ".seten", "fals"]}, {"number": 292, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.getAxisRight().setEnabled(false);", "sentSegmented": ["barchart.getaxisright", ".setenabled", "false"], "sentSegmentedWithoutStops": ["barchart.getaxisright", ".setenabled", "false"], "sentSegmentedWithoutStopsStemmed": ["barchart.getaxisright", ".seten", "fals"]}, {"number": 293, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Hide graph description", "sentSegmented": ["hide", "graph", "description"], "sentSegmentedWithoutStops": ["hide", "graph", "description"], "sentSegmentedWithoutStopsStemmed": ["hide", "graph", "descript"]}, {"number": 294, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.getDescription().setEnabled(false);", "sentSegmented": ["barchart.getdescription", ".setenabled", "false"], "sentSegmentedWithoutStops": ["barchart.getdescription", ".setenabled", "false"], "sentSegmentedWithoutStopsStemmed": ["barchart.getdescript", ".seten", "fals"]}, {"number": 295, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Hide graph legend", "sentSegmented": ["hide", "graph", "legend"], "sentSegmentedWithoutStops": ["hide", "graph", "legend"], "sentSegmentedWithoutStopsStemmed": ["hide", "graph", "legend"]}, {"number": 296, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.getLegend().setEnabled(false);", "sentSegmented": ["barchart.getlegend", ".setenabled", "false"], "sentSegmentedWithoutStops": ["barchart.getlegend", ".setenabled", "false"], "sentSegmentedWithoutStopsStemmed": ["barchart.getlegend", ".seten", "fals"]}, {"number": 297, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Design", "sentSegmented": ["design"], "sentSegmentedWithoutStops": ["design"], "sentSegmentedWithoutStopsStemmed": ["design"]}, {"number": 298, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    dataSet.setColors(ColorTemplate.VORDIPLOM_COLORS);", "sentSegmented": ["dataset.setcolors", "colortemplate.vordiplom_colors"], "sentSegmentedWithoutStops": ["dataset.setcolors", "colortemplate.vordiplom_colors"], "sentSegmentedWithoutStopsStemmed": ["dataset.setcolor", "colortemplate.vordiplom_color"]}, {"number": 299, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    data.setValueTextSize(13f);", "sentSegmented": ["data.setvaluetextsize", "13f"], "sentSegmentedWithoutStops": ["data.setvaluetextsize", "13f"], "sentSegmentedWithoutStopsStemmed": ["data.setvaluetexts", "13f"]}, {"number": 300, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    data.setValueTextColor(Color.DKGRAY);", "sentSegmented": ["data.setvaluetextcolor", "color.dkgray"], "sentSegmentedWithoutStops": ["data.setvaluetextcolor", "color.dkgray"], "sentSegmentedWithoutStopsStemmed": ["data.setvaluetextcolor", "color.dkgray"]}, {"number": 301, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.invalidate();", "sentSegmented": ["barchart.invalidate"], "sentSegmentedWithoutStops": ["barchart.invalidate"], "sentSegmentedWithoutStopsStemmed": ["barchart.invalid"]}, {"number": 302, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "When all bars have the value 100 no percentage is shown.", "sentSegmented": ["when", "all", "bars", "have", "the", "value", "100", "no", "percentage", "is", "shown"], "sentSegmentedWithoutStops": ["bars", "value", "100", "percentage", "shown"], "sentSegmentedWithoutStopsStemmed": ["bar", "valu", "100", "percentag", "shown"]}, {"number": 303, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "However if I make one bar to have the value 0 then percentages will be shown.", "sentSegmented": ["however", "if", "i", "make", "one", "bar", "to", "have", "the", "value", "0", "then", "percentages", "will", "be", "shown"], "sentSegmentedWithoutStops": ["however", "make", "one", "bar", "value", "0", "percentages", "shown"], "sentSegmentedWithoutStopsStemmed": ["howev", "make", "one", "bar", "valu", "0", "percentag", "shown"]}, {"number": 304, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Once the percentage changes the values will dissapear again.", "sentSegmented": ["once", "the", "percentage", "changes", "the", "values", "will", "dissapear", "again"], "sentSegmentedWithoutStops": ["percentage", "changes", "values", "dissapear"], "sentSegmentedWithoutStopsStemmed": ["percentag", "chang", "valu", "dissapear"]}, {"number": 305, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The whole code is available on the DCT15 branch on my git repo https://github.com/lucadln/android.git in the DutchConjugationTrainer folder.", "sentSegmented": ["the", "whole", "code", "is", "available", "on", "the", "dct15", "branch", "on", "my", "git", "repo", "https", "//github.com/lucadln/android.git", "in", "the", "dutchconjugationtrainer", "folder"], "sentSegmentedWithoutStops": ["whole", "code", "available", "dct15", "branch", "git", "repo", "https", "//github.com/lucadln/android.git", "dutchconjugationtrainer", "folder"], "sentSegmentedWithoutStopsStemmed": ["whole", "code", "avail", "dct15", "branch", "git", "repo", "http", "//github.com/lucadln/android.git", "dutchconjugationtrain", "folder"]}, {"number": 306, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "LATER EDIT: After more investigation it seems that this is a duplicate of #2452 and #2180 .It would be great if there would be at least a workaround for this.", "sentSegmented": ["later", "edit", "after", "more", "investigation", "it", "seems", "that", "this", "is", "a", "duplicate", "of", "2452", "and", "2180", ".it", "would", "be", "great", "if", "there", "would", "be", "at", "least", "a", "workaround", "for", "this"], "sentSegmentedWithoutStops": ["later", "edit", "investigation", "seems", "duplicate", "2452", "2180", ".it", "would", "great", "would", "least", "workaround"], "sentSegmentedWithoutStopsStemmed": ["later", "edit", "investig", "seem", "duplic", "2452", "2180", ".it", "would", "great", "would", "least", "workaround"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMyNTI0ODYxOQ==", "author": {"login": "lucadln"}, "body": "Ok, one more update: if I zoom out horizontally the values are shown. \r\n\r\nThis can also be seen in the pictures above actually. In the first picture the bars are spanned starting from the left side of the screen. In the second picture the 0.0% makes the bars start a little to the right. \r\n\r\nAny solutions for this?", "bodyText": "Ok, one more update: if I zoom out horizontally the values are shown.\nThis can also be seen in the pictures above actually. In the first picture the bars are spanned starting from the left side of the screen. In the second picture the 0.0% makes the bars start a little to the right.\nAny solutions for this?", "bodyHTML": "<p>Ok, one more update: if I zoom out horizontally the values are shown.</p>\n<p>This can also be seen in the pictures above actually. In the first picture the bars are spanned starting from the left side of the screen. In the second picture the 0.0% makes the bars start a little to the right.</p>\n<p>Any solutions for this?</p>", "createdAt": "2017-08-28T02:56:20Z", "publishedAt": "2017-08-28T02:56:20Z", "lastEditedAt": "2017-09-02T05:57:32Z", "updatedAt": "2017-09-02T05:57:32Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 307, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Ok, one more update: if I zoom out horizontally the values are shown.", "sentSegmented": ["ok", "one", "more", "update", "if", "i", "zoom", "out", "horizontally", "the", "values", "are", "shown"], "sentSegmentedWithoutStops": ["ok", "one", "update", "zoom", "horizontally", "values", "shown"], "sentSegmentedWithoutStopsStemmed": ["ok", "one", "updat", "zoom", "horizont", "valu", "shown"]}, {"number": 308, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This can also be seen in the pictures above actually.", "sentSegmented": ["this", "can", "also", "be", "seen", "in", "the", "pictures", "above", "actually"], "sentSegmentedWithoutStops": ["also", "seen", "pictures", "actually"], "sentSegmentedWithoutStopsStemmed": ["also", "seen", "pictur", "actual"]}, {"number": 309, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In the first picture the bars are spanned starting from the left side of the screen.", "sentSegmented": ["in", "the", "first", "picture", "the", "bars", "are", "spanned", "starting", "from", "the", "left", "side", "of", "the", "screen"], "sentSegmentedWithoutStops": ["first", "picture", "bars", "spanned", "starting", "left", "side", "screen"], "sentSegmentedWithoutStopsStemmed": ["first", "pictur", "bar", "span", "start", "left", "side", "screen"]}, {"number": 310, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In the second picture the 0.0% makes the bars start a little to the right.", "sentSegmented": ["in", "the", "second", "picture", "the", "0.0", "makes", "the", "bars", "start", "a", "little", "to", "the", "right"], "sentSegmentedWithoutStops": ["second", "picture", "0.0", "makes", "bars", "start", "little", "right"], "sentSegmentedWithoutStopsStemmed": ["second", "pictur", "0.0", "make", "bar", "start", "littl", "right"]}, {"number": 311, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Any solutions for this?", "sentSegmented": ["any", "solutions", "for", "this"], "sentSegmentedWithoutStops": ["solutions"], "sentSegmentedWithoutStopsStemmed": ["solut"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMyNjA1OTE0OQ==", "author": {"login": "lucadln"}, "body": "Another issue similar to mine: https://github.com/PhilJay/MPAndroidChart/issues/3212", "bodyText": "Another issue similar to mine: #3212", "bodyHTML": "<p>Another issue similar to mine: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"239090812\" data-permission-text=\"Title is private\" data-url=\"https://github.com/PhilJay/MPAndroidChart/issues/3212\" data-hovercard-type=\"issue\" data-hovercard-url=\"/PhilJay/MPAndroidChart/issues/3212/hovercard\" href=\"https://github.com/PhilJay/MPAndroidChart/issues/3212\">#3212</a></p>", "createdAt": "2017-08-30T17:17:00Z", "publishedAt": "2017-08-30T17:17:00Z", "lastEditedAt": null, "updatedAt": "2017-08-30T17:17:00Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 312, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Another issue similar to mine: #3212", "sentSegmented": ["another", "issue", "similar", "to", "mine", "3212"], "sentSegmentedWithoutStops": ["another", "issue", "similar", "mine", "3212"], "sentSegmentedWithoutStopsStemmed": ["anoth", "issu", "similar", "mine", "3212"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMyNjcyNzE2MQ==", "author": {"login": "lucadln"}, "body": "Ok, I figured it out.\r\n\r\nSo the strangest part was that the labels were shown if one of the following conditions was met:\r\n1. I zoomed out manually when using the application OR\r\n2. One of the values in my chart was 0.\r\n\r\nMy chart contained labels with a maximum value of 100:\r\n![noscores](https://user-images.githubusercontent.com/27018423/29993626-489b85ee-8fc5-11e7-8b8e-5bfff8c8611f.png)\r\n\r\n...but I noticed that the bars were cropped (i.e. the minimum shown value was 50). When having one value with 0 or when zooming out then the whole graph would be displayed and hence also its labels:\r\n![scores](https://user-images.githubusercontent.com/27018423/29993634-7f538a3c-8fc5-11e7-928f-7715b98a413a.png)\r\n\r\nThe solution which did it is just adding the axis minimum. In this way, no matter what the scores are, the bars were fully displayed. So the solution for me was just:\r\n`barChart.getAxisLeft().setAxisMaximum(100);\r\nbarChart.getAxisLeft().setAxisMinimum(0);`\r\n\r\nAnd now the result is:\r\n![result](https://user-images.githubusercontent.com/27018423/29993652-02ddc138-8fc6-11e7-923c-33e4f1ebc0f6.png)\r\n\r\nI will close this issue now.", "bodyText": "Ok, I figured it out.\nSo the strangest part was that the labels were shown if one of the following conditions was met:\n\nI zoomed out manually when using the application OR\nOne of the values in my chart was 0.\n\nMy chart contained labels with a maximum value of 100:\n\n...but I noticed that the bars were cropped (i.e. the minimum shown value was 50). When having one value with 0 or when zooming out then the whole graph would be displayed and hence also its labels:\n\nThe solution which did it is just adding the axis minimum. In this way, no matter what the scores are, the bars were fully displayed. So the solution for me was just:\nbarChart.getAxisLeft().setAxisMaximum(100); barChart.getAxisLeft().setAxisMinimum(0);\nAnd now the result is:\n\nI will close this issue now.", "bodyHTML": "<p>Ok, I figured it out.</p>\n<p>So the strangest part was that the labels were shown if one of the following conditions was met:</p>\n<ol>\n<li>I zoomed out manually when using the application OR</li>\n<li>One of the values in my chart was 0.</li>\n</ol>\n<p>My chart contained labels with a maximum value of 100:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/27018423/29993626-489b85ee-8fc5-11e7-8b8e-5bfff8c8611f.png\"><img src=\"https://user-images.githubusercontent.com/27018423/29993626-489b85ee-8fc5-11e7-8b8e-5bfff8c8611f.png\" alt=\"noscores\" style=\"max-width:100%;\"></a></p>\n<p>...but I noticed that the bars were cropped (i.e. the minimum shown value was 50). When having one value with 0 or when zooming out then the whole graph would be displayed and hence also its labels:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/27018423/29993634-7f538a3c-8fc5-11e7-928f-7715b98a413a.png\"><img src=\"https://user-images.githubusercontent.com/27018423/29993634-7f538a3c-8fc5-11e7-928f-7715b98a413a.png\" alt=\"scores\" style=\"max-width:100%;\"></a></p>\n<p>The solution which did it is just adding the axis minimum. In this way, no matter what the scores are, the bars were fully displayed. So the solution for me was just:<br>\n<code>barChart.getAxisLeft().setAxisMaximum(100); barChart.getAxisLeft().setAxisMinimum(0);</code></p>\n<p>And now the result is:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/27018423/29993652-02ddc138-8fc6-11e7-923c-33e4f1ebc0f6.png\"><img src=\"https://user-images.githubusercontent.com/27018423/29993652-02ddc138-8fc6-11e7-923c-33e4f1ebc0f6.png\" alt=\"result\" style=\"max-width:100%;\"></a></p>\n<p>I will close this issue now.</p>", "createdAt": "2017-09-02T07:03:58Z", "publishedAt": "2017-09-02T07:03:58Z", "lastEditedAt": "2017-09-02T07:04:40Z", "updatedAt": "2017-09-02T07:04:40Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2017-09-02T14:04:57Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2017-12-04T07:41:32Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-02-22T16:08:23Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-09-20T18:00:44Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-04-26T03:49:32Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-11-20T08:30:12Z"}}]}, "bodyParsed": [{"number": 313, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Ok, I figured it out.", "sentSegmented": ["ok", "i", "figured", "it", "out"], "sentSegmentedWithoutStops": ["ok", "figured"], "sentSegmentedWithoutStopsStemmed": ["ok", "figur"]}, {"number": 314, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So the strangest part was that the labels were shown if one of the following conditions was met:", "sentSegmented": ["so", "the", "strangest", "part", "was", "that", "the", "labels", "were", "shown", "if", "one", "of", "the", "following", "conditions", "was", "met"], "sentSegmentedWithoutStops": ["strangest", "part", "labels", "shown", "one", "following", "conditions", "met"], "sentSegmentedWithoutStopsStemmed": ["strangest", "part", "label", "shown", "one", "follow", "condit", "met"]}, {"number": 315, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I zoomed out manually when using the application OR", "sentSegmented": ["i", "zoomed", "out", "manually", "when", "using", "the", "application", "or"], "sentSegmentedWithoutStops": ["zoomed", "manually", "using", "application"], "sentSegmentedWithoutStopsStemmed": ["zoom", "manual", "use", "applic"]}, {"number": 316, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "One of the values in my chart was 0.", "sentSegmented": ["one", "of", "the", "values", "in", "my", "chart", "was", "0"], "sentSegmentedWithoutStops": ["one", "values", "chart", "0"], "sentSegmentedWithoutStopsStemmed": ["one", "valu", "chart", "0"]}, {"number": 317, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "My chart contained labels with a maximum value of 100:", "sentSegmented": ["my", "chart", "contained", "labels", "with", "a", "maximum", "value", "of", "100"], "sentSegmentedWithoutStops": ["chart", "contained", "labels", "maximum", "value", "100"], "sentSegmentedWithoutStopsStemmed": ["chart", "contain", "label", "maximum", "valu", "100"]}, {"number": 318, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "...but I noticed that the bars were cropped (i.e.", "sentSegmented": ["but", "i", "noticed", "that", "the", "bars", "were", "cropped", "i.e"], "sentSegmentedWithoutStops": ["noticed", "bars", "cropped", "i.e"], "sentSegmentedWithoutStopsStemmed": ["notic", "bar", "crop", "i.e"]}, {"number": 319, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "the minimum shown value was 50).", "sentSegmented": ["the", "minimum", "shown", "value", "was", "50"], "sentSegmentedWithoutStops": ["minimum", "shown", "value", "50"], "sentSegmentedWithoutStopsStemmed": ["minimum", "shown", "valu", "50"]}, {"number": 320, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "When having one value with 0 or when zooming out then the whole graph would be displayed and hence also its labels:", "sentSegmented": ["when", "having", "one", "value", "with", "0", "or", "when", "zooming", "out", "then", "the", "whole", "graph", "would", "be", "displayed", "and", "hence", "also", "its", "labels"], "sentSegmentedWithoutStops": ["one", "value", "0", "zooming", "whole", "graph", "would", "displayed", "hence", "also", "labels"], "sentSegmentedWithoutStopsStemmed": ["one", "valu", "0", "zoom", "whole", "graph", "would", "display", "henc", "also", "label"]}, {"number": 321, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The solution which did it is just adding the axis minimum.", "sentSegmented": ["the", "solution", "which", "did", "it", "is", "just", "adding", "the", "axis", "minimum"], "sentSegmentedWithoutStops": ["solution", "adding", "axis", "minimum"], "sentSegmentedWithoutStopsStemmed": ["solut", "ad", "axi", "minimum"]}, {"number": 322, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In this way, no matter what the scores are, the bars were fully displayed.", "sentSegmented": ["in", "this", "way", "no", "matter", "what", "the", "scores", "are", "the", "bars", "were", "fully", "displayed"], "sentSegmentedWithoutStops": ["way", "matter", "scores", "bars", "fully", "displayed"], "sentSegmentedWithoutStopsStemmed": ["way", "matter", "score", "bar", "fulli", "display"]}, {"number": 323, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So the solution for me was just:", "sentSegmented": ["so", "the", "solution", "for", "me", "was", "just"], "sentSegmentedWithoutStops": ["solution"], "sentSegmentedWithoutStopsStemmed": ["solut"]}, {"number": 324, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "barChart.getAxisLeft().setAxisMaximum(100); barChart.getAxisLeft().setAxisMinimum(0);", "sentSegmented": ["barchart.getaxisleft", ".setaxismaximum", "100", "barchart.getaxisleft", ".setaxisminimum", "0"], "sentSegmentedWithoutStops": ["barchart.getaxisleft", ".setaxismaximum", "100", "barchart.getaxisleft", ".setaxisminimum", "0"], "sentSegmentedWithoutStopsStemmed": ["barchart.getaxisleft", ".setaxismaximum", "100", "barchart.getaxisleft", ".setaxisminimum", "0"]}, {"number": 325, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "And now the result is:", "sentSegmented": ["and", "now", "the", "result", "is"], "sentSegmentedWithoutStops": ["result"], "sentSegmentedWithoutStopsStemmed": ["result"]}, {"number": 326, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I will close this issue now.", "sentSegmented": ["i", "will", "close", "this", "issue", "now"], "sentSegmentedWithoutStops": ["close", "issue"], "sentSegmentedWithoutStopsStemmed": ["close", "issu"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDYxNzU3ODU5NQ==", "author": {"login": "Emad-Alhattami"}, "body": "How delete precent?", "bodyText": "How delete precent?", "bodyHTML": "<p>How delete precent?</p>", "createdAt": "2020-04-22T06:29:39Z", "publishedAt": "2020-04-22T06:29:39Z", "lastEditedAt": null, "updatedAt": "2020-04-22T06:29:39Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 327, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "How delete precent?", "sentSegmented": ["how", "delete", "precent"], "sentSegmentedWithoutStops": ["delete", "precent"], "sentSegmentedWithoutStopsStemmed": ["delet", "precent"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDYxNzU3ODg4Ng==", "author": {"login": "Emad-Alhattami"}, "body": "I need gust number with out precent % ?", "bodyText": "I need gust number with out precent % ?", "bodyHTML": "<p>I need gust number with out precent % ?</p>", "createdAt": "2020-04-22T06:30:23Z", "publishedAt": "2020-04-22T06:30:23Z", "lastEditedAt": null, "updatedAt": "2020-04-22T06:30:23Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 328, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I need gust number with out precent % ?", "sentSegmented": ["i", "need", "gust", "number", "with", "out", "precent"], "sentSegmentedWithoutStops": ["need", "gust", "number", "precent"], "sentSegmentedWithoutStopsStemmed": ["need", "gust", "number", "precent"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDcwNDgxNzk5Nw==", "author": {"login": "6vedant"}, "body": "I am able to display the entry values, but its font size is very less. How to increase the font size?", "bodyText": "I am able to display the entry values, but its font size is very less. How to increase the font size?", "bodyHTML": "<p>I am able to display the entry values, but its font size is very less. How to increase the font size?</p>", "createdAt": "2020-10-07T09:37:27Z", "publishedAt": "2020-10-07T09:37:27Z", "lastEditedAt": null, "updatedAt": "2020-10-07T09:37:27Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 329, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I am able to display the entry values, but its font size is very less.", "sentSegmented": ["i", "am", "able", "to", "display", "the", "entry", "values", "but", "its", "font", "size", "is", "very", "less"], "sentSegmentedWithoutStops": ["able", "display", "entry", "values", "font", "size", "less"], "sentSegmentedWithoutStopsStemmed": ["abl", "display", "entri", "valu", "font", "size", "less"]}, {"number": 330, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "How to increase the font size?", "sentSegmented": ["how", "to", "increase", "the", "font", "size"], "sentSegmentedWithoutStops": ["increase", "font", "size"], "sentSegmentedWithoutStopsStemmed": ["increas", "font", "size"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDc0Mjg1OTcxOQ==", "author": {"login": "MarcellHarmaci"}, "body": "@6vedant In Kotlin I used this, where dataSet was my `BarDataSet`\r\n`dataSet.valueTextSize = 14f`\r\nIn Java it must be something like\r\n`dataset.setValueTextSize(14.0f)`", "bodyText": "@6vedant In Kotlin I used this, where dataSet was my BarDataSet\ndataSet.valueTextSize = 14f\nIn Java it must be something like\ndataset.setValueTextSize(14.0f)", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/6vedant/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/6vedant\">@6vedant</a> In Kotlin I used this, where dataSet was my <code>BarDataSet</code><br>\n<code>dataSet.valueTextSize = 14f</code><br>\nIn Java it must be something like<br>\n<code>dataset.setValueTextSize(14.0f)</code></p>", "createdAt": "2020-12-10T23:13:33Z", "publishedAt": "2020-12-10T23:13:33Z", "lastEditedAt": "2020-12-10T23:14:04Z", "updatedAt": "2020-12-10T23:14:04Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 331, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@6vedant In Kotlin I used this, where dataSet was my BarDataSet", "sentSegmented": ["6vedant", "in", "kotlin", "i", "used", "this", "where", "dataset", "was", "my", "bardataset"], "sentSegmentedWithoutStops": ["6vedant", "kotlin", "used", "dataset", "bardataset"], "sentSegmentedWithoutStopsStemmed": ["6vedant", "kotlin", "use", "dataset", "bardataset"]}, {"number": 332, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "dataSet.valueTextSize = 14f", "sentSegmented": ["dataset.valuetextsize", "14f"], "sentSegmentedWithoutStops": ["dataset.valuetextsize", "14f"], "sentSegmentedWithoutStopsStemmed": ["dataset.valuetexts", "14f"]}, {"number": 333, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In Java it must be something like", "sentSegmented": ["in", "java", "it", "must", "be", "something", "like"], "sentSegmentedWithoutStops": ["java", "must", "something", "like"], "sentSegmentedWithoutStopsStemmed": ["java", "must", "someth", "like"]}, {"number": 334, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "dataset.setValueTextSize(14.0f)", "sentSegmented": ["dataset.setvaluetextsize", "14.0f"], "sentSegmentedWithoutStops": ["dataset.setvaluetextsize", "14.0f"], "sentSegmentedWithoutStopsStemmed": ["dataset.setvaluetexts", "14.0f"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOLEcjxw==", "hasNextPage": false}}, "labels": {"edges": []}, "milestone": null, "reactions": {"edges": []}, "state": "CLOSED", "titleSegmented": ["bar", "entry", "values", "are", "not", "displayed", "in", "horizontalbarcharts"], "titleSegmentedWithoutStops": ["bar", "entry", "values", "displayed", "horizontalbarcharts"], "titleSegmentedWithoutStopsStemmed": ["bar", "entri", "valu", "display", "horizontalbarchart"], "bodyParsed": [{"number": 226, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "A horizontal bar chart was creating using the following code:", "sentSegmented": ["a", "horizontal", "bar", "chart", "was", "creating", "using", "the", "following", "code"], "sentSegmentedWithoutStops": ["horizontal", "bar", "chart", "creating", "using", "following", "code"], "sentSegmentedWithoutStopsStemmed": ["horizont", "bar", "chart", "creat", "use", "follow", "code"]}, {"number": 227, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "// Initialize bar chart", "sentSegmented": ["initialize", "bar", "chart"], "sentSegmentedWithoutStops": ["initialize", "bar", "chart"], "sentSegmentedWithoutStopsStemmed": ["initi", "bar", "chart"]}, {"number": 228, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    HorizontalBarChart barChart = (HorizontalBarChart) findViewById(R.id.chart);", "sentSegmented": ["horizontalbarchart", "barchart", "horizontalbarchart", "findviewbyid", "r.id.chart"], "sentSegmentedWithoutStops": ["horizontalbarchart", "barchart", "horizontalbarchart", "findviewbyid", "r.id.chart"], "sentSegmentedWithoutStopsStemmed": ["horizontalbarchart", "barchart", "horizontalbarchart", "findviewbyid", "r.id.chart"]}, {"number": 229, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Create bars", "sentSegmented": ["create", "bars"], "sentSegmentedWithoutStops": ["create", "bars"], "sentSegmentedWithoutStopsStemmed": ["creat", "bar"]}, {"number": 230, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    ArrayList points = new ArrayList<>();", "sentSegmented": ["arraylist", "points", "new", "arraylist"], "sentSegmentedWithoutStops": ["arraylist", "points", "arraylist"], "sentSegmentedWithoutStopsStemmed": ["arraylist", "point", "arraylist"]}, {"number": 231, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    points.add(new BarEntry(0f, 80));", "sentSegmented": ["points.add", "new", "barentry", "0f", "80"], "sentSegmentedWithoutStops": ["points.add", "barentry", "0f", "80"], "sentSegmentedWithoutStopsStemmed": ["points.add", "barentri", "0f", "80"]}, {"number": 232, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    points.add(new BarEntry(1f, 50));", "sentSegmented": ["points.add", "new", "barentry", "1f", "50"], "sentSegmentedWithoutStops": ["points.add", "barentry", "1f", "50"], "sentSegmentedWithoutStopsStemmed": ["points.add", "barentri", "1f", "50"]}, {"number": 233, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    points.add(new BarEntry(2f, 20));", "sentSegmented": ["points.add", "new", "barentry", "2f", "20"], "sentSegmentedWithoutStops": ["points.add", "barentry", "2f", "20"], "sentSegmentedWithoutStopsStemmed": ["points.add", "barentri", "2f", "20"]}, {"number": 234, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    points.add(new BarEntry(3f, 60));", "sentSegmented": ["points.add", "new", "barentry", "3f", "60"], "sentSegmentedWithoutStops": ["points.add", "barentry", "3f", "60"], "sentSegmentedWithoutStopsStemmed": ["points.add", "barentri", "3f", "60"]}, {"number": 235, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    points.add(new BarEntry(4f, 80));", "sentSegmented": ["points.add", "new", "barentry", "4f", "80"], "sentSegmentedWithoutStops": ["points.add", "barentry", "4f", "80"], "sentSegmentedWithoutStopsStemmed": ["points.add", "barentri", "4f", "80"]}, {"number": 236, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    points.add(new BarEntry(5f, 100));", "sentSegmented": ["points.add", "new", "barentry", "5f", "100"], "sentSegmentedWithoutStops": ["points.add", "barentry", "5f", "100"], "sentSegmentedWithoutStopsStemmed": ["points.add", "barentri", "5f", "100"]}, {"number": 237, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    points.add(new BarEntry(6f, 50));", "sentSegmented": ["points.add", "new", "barentry", "6f", "50"], "sentSegmentedWithoutStops": ["points.add", "barentry", "6f", "50"], "sentSegmentedWithoutStopsStemmed": ["points.add", "barentri", "6f", "50"]}, {"number": 238, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Add bars to a bar set", "sentSegmented": ["add", "bars", "to", "a", "bar", "set"], "sentSegmentedWithoutStops": ["add", "bars", "bar", "set"], "sentSegmentedWithoutStopsStemmed": ["add", "bar", "bar", "set"]}, {"number": 239, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    BarDataSet barSet = new BarDataSet(points, \"Tenses\");", "sentSegmented": ["bardataset", "barset", "new", "bardataset", "points", "tenses"], "sentSegmentedWithoutStops": ["bardataset", "barset", "bardataset", "points", "tenses"], "sentSegmentedWithoutStopsStemmed": ["bardataset", "barset", "bardataset", "point", "tens"]}, {"number": 240, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Create a BarData object and assign it to the chart", "sentSegmented": ["create", "a", "bardata", "object", "and", "assign", "it", "to", "the", "chart"], "sentSegmentedWithoutStops": ["create", "bardata", "object", "assign", "chart"], "sentSegmentedWithoutStopsStemmed": ["creat", "bardata", "object", "assign", "chart"]}, {"number": 241, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    BarData barData = new BarData(barSet);", "sentSegmented": ["bardata", "bardata", "new", "bardata", "barset"], "sentSegmentedWithoutStops": ["bardata", "bardata", "bardata", "barset"], "sentSegmentedWithoutStopsStemmed": ["bardata", "bardata", "bardata", "barset"]}, {"number": 242, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    // Display it as a percentage", "sentSegmented": ["display", "it", "as", "a", "percentage"], "sentSegmentedWithoutStops": ["display", "percentage"], "sentSegmentedWithoutStopsStemmed": ["display", "percentag"]}, {"number": 243, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barData.setValueFormatter(new PercentFormatter());", "sentSegmented": ["bardata.setvalueformatter", "new", "percentformatter"], "sentSegmentedWithoutStops": ["bardata.setvalueformatter", "percentformatter"], "sentSegmentedWithoutStopsStemmed": ["bardata.setvalueformatt", "percentformatt"]}, {"number": 244, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.setData(barData);", "sentSegmented": ["barchart.setdata", "bardata"], "sentSegmentedWithoutStops": ["barchart.setdata", "bardata"], "sentSegmentedWithoutStopsStemmed": ["barchart.setdata", "bardata"]}, {"number": 245, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barSet.setDrawValues(true);", "sentSegmented": ["barset.setdrawvalues", "true"], "sentSegmentedWithoutStops": ["barset.setdrawvalues", "true"], "sentSegmentedWithoutStopsStemmed": ["barset.setdrawvalu", "true"]}, {"number": 246, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    barChart.invalidate();`", "sentSegmented": ["barchart.invalidate"], "sentSegmentedWithoutStops": ["barchart.invalidate"], "sentSegmentedWithoutStopsStemmed": ["barchart.invalid"]}, {"number": 247, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "When running the application, the values corresponding to each bar are not displayed.", "sentSegmented": ["when", "running", "the", "application", "the", "values", "corresponding", "to", "each", "bar", "are", "not", "displayed"], "sentSegmentedWithoutStops": ["running", "application", "values", "corresponding", "bar", "displayed"], "sentSegmentedWithoutStopsStemmed": ["run", "applic", "valu", "correspond", "bar", "display"]}, {"number": 248, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The expected result was to show values like in this picture:", "sentSegmented": ["the", "expected", "result", "was", "to", "show", "values", "like", "in", "this", "picture"], "sentSegmentedWithoutStops": ["expected", "result", "show", "values", "like", "picture"], "sentSegmentedWithoutStopsStemmed": ["expect", "result", "show", "valu", "like", "pictur"]}, {"number": 249, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This was tested using the MPAndroidChart:v3.0.2.", "sentSegmented": ["this", "was", "tested", "using", "the", "mpandroidchart", "v3.0.2"], "sentSegmentedWithoutStops": ["tested", "using", "mpandroidchart", "v3.0.2"], "sentSegmentedWithoutStopsStemmed": ["test", "use", "mpandroidchart", "v3.0.2"]}]}