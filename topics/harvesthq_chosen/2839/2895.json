{"repository": {"owner": {"login": "harvesthq"}, "name": "chosen", "forkCount": 4217, "stargazerCount": 22144, "createdAt": "2011-04-18T15:07:41Z", "updatedAt": "2021-03-15T12:49:41Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "deprecated"}}}, {"node": {"topic": {"name": "not-maintained"}}}]}, "languages": {"edges": [{"node": {"name": "CoffeeScript"}}, {"node": {"name": "Shell"}}, {"node": {"name": "CSS"}}, {"node": {"name": "HTML"}}, {"node": {"name": "JavaScript"}}]}, "primaryLanguage": {"name": "HTML"}}, "id": "MDU6SXNzdWUyNjE5NDA5MTM=", "number": 2895, "author": {"login": "jiteshsojitra"}, "title": "Allowing user to keep custom text if value not found from dropdown lists", "body": "I'm using Chosen and its great! More, i would like you to allow user to keep custom text if value not found from dropdown lists. This is one of the thing killing to specify custom/float value to use for other purpose.\r\n\r\nMy requirement is input value should preserve the text if value not found from dropdown lists.\r\n\r\n### Steps to reproduce\r\n\r\n1. Assume dropdown value contains:\r\nIndia\r\nUSA\r\n\r\n2. Type UK\r\n\r\n3. Move mouse outside dropwown\r\n\r\nActual: UK is removed because dropdown doesn't find it.\r\n\r\nExpected: Preserve UK text as it is to use it for other purpose\r\n\r\nI tried all the options mentioned in https://harvesthq.github.io/chosen/options.html but no luck. Any work around? JS customization help? Can you introduce such kind of new option? - Highly appreciated!\r\n", "bodyHTML": "<p>I'm using Chosen and its great! More, i would like you to allow user to keep custom text if value not found from dropdown lists. This is one of the thing killing to specify custom/float value to use for other purpose.</p>\n<p>My requirement is input value should preserve the text if value not found from dropdown lists.</p>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>\n<p>Assume dropdown value contains:<br>\nIndia<br>\nUSA</p>\n</li>\n<li>\n<p>Type UK</p>\n</li>\n<li>\n<p>Move mouse outside dropwown</p>\n</li>\n</ol>\n<p>Actual: UK is removed because dropdown doesn't find it.</p>\n<p>Expected: Preserve UK text as it is to use it for other purpose</p>\n<p>I tried all the options mentioned in <a rel=\"nofollow\" href=\"https://harvesthq.github.io/chosen/options.html\">https://harvesthq.github.io/chosen/options.html</a> but no luck. Any work around? JS customization help? Can you introduce such kind of new option? - Highly appreciated!</p>", "bodyText": "I'm using Chosen and its great! More, i would like you to allow user to keep custom text if value not found from dropdown lists. This is one of the thing killing to specify custom/float value to use for other purpose.\nMy requirement is input value should preserve the text if value not found from dropdown lists.\nSteps to reproduce\n\n\nAssume dropdown value contains:\nIndia\nUSA\n\n\nType UK\n\n\nMove mouse outside dropwown\n\n\nActual: UK is removed because dropdown doesn't find it.\nExpected: Preserve UK text as it is to use it for other purpose\nI tried all the options mentioned in https://harvesthq.github.io/chosen/options.html but no luck. Any work around? JS customization help? Can you introduce such kind of new option? - Highly appreciated!", "assignees": {"edges": []}, "createdAt": "2017-10-01T19:45:31Z", "closed": false, "closedAt": null, "lastEditedAt": "2017-10-01T19:49:07Z", "publishedAt": "2017-10-01T19:45:31Z", "comments": {"edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzQwMjU2NA==", "author": {"login": "Skeeve"}, "body": "The issue here is - as I can see it - If you have India and USA in the list of options, the actual values could be not \"India\" and \"USA\" but \"91\" and 1\". So if you want to add \"UK\", how should the value \"44\" be known?\r\n\r\nJust to clarify: I'm talking about the international call prefixes.", "bodyText": "The issue here is - as I can see it - If you have India and USA in the list of options, the actual values could be not \"India\" and \"USA\" but \"91\" and 1\". So if you want to add \"UK\", how should the value \"44\" be known?\nJust to clarify: I'm talking about the international call prefixes.", "bodyHTML": "<p>The issue here is - as I can see it - If you have India and USA in the list of options, the actual values could be not \"India\" and \"USA\" but \"91\" and 1\". So if you want to add \"UK\", how should the value \"44\" be known?</p>\n<p>Just to clarify: I'm talking about the international call prefixes.</p>", "createdAt": "2017-10-01T20:00:55Z", "publishedAt": "2017-10-01T20:00:55Z", "lastEditedAt": null, "updatedAt": "2017-10-01T20:00:55Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8580, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The issue here is - as I can see it - If you have India and USA in the list of options, the actual values could be not \"India\" and \"USA\" but \"91\" and 1\".", "sentSegmented": ["the", "issue", "here", "is", "as", "i", "can", "see", "it", "if", "you", "have", "india", "and", "usa", "in", "the", "list", "of", "options", "the", "actual", "values", "could", "be", "not", "india", "and", "usa", "but", "91", "and", "1"], "sentSegmentedWithoutStops": ["issue", "see", "india", "usa", "list", "options", "actual", "values", "could", "india", "usa", "91", "1"], "sentSegmentedWithoutStopsStemmed": ["issu", "see", "india", "usa", "list", "option", "actual", "valu", "could", "india", "usa", "91", "1"]}, {"number": 8581, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So if you want to add \"UK\", how should the value \"44\" be known?", "sentSegmented": ["so", "if", "you", "want", "to", "add", "uk", "how", "should", "the", "value", "44", "be", "known"], "sentSegmentedWithoutStops": ["want", "add", "uk", "value", "44", "known"], "sentSegmentedWithoutStopsStemmed": ["want", "add", "uk", "valu", "44", "known"]}, {"number": 8582, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Just to clarify: I'm talking about the international call prefixes.", "sentSegmented": ["just", "to", "clarify", "i", "'m", "talking", "about", "the", "international", "call", "prefixes"], "sentSegmentedWithoutStops": ["clarify", "'m", "talking", "international", "call", "prefixes"], "sentSegmentedWithoutStopsStemmed": ["clarifi", "'m", "talk", "intern", "call", "prefix"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzQwMjgyOQ==", "author": {"login": "jiteshsojitra"}, "body": "I'm sorry but in my example i'm talking about select values present in dropdown list. UK text is my custom if some user want to specify it in the input field. Right now the problem is, when you put focus outside immediately Chosen field clears that value. I'm expecting Chosen field keeps value as it is as a input field as well to re-use as custom entered value. ", "bodyText": "I'm sorry but in my example i'm talking about select values present in dropdown list. UK text is my custom if some user want to specify it in the input field. Right now the problem is, when you put focus outside immediately Chosen field clears that value. I'm expecting Chosen field keeps value as it is as a input field as well to re-use as custom entered value.", "bodyHTML": "<p>I'm sorry but in my example i'm talking about select values present in dropdown list. UK text is my custom if some user want to specify it in the input field. Right now the problem is, when you put focus outside immediately Chosen field clears that value. I'm expecting Chosen field keeps value as it is as a input field as well to re-use as custom entered value.</p>", "createdAt": "2017-10-01T20:04:58Z", "publishedAt": "2017-10-01T20:04:58Z", "lastEditedAt": null, "updatedAt": "2017-10-01T20:04:58Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8583, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm sorry but in my example i'm talking about select values present in dropdown list.", "sentSegmented": ["i", "'m", "sorry", "but", "in", "my", "example", "i", "'m", "talking", "about", "select", "values", "present", "in", "dropdown", "list"], "sentSegmentedWithoutStops": ["'m", "sorry", "example", "'m", "talking", "select", "values", "present", "dropdown", "list"], "sentSegmentedWithoutStopsStemmed": ["'m", "sorri", "exampl", "'m", "talk", "select", "valu", "present", "dropdown", "list"]}, {"number": 8584, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "UK text is my custom if some user want to specify it in the input field.", "sentSegmented": ["uk", "text", "is", "my", "custom", "if", "some", "user", "want", "to", "specify", "it", "in", "the", "input", "field"], "sentSegmentedWithoutStops": ["uk", "text", "custom", "user", "want", "specify", "input", "field"], "sentSegmentedWithoutStopsStemmed": ["uk", "text", "custom", "user", "want", "specifi", "input", "field"]}, {"number": 8585, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Right now the problem is, when you put focus outside immediately Chosen field clears that value.", "sentSegmented": ["right", "now", "the", "problem", "is", "when", "you", "put", "focus", "outside", "immediately", "chosen", "field", "clears", "that", "value"], "sentSegmentedWithoutStops": ["right", "problem", "put", "focus", "outside", "immediately", "chosen", "field", "clears", "value"], "sentSegmentedWithoutStopsStemmed": ["right", "problem", "put", "focu", "outsid", "immedi", "chosen", "field", "clear", "valu"]}, {"number": 8586, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm expecting Chosen field keeps value as it is as a input field as well to re-use as custom entered value.", "sentSegmented": ["i", "'m", "expecting", "chosen", "field", "keeps", "value", "as", "it", "is", "as", "a", "input", "field", "as", "well", "to", "re-use", "as", "custom", "entered", "value"], "sentSegmentedWithoutStops": ["'m", "expecting", "chosen", "field", "keeps", "value", "input", "field", "well", "re-use", "custom", "entered", "value"], "sentSegmentedWithoutStopsStemmed": ["'m", "expect", "chosen", "field", "keep", "valu", "input", "field", "well", "re-us", "custom", "enter", "valu"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzQ3NTI0Nw==", "author": {"login": "Skeeve"}, "body": "Sorry, but it seems I'm unable to understand the use case. Maybe someone else can or maybe you can explaine differently?", "bodyText": "Sorry, but it seems I'm unable to understand the use case. Maybe someone else can or maybe you can explaine differently?", "bodyHTML": "<p>Sorry, but it seems I'm unable to understand the use case. Maybe someone else can or maybe you can explaine differently?</p>", "createdAt": "2017-10-02T08:46:37Z", "publishedAt": "2017-10-02T08:46:37Z", "lastEditedAt": null, "updatedAt": "2017-10-02T08:46:37Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8587, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Sorry, but it seems I'm unable to understand the use case.", "sentSegmented": ["sorry", "but", "it", "seems", "i", "'m", "unable", "to", "understand", "the", "use", "case"], "sentSegmentedWithoutStops": ["sorry", "seems", "'m", "unable", "understand", "use", "case"], "sentSegmentedWithoutStopsStemmed": ["sorri", "seem", "'m", "unabl", "understand", "use", "case"]}, {"number": 8588, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Maybe someone else can or maybe you can explaine differently?", "sentSegmented": ["maybe", "someone", "else", "can", "or", "maybe", "you", "can", "explaine", "differently"], "sentSegmentedWithoutStops": ["maybe", "someone", "else", "maybe", "explaine", "differently"], "sentSegmentedWithoutStopsStemmed": ["mayb", "someon", "els", "mayb", "explain", "differ"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzQ3ODIzMQ==", "author": {"login": "Mikk3lRo"}, "body": "I understand the use case - it's like the tagging box in wordpress (among many others). Some call it \"tagging\", others \"Dynamic Option Creation\".\r\n\r\nYou are totally correct in saying that it makes no sense at all if your values are not (directly) related to the labels, and only a list of specific values are valid. This feature should definitely **not** be enabled by default.\r\n\r\nBut the new values are normally handled by some \"external\" system where you might specify the details of each tag separately. The \"tag-box\" just allows you to easily create new tags without leaving your current workflow - so in other words chosen would just insert a new option in the original select using the entered value for both the label and value and select that option. Then it would be up to the developer to handle this non-existent value upon form submission - to actually sanitize the value, add it to a database or whereever the values are coming from... if relevant at all - in some cases any entered value might be valid, and the purpose of chosen is just to provide easy access to a few common values.\r\n\r\nSelect2 has the feature:\r\nhttps://select2.org/tagging", "bodyText": "I understand the use case - it's like the tagging box in wordpress (among many others). Some call it \"tagging\", others \"Dynamic Option Creation\".\nYou are totally correct in saying that it makes no sense at all if your values are not (directly) related to the labels, and only a list of specific values are valid. This feature should definitely not be enabled by default.\nBut the new values are normally handled by some \"external\" system where you might specify the details of each tag separately. The \"tag-box\" just allows you to easily create new tags without leaving your current workflow - so in other words chosen would just insert a new option in the original select using the entered value for both the label and value and select that option. Then it would be up to the developer to handle this non-existent value upon form submission - to actually sanitize the value, add it to a database or whereever the values are coming from... if relevant at all - in some cases any entered value might be valid, and the purpose of chosen is just to provide easy access to a few common values.\nSelect2 has the feature:\nhttps://select2.org/tagging", "bodyHTML": "<p>I understand the use case - it's like the tagging box in wordpress (among many others). Some call it \"tagging\", others \"Dynamic Option Creation\".</p>\n<p>You are totally correct in saying that it makes no sense at all if your values are not (directly) related to the labels, and only a list of specific values are valid. This feature should definitely <strong>not</strong> be enabled by default.</p>\n<p>But the new values are normally handled by some \"external\" system where you might specify the details of each tag separately. The \"tag-box\" just allows you to easily create new tags without leaving your current workflow - so in other words chosen would just insert a new option in the original select using the entered value for both the label and value and select that option. Then it would be up to the developer to handle this non-existent value upon form submission - to actually sanitize the value, add it to a database or whereever the values are coming from... if relevant at all - in some cases any entered value might be valid, and the purpose of chosen is just to provide easy access to a few common values.</p>\n<p>Select2 has the feature:<br>\n<a rel=\"nofollow\" href=\"https://select2.org/tagging\">https://select2.org/tagging</a></p>", "createdAt": "2017-10-02T08:59:59Z", "publishedAt": "2017-10-02T08:59:59Z", "lastEditedAt": "2017-10-02T09:10:49Z", "updatedAt": "2017-10-02T09:10:49Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8589, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I understand the use case - it's like the tagging box in wordpress (among many others).", "sentSegmented": ["i", "understand", "the", "use", "case", "it", "'s", "like", "the", "tagging", "box", "in", "wordpress", "among", "many", "others"], "sentSegmentedWithoutStops": ["understand", "use", "case", "'s", "like", "tagging", "box", "wordpress", "among", "many", "others"], "sentSegmentedWithoutStopsStemmed": ["understand", "use", "case", "'s", "like", "tag", "box", "wordpress", "among", "mani", "other"]}, {"number": 8590, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Some call it \"tagging\", others \"Dynamic Option Creation\".", "sentSegmented": ["some", "call", "it", "tagging", "others", "dynamic", "option", "creation"], "sentSegmentedWithoutStops": ["call", "tagging", "others", "dynamic", "option", "creation"], "sentSegmentedWithoutStopsStemmed": ["call", "tag", "other", "dynam", "option", "creation"]}, {"number": 8591, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You are totally correct in saying that it makes no sense at all if your values are not (directly) related to the labels, and only a list of specific values are valid.", "sentSegmented": ["you", "are", "totally", "correct", "in", "saying", "that", "it", "makes", "no", "sense", "at", "all", "if", "your", "values", "are", "not", "directly", "related", "to", "the", "labels", "and", "only", "a", "list", "of", "specific", "values", "are", "valid"], "sentSegmentedWithoutStops": ["totally", "correct", "saying", "makes", "sense", "values", "directly", "related", "labels", "list", "specific", "values", "valid"], "sentSegmentedWithoutStopsStemmed": ["total", "correct", "say", "make", "sens", "valu", "directli", "relat", "label", "list", "specif", "valu", "valid"]}, {"number": 8592, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This feature should definitely not be enabled by default.", "sentSegmented": ["this", "feature", "should", "definitely", "not", "be", "enabled", "by", "default"], "sentSegmentedWithoutStops": ["feature", "definitely", "enabled", "default"], "sentSegmentedWithoutStopsStemmed": ["featur", "definit", "enabl", "default"]}, {"number": 8593, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But the new values are normally handled by some \"external\" system where you might specify the details of each tag separately.", "sentSegmented": ["but", "the", "new", "values", "are", "normally", "handled", "by", "some", "external", "system", "where", "you", "might", "specify", "the", "details", "of", "each", "tag", "separately"], "sentSegmentedWithoutStops": ["new", "values", "normally", "handled", "external", "system", "might", "specify", "details", "tag", "separately"], "sentSegmentedWithoutStopsStemmed": ["new", "valu", "normal", "handl", "extern", "system", "might", "specifi", "detail", "tag", "separ"]}, {"number": 8594, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The \"tag-box\" just allows you to easily create new tags without leaving your current workflow - so in other words chosen would just insert a new option in the original select using the entered value for both the label and value and select that option.", "sentSegmented": ["the", "tag-box", "just", "allows", "you", "to", "easily", "create", "new", "tags", "without", "leaving", "your", "current", "workflow", "so", "in", "other", "words", "chosen", "would", "just", "insert", "a", "new", "option", "in", "the", "original", "select", "using", "the", "entered", "value", "for", "both", "the", "label", "and", "value", "and", "select", "that", "option"], "sentSegmentedWithoutStops": ["tag-box", "allows", "easily", "create", "new", "tags", "without", "leaving", "current", "workflow", "words", "chosen", "would", "insert", "new", "option", "original", "select", "using", "entered", "value", "label", "value", "select", "option"], "sentSegmentedWithoutStopsStemmed": ["tag-box", "allow", "easili", "creat", "new", "tag", "without", "leav", "current", "workflow", "word", "chosen", "would", "insert", "new", "option", "origin", "select", "use", "enter", "valu", "label", "valu", "select", "option"]}, {"number": 8595, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Then it would be up to the developer to handle this non-existent value upon form submission - to actually sanitize the value, add it to a database or whereever the values are coming from... if relevant at all - in some cases any entered value might be valid, and the purpose of chosen is just to provide easy access to a few common values.", "sentSegmented": ["then", "it", "would", "be", "up", "to", "the", "developer", "to", "handle", "this", "non-existent", "value", "upon", "form", "submission", "to", "actually", "sanitize", "the", "value", "add", "it", "to", "a", "database", "or", "whereever", "the", "values", "are", "coming", "from", "if", "relevant", "at", "all", "in", "some", "cases", "any", "entered", "value", "might", "be", "valid", "and", "the", "purpose", "of", "chosen", "is", "just", "to", "provide", "easy", "access", "to", "a", "few", "common", "values"], "sentSegmentedWithoutStops": ["would", "developer", "handle", "non-existent", "value", "upon", "form", "submission", "actually", "sanitize", "value", "add", "database", "whereever", "values", "coming", "relevant", "cases", "entered", "value", "might", "valid", "purpose", "chosen", "provide", "easy", "access", "common", "values"], "sentSegmentedWithoutStopsStemmed": ["would", "develop", "handl", "non-exist", "valu", "upon", "form", "submiss", "actual", "sanit", "valu", "add", "databas", "whereev", "valu", "come", "relev", "case", "enter", "valu", "might", "valid", "purpos", "chosen", "provid", "easi", "access", "common", "valu"]}, {"number": 8596, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Select2 has the feature:", "sentSegmented": ["select2", "has", "the", "feature"], "sentSegmentedWithoutStops": ["select2", "feature"], "sentSegmentedWithoutStopsStemmed": ["select2", "featur"]}, {"number": 8597, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "https://select2.org/tagging", "sentSegmented": ["https", "//select2.org/tagging"], "sentSegmentedWithoutStops": ["https", "//select2.org/tagging"], "sentSegmentedWithoutStopsStemmed": ["http", "//select2.org/tag"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzUxNDY4NQ==", "author": {"login": "jiteshsojitra"}, "body": "I'm sorry, i'm saying something else; probably very easy to understand but we diverted communication to different feature. See this video - you will surely get it. Please re-read my issue to get more idea.\r\n\r\nRepro steps video: https://www.screencast.com/t/gLFnxsnX", "bodyText": "I'm sorry, i'm saying something else; probably very easy to understand but we diverted communication to different feature. See this video - you will surely get it. Please re-read my issue to get more idea.\nRepro steps video: https://www.screencast.com/t/gLFnxsnX", "bodyHTML": "<p>I'm sorry, i'm saying something else; probably very easy to understand but we diverted communication to different feature. See this video - you will surely get it. Please re-read my issue to get more idea.</p>\n<p>Repro steps video: <a rel=\"nofollow\" href=\"https://www.screencast.com/t/gLFnxsnX\">https://www.screencast.com/t/gLFnxsnX</a></p>", "createdAt": "2017-10-02T12:04:32Z", "publishedAt": "2017-10-02T12:04:32Z", "lastEditedAt": null, "updatedAt": "2017-10-02T12:04:32Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8598, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm sorry, i'm saying something else; probably very easy to understand but we diverted communication to different feature.", "sentSegmented": ["i", "'m", "sorry", "i", "'m", "saying", "something", "else", "probably", "very", "easy", "to", "understand", "but", "we", "diverted", "communication", "to", "different", "feature"], "sentSegmentedWithoutStops": ["'m", "sorry", "'m", "saying", "something", "else", "probably", "easy", "understand", "diverted", "communication", "different", "feature"], "sentSegmentedWithoutStopsStemmed": ["'m", "sorri", "'m", "say", "someth", "els", "probabl", "easi", "understand", "divert", "commun", "differ", "featur"]}, {"number": 8599, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "See this video - you will surely get it.", "sentSegmented": ["see", "this", "video", "you", "will", "surely", "get", "it"], "sentSegmentedWithoutStops": ["see", "video", "surely", "get"], "sentSegmentedWithoutStopsStemmed": ["see", "video", "sure", "get"]}, {"number": 8600, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Please re-read my issue to get more idea.", "sentSegmented": ["please", "re-read", "my", "issue", "to", "get", "more", "idea"], "sentSegmentedWithoutStops": ["please", "re-read", "issue", "get", "idea"], "sentSegmentedWithoutStopsStemmed": ["pleas", "re-read", "issu", "get", "idea"]}, {"number": 8601, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Repro steps video: https://www.screencast.com/t/gLFnxsnX", "sentSegmented": ["repro", "steps", "video", "https", "//www.screencast.com/t/glfnxsnx"], "sentSegmentedWithoutStops": ["repro", "steps", "video", "https", "//www.screencast.com/t/glfnxsnx"], "sentSegmentedWithoutStopsStemmed": ["repro", "step", "video", "http", "//www.screencast.com/t/glfnxsnx"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzUxNTg1Ng==", "author": {"login": "Mikk3lRo"}, "body": "Even after seeing your screencast it still seems to me like you are referring to \"dynamic option creation\"... Have you looked at the select2 link at the end of my previous post and tried that?", "bodyText": "Even after seeing your screencast it still seems to me like you are referring to \"dynamic option creation\"... Have you looked at the select2 link at the end of my previous post and tried that?", "bodyHTML": "<p>Even after seeing your screencast it still seems to me like you are referring to \"dynamic option creation\"... Have you looked at the select2 link at the end of my previous post and tried that?</p>", "createdAt": "2017-10-02T12:10:27Z", "publishedAt": "2017-10-02T12:10:27Z", "lastEditedAt": null, "updatedAt": "2017-10-02T12:10:27Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8602, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Even after seeing your screencast it still seems to me like you are referring to \"dynamic option creation\"... Have you looked at the select2 link at the end of my previous post and tried that?", "sentSegmented": ["even", "after", "seeing", "your", "screencast", "it", "still", "seems", "to", "me", "like", "you", "are", "referring", "to", "dynamic", "option", "creation", "have", "you", "looked", "at", "the", "select2", "link", "at", "the", "end", "of", "my", "previous", "post", "and", "tried", "that"], "sentSegmentedWithoutStops": ["even", "seeing", "screencast", "still", "seems", "like", "referring", "dynamic", "option", "creation", "looked", "select2", "link", "end", "previous", "post", "tried"], "sentSegmentedWithoutStopsStemmed": ["even", "see", "screencast", "still", "seem", "like", "refer", "dynam", "option", "creation", "look", "select2", "link", "end", "previou", "post", "tri"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzUxNzY3Ng==", "author": {"login": "jiteshsojitra"}, "body": "Yes, Mikk; whatever link and information you provided completely makes sense. Thanks a lot!\r\n\r\nI don't want to create the option, if it just preserves the value in dropdown list as input box then it also fine for me to use that custom value for other operation. At this point i like Chosen and don't want to switch to select2.\r\n\r\nNeed to play with java script a bit so it doesn't clear the value if it doesn't find from dropdown? Any help?", "bodyText": "Yes, Mikk; whatever link and information you provided completely makes sense. Thanks a lot!\nI don't want to create the option, if it just preserves the value in dropdown list as input box then it also fine for me to use that custom value for other operation. At this point i like Chosen and don't want to switch to select2.\nNeed to play with java script a bit so it doesn't clear the value if it doesn't find from dropdown? Any help?", "bodyHTML": "<p>Yes, Mikk; whatever link and information you provided completely makes sense. Thanks a lot!</p>\n<p>I don't want to create the option, if it just preserves the value in dropdown list as input box then it also fine for me to use that custom value for other operation. At this point i like Chosen and don't want to switch to select2.</p>\n<p>Need to play with java script a bit so it doesn't clear the value if it doesn't find from dropdown? Any help?</p>", "createdAt": "2017-10-02T12:19:29Z", "publishedAt": "2017-10-02T12:19:29Z", "lastEditedAt": null, "updatedAt": "2017-10-02T12:19:29Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8603, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Yes, Mikk; whatever link and information you provided completely makes sense.", "sentSegmented": ["yes", "mikk", "whatever", "link", "and", "information", "you", "provided", "completely", "makes", "sense"], "sentSegmentedWithoutStops": ["yes", "mikk", "whatever", "link", "information", "provided", "completely", "makes", "sense"], "sentSegmentedWithoutStopsStemmed": ["ye", "mikk", "whatev", "link", "inform", "provid", "complet", "make", "sens"]}, {"number": 8604, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks a lot!", "sentSegmented": ["thanks", "a", "lot"], "sentSegmentedWithoutStops": ["thanks", "lot"], "sentSegmentedWithoutStopsStemmed": ["thank", "lot"]}, {"number": 8605, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I don't want to create the option, if it just preserves the value in dropdown list as input box then it also fine for me to use that custom value for other operation.", "sentSegmented": ["i", "do", "n't", "want", "to", "create", "the", "option", "if", "it", "just", "preserves", "the", "value", "in", "dropdown", "list", "as", "input", "box", "then", "it", "also", "fine", "for", "me", "to", "use", "that", "custom", "value", "for", "other", "operation"], "sentSegmentedWithoutStops": ["n't", "want", "create", "option", "preserves", "value", "dropdown", "list", "input", "box", "also", "fine", "use", "custom", "value", "operation"], "sentSegmentedWithoutStopsStemmed": ["n't", "want", "creat", "option", "preserv", "valu", "dropdown", "list", "input", "box", "also", "fine", "use", "custom", "valu", "oper"]}, {"number": 8606, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "At this point i like Chosen and don't want to switch to select2.", "sentSegmented": ["at", "this", "point", "i", "like", "chosen", "and", "do", "n't", "want", "to", "switch", "to", "select2"], "sentSegmentedWithoutStops": ["point", "like", "chosen", "n't", "want", "switch", "select2"], "sentSegmentedWithoutStopsStemmed": ["point", "like", "chosen", "n't", "want", "switch", "select2"]}, {"number": 8607, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Need to play with java script a bit so it doesn't clear the value if it doesn't find from dropdown?", "sentSegmented": ["need", "to", "play", "with", "java", "script", "a", "bit", "so", "it", "does", "n't", "clear", "the", "value", "if", "it", "does", "n't", "find", "from", "dropdown"], "sentSegmentedWithoutStops": ["need", "play", "java", "script", "bit", "n't", "clear", "value", "n't", "find", "dropdown"], "sentSegmentedWithoutStopsStemmed": ["need", "play", "java", "script", "bit", "n't", "clear", "valu", "n't", "find", "dropdown"]}, {"number": 8608, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Any help?", "sentSegmented": ["any", "help"], "sentSegmentedWithoutStops": ["help"], "sentSegmentedWithoutStopsStemmed": ["help"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzUyMTkzNA==", "author": {"login": "Mikk3lRo"}, "body": "I'm not suggesting you switch to select2 - it was simply meant as an example.\r\n\r\nAs far as I know there is currently no way to do it with (a \"vanilla\") chosen, though the feature has been requested several times. I may have a go at it if I have time, but I won't make any promises just yet.\r\n\r\nHave you looked at the coffeescript files to see if you might be able to do it yourself? Or if someone has already made a fork that supports it?", "bodyText": "I'm not suggesting you switch to select2 - it was simply meant as an example.\nAs far as I know there is currently no way to do it with (a \"vanilla\") chosen, though the feature has been requested several times. I may have a go at it if I have time, but I won't make any promises just yet.\nHave you looked at the coffeescript files to see if you might be able to do it yourself? Or if someone has already made a fork that supports it?", "bodyHTML": "<p>I'm not suggesting you switch to select2 - it was simply meant as an example.</p>\n<p>As far as I know there is currently no way to do it with (a \"vanilla\") chosen, though the feature has been requested several times. I may have a go at it if I have time, but I won't make any promises just yet.</p>\n<p>Have you looked at the coffeescript files to see if you might be able to do it yourself? Or if someone has already made a fork that supports it?</p>", "createdAt": "2017-10-02T12:38:58Z", "publishedAt": "2017-10-02T12:38:58Z", "lastEditedAt": null, "updatedAt": "2017-10-02T12:38:58Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8609, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm not suggesting you switch to select2 - it was simply meant as an example.", "sentSegmented": ["i", "'m", "not", "suggesting", "you", "switch", "to", "select2", "it", "was", "simply", "meant", "as", "an", "example"], "sentSegmentedWithoutStops": ["'m", "suggesting", "switch", "select2", "simply", "meant", "example"], "sentSegmentedWithoutStopsStemmed": ["'m", "suggest", "switch", "select2", "simpli", "meant", "exampl"]}, {"number": 8610, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "As far as I know there is currently no way to do it with (a \"vanilla\") chosen, though the feature has been requested several times.", "sentSegmented": ["as", "far", "as", "i", "know", "there", "is", "currently", "no", "way", "to", "do", "it", "with", "a", "vanilla", "chosen", "though", "the", "feature", "has", "been", "requested", "several", "times"], "sentSegmentedWithoutStops": ["far", "know", "currently", "way", "vanilla", "chosen", "though", "feature", "requested", "several", "times"], "sentSegmentedWithoutStopsStemmed": ["far", "know", "current", "way", "vanilla", "chosen", "though", "featur", "request", "sever", "time"]}, {"number": 8611, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I may have a go at it if I have time, but I won't make any promises just yet.", "sentSegmented": ["i", "may", "have", "a", "go", "at", "it", "if", "i", "have", "time", "but", "i", "wo", "n't", "make", "any", "promises", "just", "yet"], "sentSegmentedWithoutStops": ["may", "go", "time", "wo", "n't", "make", "promises", "yet"], "sentSegmentedWithoutStopsStemmed": ["may", "go", "time", "wo", "n't", "make", "promis", "yet"]}, {"number": 8612, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Have you looked at the coffeescript files to see if you might be able to do it yourself?", "sentSegmented": ["have", "you", "looked", "at", "the", "coffeescript", "files", "to", "see", "if", "you", "might", "be", "able", "to", "do", "it", "yourself"], "sentSegmentedWithoutStops": ["looked", "coffeescript", "files", "see", "might", "able"], "sentSegmentedWithoutStopsStemmed": ["look", "coffeescript", "file", "see", "might", "abl"]}, {"number": 8613, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Or if someone has already made a fork that supports it?", "sentSegmented": ["or", "if", "someone", "has", "already", "made", "a", "fork", "that", "supports", "it"], "sentSegmentedWithoutStops": ["someone", "already", "made", "fork", "supports"], "sentSegmentedWithoutStopsStemmed": ["someon", "alreadi", "made", "fork", "support"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzMzYwNjY5Mg==", "author": {"login": "jiteshsojitra"}, "body": "Agreed Mikk. The biggest problem with dynamic creation is:\r\n- User may enter wrong and junk data and we can't save each and every values into DB (dropdown is picking up values from DB for professional software)\r\n- Dropdown will flood with unwanted values\r\n- Custom/floating input value is bother-less for admin if just used for other purpose and won't be saved\r\n\r\nI'm sorry i didn't take a look coffeescript files but i tried without any luck, as i'm new to all these stuff. Appreciated Mikk for your attention and it would be great if you put some kind of temporary solution without clearing input value when focus goes off and long term solution you can improve it professionally like Select2.", "bodyText": "Agreed Mikk. The biggest problem with dynamic creation is:\n\nUser may enter wrong and junk data and we can't save each and every values into DB (dropdown is picking up values from DB for professional software)\nDropdown will flood with unwanted values\nCustom/floating input value is bother-less for admin if just used for other purpose and won't be saved\n\nI'm sorry i didn't take a look coffeescript files but i tried without any luck, as i'm new to all these stuff. Appreciated Mikk for your attention and it would be great if you put some kind of temporary solution without clearing input value when focus goes off and long term solution you can improve it professionally like Select2.", "bodyHTML": "<p>Agreed Mikk. The biggest problem with dynamic creation is:</p>\n<ul>\n<li>User may enter wrong and junk data and we can't save each and every values into DB (dropdown is picking up values from DB for professional software)</li>\n<li>Dropdown will flood with unwanted values</li>\n<li>Custom/floating input value is bother-less for admin if just used for other purpose and won't be saved</li>\n</ul>\n<p>I'm sorry i didn't take a look coffeescript files but i tried without any luck, as i'm new to all these stuff. Appreciated Mikk for your attention and it would be great if you put some kind of temporary solution without clearing input value when focus goes off and long term solution you can improve it professionally like Select2.</p>", "createdAt": "2017-10-02T17:35:28Z", "publishedAt": "2017-10-02T17:35:28Z", "lastEditedAt": null, "updatedAt": "2017-10-02T17:35:28Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8614, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Agreed Mikk.", "sentSegmented": ["agreed", "mikk"], "sentSegmentedWithoutStops": ["agreed", "mikk"], "sentSegmentedWithoutStopsStemmed": ["agre", "mikk"]}, {"number": 8615, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The biggest problem with dynamic creation is:", "sentSegmented": ["the", "biggest", "problem", "with", "dynamic", "creation", "is"], "sentSegmentedWithoutStops": ["biggest", "problem", "dynamic", "creation"], "sentSegmentedWithoutStopsStemmed": ["biggest", "problem", "dynam", "creation"]}, {"number": 8616, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "User may enter wrong and junk data and we can't save each and every values into DB (dropdown is picking up values from DB for professional software)", "sentSegmented": ["user", "may", "enter", "wrong", "and", "junk", "data", "and", "we", "ca", "n't", "save", "each", "and", "every", "values", "into", "db", "dropdown", "is", "picking", "up", "values", "from", "db", "for", "professional", "software"], "sentSegmentedWithoutStops": ["user", "may", "enter", "wrong", "junk", "data", "ca", "n't", "save", "every", "values", "db", "dropdown", "picking", "values", "db", "professional", "software"], "sentSegmentedWithoutStopsStemmed": ["user", "may", "enter", "wrong", "junk", "data", "ca", "n't", "save", "everi", "valu", "db", "dropdown", "pick", "valu", "db", "profession", "softwar"]}, {"number": 8617, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Dropdown will flood with unwanted values", "sentSegmented": ["dropdown", "will", "flood", "with", "unwanted", "values"], "sentSegmentedWithoutStops": ["dropdown", "flood", "unwanted", "values"], "sentSegmentedWithoutStopsStemmed": ["dropdown", "flood", "unwant", "valu"]}, {"number": 8618, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Custom/floating input value is bother-less for admin if just used for other purpose and won't be saved", "sentSegmented": ["custom/floating", "input", "value", "is", "bother-less", "for", "admin", "if", "just", "used", "for", "other", "purpose", "and", "wo", "n't", "be", "saved"], "sentSegmentedWithoutStops": ["custom/floating", "input", "value", "bother-less", "admin", "used", "purpose", "wo", "n't", "saved"], "sentSegmentedWithoutStopsStemmed": ["custom/flo", "input", "valu", "bother-less", "admin", "use", "purpos", "wo", "n't", "save"]}, {"number": 8619, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm sorry i didn't take a look coffeescript files but i tried without any luck, as i'm new to all these stuff.", "sentSegmented": ["i", "'m", "sorry", "i", "did", "n't", "take", "a", "look", "coffeescript", "files", "but", "i", "tried", "without", "any", "luck", "as", "i", "'m", "new", "to", "all", "these", "stuff"], "sentSegmentedWithoutStops": ["'m", "sorry", "n't", "take", "look", "coffeescript", "files", "tried", "without", "luck", "'m", "new", "stuff"], "sentSegmentedWithoutStopsStemmed": ["'m", "sorri", "n't", "take", "look", "coffeescript", "file", "tri", "without", "luck", "'m", "new", "stuff"]}, {"number": 8620, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Appreciated Mikk for your attention and it would be great if you put some kind of temporary solution without clearing input value when focus goes off and long term solution you can improve it professionally like Select2.", "sentSegmented": ["appreciated", "mikk", "for", "your", "attention", "and", "it", "would", "be", "great", "if", "you", "put", "some", "kind", "of", "temporary", "solution", "without", "clearing", "input", "value", "when", "focus", "goes", "off", "and", "long", "term", "solution", "you", "can", "improve", "it", "professionally", "like", "select2"], "sentSegmentedWithoutStops": ["appreciated", "mikk", "attention", "would", "great", "put", "kind", "temporary", "solution", "without", "clearing", "input", "value", "focus", "goes", "long", "term", "solution", "improve", "professionally", "like", "select2"], "sentSegmentedWithoutStopsStemmed": ["appreci", "mikk", "attent", "would", "great", "put", "kind", "temporari", "solut", "without", "clear", "input", "valu", "focu", "goe", "long", "term", "solut", "improv", "profession", "like", "select2"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzNTAzODMxNQ==", "author": {"login": "koenpunt"}, "body": "#166 is an implementation of this.", "bodyText": "#166 is an implementation of this.", "bodyHTML": "<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1361212\" data-permission-text=\"Title is private\" data-url=\"https://github.com/harvesthq/chosen/issues/166\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/harvesthq/chosen/pull/166/hovercard\" href=\"https://github.com/harvesthq/chosen/pull/166\">#166</a> is an implementation of this.</p>", "createdAt": "2017-10-08T21:02:35Z", "publishedAt": "2017-10-08T21:02:35Z", "lastEditedAt": null, "updatedAt": "2017-10-08T21:02:35Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8621, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "#166 is an implementation of this.", "sentSegmented": ["166", "is", "an", "implementation", "of", "this"], "sentSegmentedWithoutStops": ["166", "implementation"], "sentSegmentedWithoutStopsStemmed": ["166", "implement"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDczNDg1MDQyNQ==", "author": {"login": "JpSilver"}, "body": "> Agreed Mikk. The biggest problem with dynamic creation is:\r\n> \r\n>     * User may enter wrong and junk data and we can't save each and every values into DB (dropdown is picking up values from DB for professional software)\r\n> \r\n>     * Dropdown will flood with unwanted values\r\n> \r\n>     * Custom/floating input value is bother-less for admin if just used for other purpose and won't be saved\r\n> \r\n> \r\n> I'm sorry i didn't take a look coffeescript files but i tried without any luck, as i'm new to all these stuff. Appreciated Mikk for your attention and it would be great if you put some kind of temporary solution without clearing input value when focus goes off and long term solution you can improve it professionally like Select2.\r\n\r\nI don't agree at all... Its the developers duty to check for these things. if you think like this you are making your modules less modular. You need to allow for freedom for the developer. At least allow for a disable option for the auto clear if no value is found. It doesn't even have to add to the list. If it can just stay in the text field then everything should be fine. The back-end developer can check for this and append the data to the database, when the page is reloaded the new value will appear in the select. I really don't get why you guys are saying these things... Where as if you \"Hack\" the select now and dynamically add the items to the options you will encounter these problems obviously but this will only be while the page is open or if you update the list via AJAX calls, exactly how you set it up now. So please re-conceder and just allow for \"DON'T CLEAR THE FREAKEN LIST IF THERE ARE NO VALUES!\"", "bodyText": "Agreed Mikk. The biggest problem with dynamic creation is:\n* User may enter wrong and junk data and we can't save each and every values into DB (dropdown is picking up values from DB for professional software)\n\n* Dropdown will flood with unwanted values\n\n* Custom/floating input value is bother-less for admin if just used for other purpose and won't be saved\n\nI'm sorry i didn't take a look coffeescript files but i tried without any luck, as i'm new to all these stuff. Appreciated Mikk for your attention and it would be great if you put some kind of temporary solution without clearing input value when focus goes off and long term solution you can improve it professionally like Select2.\n\nI don't agree at all... Its the developers duty to check for these things. if you think like this you are making your modules less modular. You need to allow for freedom for the developer. At least allow for a disable option for the auto clear if no value is found. It doesn't even have to add to the list. If it can just stay in the text field then everything should be fine. The back-end developer can check for this and append the data to the database, when the page is reloaded the new value will appear in the select. I really don't get why you guys are saying these things... Where as if you \"Hack\" the select now and dynamically add the items to the options you will encounter these problems obviously but this will only be while the page is open or if you update the list via AJAX calls, exactly how you set it up now. So please re-conceder and just allow for \"DON'T CLEAR THE FREAKEN LIST IF THERE ARE NO VALUES!\"", "bodyHTML": "<blockquote>\n<p>Agreed Mikk. The biggest problem with dynamic creation is:</p>\n<pre><code>* User may enter wrong and junk data and we can't save each and every values into DB (dropdown is picking up values from DB for professional software)\n\n* Dropdown will flood with unwanted values\n\n* Custom/floating input value is bother-less for admin if just used for other purpose and won't be saved\n</code></pre>\n<p>I'm sorry i didn't take a look coffeescript files but i tried without any luck, as i'm new to all these stuff. Appreciated Mikk for your attention and it would be great if you put some kind of temporary solution without clearing input value when focus goes off and long term solution you can improve it professionally like Select2.</p>\n</blockquote>\n<p>I don't agree at all... Its the developers duty to check for these things. if you think like this you are making your modules less modular. You need to allow for freedom for the developer. At least allow for a disable option for the auto clear if no value is found. It doesn't even have to add to the list. If it can just stay in the text field then everything should be fine. The back-end developer can check for this and append the data to the database, when the page is reloaded the new value will appear in the select. I really don't get why you guys are saying these things... Where as if you \"Hack\" the select now and dynamically add the items to the options you will encounter these problems obviously but this will only be while the page is open or if you update the list via AJAX calls, exactly how you set it up now. So please re-conceder and just allow for \"DON'T CLEAR THE FREAKEN LIST IF THERE ARE NO VALUES!\"</p>", "createdAt": "2020-11-27T14:04:05Z", "publishedAt": "2020-11-27T14:04:05Z", "lastEditedAt": null, "updatedAt": "2020-11-27T14:04:05Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 8622, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Agreed Mikk.", "sentSegmented": ["agreed", "mikk"], "sentSegmentedWithoutStops": ["agreed", "mikk"], "sentSegmentedWithoutStopsStemmed": ["agre", "mikk"]}, {"number": 8623, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "The biggest problem with dynamic creation is:", "sentSegmented": ["the", "biggest", "problem", "with", "dynamic", "creation", "is"], "sentSegmentedWithoutStops": ["biggest", "problem", "dynamic", "creation"], "sentSegmentedWithoutStopsStemmed": ["biggest", "problem", "dynam", "creation"]}, {"number": 8624, "isCode": true, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "* User may enter wrong and junk data and we can't save each and every values into DB (dropdown is picking up values from DB for professional software)", "sentSegmented": ["user", "may", "enter", "wrong", "and", "junk", "data", "and", "we", "ca", "n't", "save", "each", "and", "every", "values", "into", "db", "dropdown", "is", "picking", "up", "values", "from", "db", "for", "professional", "software"], "sentSegmentedWithoutStops": ["user", "may", "enter", "wrong", "junk", "ca", "n't", "save", "every", "values", "db", "dropdown", "picking", "values", "db", "professional", "software"], "sentSegmentedWithoutStopsStemmed": ["user", "may", "enter", "wrong", "junk", "ca", "n't", "save", "everi", "valu", "db", "dropdown", "pick", "valu", "db", "profession", "softwar"]}, {"number": 8625, "isCode": true, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "* Dropdown will flood with unwanted values", "sentSegmented": ["dropdown", "will", "flood", "with", "unwanted", "values"], "sentSegmentedWithoutStops": ["dropdown", "flood", "unwanted", "values"], "sentSegmentedWithoutStopsStemmed": ["dropdown", "flood", "unwant", "valu"]}, {"number": 8626, "isCode": true, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "* Custom/floating input value is bother-less for admin if just used for other purpose and won't be saved", "sentSegmented": ["custom/floating", "input", "value", "is", "bother-less", "for", "admin", "if", "just", "used", "for", "other", "purpose", "and", "wo", "n't", "be", "saved"], "sentSegmentedWithoutStops": ["custom/floating", "value", "bother-less", "admin", "used", "purpose", "wo", "n't", "saved"], "sentSegmentedWithoutStopsStemmed": ["custom/flo", "valu", "bother-less", "admin", "use", "purpos", "wo", "n't", "save"]}, {"number": 8627, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I'm sorry i didn't take a look coffeescript files but i tried without any luck, as i'm new to all these stuff.", "sentSegmented": ["i", "'m", "sorry", "i", "did", "n't", "take", "a", "look", "coffeescript", "files", "but", "i", "tried", "without", "any", "luck", "as", "i", "'m", "new", "to", "all", "these", "stuff"], "sentSegmentedWithoutStops": ["'m", "sorry", "n't", "take", "look", "coffeescript", "files", "tried", "without", "luck", "'m", "new", "stuff"], "sentSegmentedWithoutStopsStemmed": ["'m", "sorri", "n't", "take", "look", "coffeescript", "file", "tri", "without", "luck", "'m", "new", "stuff"]}, {"number": 8628, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Appreciated Mikk for your attention and it would be great if you put some kind of temporary solution without clearing input value when focus goes off and long term solution you can improve it professionally like Select2.", "sentSegmented": ["appreciated", "mikk", "for", "your", "attention", "and", "it", "would", "be", "great", "if", "you", "put", "some", "kind", "of", "temporary", "solution", "without", "clearing", "input", "value", "when", "focus", "goes", "off", "and", "long", "term", "solution", "you", "can", "improve", "it", "professionally", "like", "select2"], "sentSegmentedWithoutStops": ["appreciated", "mikk", "attention", "would", "great", "put", "kind", "temporary", "solution", "without", "clearing", "input", "value", "focus", "goes", "long", "term", "solution", "improve", "professionally", "like", "select2"], "sentSegmentedWithoutStopsStemmed": ["appreci", "mikk", "attent", "would", "great", "put", "kind", "temporari", "solut", "without", "clear", "input", "valu", "focu", "goe", "long", "term", "solut", "improv", "profession", "like", "select2"]}, {"number": 8629, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I don't agree at all... Its the developers duty to check for these things.", "sentSegmented": ["i", "do", "n't", "agree", "at", "all", "its", "the", "developers", "duty", "to", "check", "for", "these", "things"], "sentSegmentedWithoutStops": ["n't", "agree", "developers", "duty", "check", "things"], "sentSegmentedWithoutStopsStemmed": ["n't", "agre", "develop", "duti", "check", "thing"]}, {"number": 8630, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "if you think like this you are making your modules less modular.", "sentSegmented": ["if", "you", "think", "like", "this", "you", "are", "making", "your", "modules", "less", "modular"], "sentSegmentedWithoutStops": ["think", "like", "making", "modules", "less", "modular"], "sentSegmentedWithoutStopsStemmed": ["think", "like", "make", "modul", "less", "modular"]}, {"number": 8631, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You need to allow for freedom for the developer.", "sentSegmented": ["you", "need", "to", "allow", "for", "freedom", "for", "the", "developer"], "sentSegmentedWithoutStops": ["need", "allow", "freedom", "developer"], "sentSegmentedWithoutStopsStemmed": ["need", "allow", "freedom", "develop"]}, {"number": 8632, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "At least allow for a disable option for the auto clear if no value is found.", "sentSegmented": ["at", "least", "allow", "for", "a", "disable", "option", "for", "the", "auto", "clear", "if", "no", "value", "is", "found"], "sentSegmentedWithoutStops": ["least", "allow", "disable", "option", "auto", "clear", "value", "found"], "sentSegmentedWithoutStopsStemmed": ["least", "allow", "disabl", "option", "auto", "clear", "valu", "found"]}, {"number": 8633, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It doesn't even have to add to the list.", "sentSegmented": ["it", "does", "n't", "even", "have", "to", "add", "to", "the", "list"], "sentSegmentedWithoutStops": ["n't", "even", "add", "list"], "sentSegmentedWithoutStopsStemmed": ["n't", "even", "add", "list"]}, {"number": 8634, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If it can just stay in the text field then everything should be fine.", "sentSegmented": ["if", "it", "can", "just", "stay", "in", "the", "text", "field", "then", "everything", "should", "be", "fine"], "sentSegmentedWithoutStops": ["stay", "text", "field", "everything", "fine"], "sentSegmentedWithoutStopsStemmed": ["stay", "text", "field", "everyth", "fine"]}, {"number": 8635, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The back-end developer can check for this and append the data to the database, when the page is reloaded the new value will appear in the select.", "sentSegmented": ["the", "back-end", "developer", "can", "check", "for", "this", "and", "append", "the", "data", "to", "the", "database", "when", "the", "page", "is", "reloaded", "the", "new", "value", "will", "appear", "in", "the", "select"], "sentSegmentedWithoutStops": ["back-end", "developer", "check", "append", "data", "database", "page", "reloaded", "new", "value", "appear", "select"], "sentSegmentedWithoutStopsStemmed": ["back-end", "develop", "check", "append", "data", "databas", "page", "reload", "new", "valu", "appear", "select"]}, {"number": 8636, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I really don't get why you guys are saying these things... Where as if you \"Hack\" the select now and dynamically add the items to the options you will encounter these problems obviously but this will only be while the page is open or if you update the list via AJAX calls, exactly how you set it up now.", "sentSegmented": ["i", "really", "do", "n't", "get", "why", "you", "guys", "are", "saying", "these", "things", "where", "as", "if", "you", "hack", "the", "select", "now", "and", "dynamically", "add", "the", "items", "to", "the", "options", "you", "will", "encounter", "these", "problems", "obviously", "but", "this", "will", "only", "be", "while", "the", "page", "is", "open", "or", "if", "you", "update", "the", "list", "via", "ajax", "calls", "exactly", "how", "you", "set", "it", "up", "now"], "sentSegmentedWithoutStops": ["really", "n't", "get", "guys", "saying", "things", "hack", "select", "dynamically", "add", "items", "options", "encounter", "problems", "obviously", "page", "open", "update", "list", "via", "ajax", "calls", "exactly", "set"], "sentSegmentedWithoutStopsStemmed": ["realli", "n't", "get", "guy", "say", "thing", "hack", "select", "dynam", "add", "item", "option", "encount", "problem", "obvious", "page", "open", "updat", "list", "via", "ajax", "call", "exactli", "set"]}, {"number": 8637, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So please re-conceder and just allow for \"DON'T CLEAR THE FREAKEN LIST IF THERE ARE NO VALUES!\"", "sentSegmented": ["so", "please", "re-conceder", "and", "just", "allow", "for", "do", "n't", "clear", "the", "freaken", "list", "if", "there", "are", "no", "values"], "sentSegmentedWithoutStops": ["please", "re-conceder", "allow", "n't", "clear", "freaken", "list", "values"], "sentSegmentedWithoutStopsStemmed": ["pleas", "re-conced", "allow", "n't", "clear", "freaken", "list", "valu"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOK8zteQ==", "hasNextPage": false}, "totalCount": 11}, "labels": {"edges": []}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-12-22T10:27:05Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-05-24T10:10:58Z"}}]}, "state": "OPEN", "titleSegmented": ["allowing", "user", "to", "keep", "custom", "text", "if", "value", "not", "found", "from", "dropdown", "lists"], "titleSegmentedWithoutStops": ["allowing", "user", "keep", "custom", "text", "value", "found", "dropdown", "lists"], "titleSegmentedWithoutStopsStemmed": ["allow", "user", "keep", "custom", "text", "valu", "found", "dropdown", "list"], "bodyParsed": [{"number": 8563, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm using Chosen and its great!", "sentSegmented": ["i", "'m", "using", "chosen", "and", "its", "great"], "sentSegmentedWithoutStops": ["'m", "using", "chosen", "great"], "sentSegmentedWithoutStopsStemmed": ["'m", "use", "chosen", "great"]}, {"number": 8564, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "More, i would like you to allow user to keep custom text if value not found from dropdown lists.", "sentSegmented": ["more", "i", "would", "like", "you", "to", "allow", "user", "to", "keep", "custom", "text", "if", "value", "not", "found", "from", "dropdown", "lists"], "sentSegmentedWithoutStops": ["would", "like", "allow", "user", "keep", "custom", "text", "value", "found", "dropdown", "lists"], "sentSegmentedWithoutStopsStemmed": ["would", "like", "allow", "user", "keep", "custom", "text", "valu", "found", "dropdown", "list"]}, {"number": 8565, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This is one of the thing killing to specify custom/float value to use for other purpose.", "sentSegmented": ["this", "is", "one", "of", "the", "thing", "killing", "to", "specify", "custom/float", "value", "to", "use", "for", "other", "purpose"], "sentSegmentedWithoutStops": ["one", "thing", "killing", "specify", "custom/float", "value", "use", "purpose"], "sentSegmentedWithoutStopsStemmed": ["one", "thing", "kill", "specifi", "custom/float", "valu", "use", "purpos"]}, {"number": 8566, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "My requirement is input value should preserve the text if value not found from dropdown lists.", "sentSegmented": ["my", "requirement", "is", "input", "value", "should", "preserve", "the", "text", "if", "value", "not", "found", "from", "dropdown", "lists"], "sentSegmentedWithoutStops": ["requirement", "input", "value", "preserve", "text", "value", "found", "dropdown", "lists"], "sentSegmentedWithoutStopsStemmed": ["requir", "input", "valu", "preserv", "text", "valu", "found", "dropdown", "list"]}, {"number": 8567, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Steps to reproduce", "sentSegmented": ["steps", "to", "reproduce"], "sentSegmentedWithoutStops": ["steps", "reproduce"], "sentSegmentedWithoutStopsStemmed": ["step", "reproduc"]}, {"number": 8568, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Assume dropdown value contains:", "sentSegmented": ["assume", "dropdown", "value", "contains"], "sentSegmentedWithoutStops": ["assume", "dropdown", "value", "contains"], "sentSegmentedWithoutStopsStemmed": ["assum", "dropdown", "valu", "contain"]}, {"number": 8569, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "India", "sentSegmented": ["india"], "sentSegmentedWithoutStops": ["india"], "sentSegmentedWithoutStopsStemmed": ["india"]}, {"number": 8570, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "USA", "sentSegmented": ["usa"], "sentSegmentedWithoutStops": ["usa"], "sentSegmentedWithoutStopsStemmed": ["usa"]}, {"number": 8571, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Type UK", "sentSegmented": ["type", "uk"], "sentSegmentedWithoutStops": ["type", "uk"], "sentSegmentedWithoutStopsStemmed": ["type", "uk"]}, {"number": 8572, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Move mouse outside dropwown", "sentSegmented": ["move", "mouse", "outside", "dropwown"], "sentSegmentedWithoutStops": ["move", "mouse", "outside", "dropwown"], "sentSegmentedWithoutStopsStemmed": ["move", "mous", "outsid", "dropwown"]}, {"number": 8573, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Actual: UK is removed because dropdown doesn't find it.", "sentSegmented": ["actual", "uk", "is", "removed", "because", "dropdown", "does", "n't", "find", "it"], "sentSegmentedWithoutStops": ["actual", "uk", "removed", "dropdown", "n't", "find"], "sentSegmentedWithoutStopsStemmed": ["actual", "uk", "remov", "dropdown", "n't", "find"]}, {"number": 8574, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Expected: Preserve UK text as it is to use it for other purpose", "sentSegmented": ["expected", "preserve", "uk", "text", "as", "it", "is", "to", "use", "it", "for", "other", "purpose"], "sentSegmentedWithoutStops": ["expected", "preserve", "uk", "text", "use", "purpose"], "sentSegmentedWithoutStopsStemmed": ["expect", "preserv", "uk", "text", "use", "purpos"]}, {"number": 8575, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I tried all the options mentioned in https://harvesthq.github.io/chosen/options.html but no luck.", "sentSegmented": ["i", "tried", "all", "the", "options", "mentioned", "in", "https", "//harvesthq.github.io/chosen/options.html", "but", "no", "luck"], "sentSegmentedWithoutStops": ["tried", "options", "mentioned", "https", "//harvesthq.github.io/chosen/options.html", "luck"], "sentSegmentedWithoutStopsStemmed": ["tri", "option", "mention", "http", "//harvesthq.github.io/chosen/options.html", "luck"]}, {"number": 8576, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Any work around?", "sentSegmented": ["any", "work", "around"], "sentSegmentedWithoutStops": ["work", "around"], "sentSegmentedWithoutStopsStemmed": ["work", "around"]}, {"number": 8577, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "JS customization help?", "sentSegmented": ["js", "customization", "help"], "sentSegmentedWithoutStops": ["js", "customization", "help"], "sentSegmentedWithoutStopsStemmed": ["js", "custom", "help"]}, {"number": 8578, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Can you introduce such kind of new option?", "sentSegmented": ["can", "you", "introduce", "such", "kind", "of", "new", "option"], "sentSegmentedWithoutStops": ["introduce", "kind", "new", "option"], "sentSegmentedWithoutStopsStemmed": ["introduc", "kind", "new", "option"]}, {"number": 8579, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "- Highly appreciated!", "sentSegmented": ["highly", "appreciated"], "sentSegmentedWithoutStops": ["highly", "appreciated"], "sentSegmentedWithoutStopsStemmed": ["highli", "appreci"]}]}