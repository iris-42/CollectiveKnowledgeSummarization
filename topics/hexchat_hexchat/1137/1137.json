{"repository": {"owner": {"login": "hexchat"}, "name": "hexchat", "forkCount": 464, "stargazerCount": 2436, "createdAt": "2012-07-11T20:42:10Z", "updatedAt": "2021-03-16T15:23:34Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "irc"}}}, {"node": {"topic": {"name": "irc-client"}}}, {"node": {"topic": {"name": "gtk"}}}, {"node": {"topic": {"name": "linux"}}}, {"node": {"topic": {"name": "windows"}}}, {"node": {"topic": {"name": "meson"}}}, {"node": {"topic": {"name": "c"}}}, {"node": {"topic": {"name": "hexchat"}}}]}, "languages": {"edges": [{"node": {"name": "Shell"}}, {"node": {"name": "C"}}, {"node": {"name": "Perl"}}, {"node": {"name": "Objective-C"}}, {"node": {"name": "Python"}}, {"node": {"name": "C++"}}, {"node": {"name": "C#"}}, {"node": {"name": "Inno Setup"}}, {"node": {"name": "PowerShell"}}, {"node": {"name": "Batchfile"}}, {"node": {"name": "Meson"}}, {"node": {"name": "Roff"}}]}, "primaryLanguage": {"name": "C"}}, "id": "MDU6SXNzdWU0Mjc2NTM1MA==", "number": 1137, "author": {"login": "lenny87"}, "title": "Copying from hexchat does not work", "body": "When I select some text in HexChat and try to copy it with ctrl+C keystroke, nothing happens and old copied text (or nothing) will remain in paste buffer.\n\nVersion: HexChat 2.10.1 (from Arch Linux package)\nCompiled: Jul 29 2014\nOS: Linux 3.16.2-1-ck [x86_64/1,40GHz/SMP]\nOS: Arch Linux x64\n", "bodyHTML": "<p>When I select some text in HexChat and try to copy it with ctrl+C keystroke, nothing happens and old copied text (or nothing) will remain in paste buffer.</p>\n<p>Version: HexChat 2.10.1 (from Arch Linux package)<br>\nCompiled: Jul 29 2014<br>\nOS: Linux 3.16.2-1-ck [x86_64/1,40GHz/SMP]<br>\nOS: Arch Linux x64</p>", "bodyText": "When I select some text in HexChat and try to copy it with ctrl+C keystroke, nothing happens and old copied text (or nothing) will remain in paste buffer.\nVersion: HexChat 2.10.1 (from Arch Linux package)\nCompiled: Jul 29 2014\nOS: Linux 3.16.2-1-ck [x86_64/1,40GHz/SMP]\nOS: Arch Linux x64", "assignees": {"edges": []}, "createdAt": "2014-09-15T12:06:49Z", "closed": true, "closedAt": "2014-09-15T12:20:32Z", "lastEditedAt": null, "publishedAt": "2014-09-15T12:06:49Z", "comments": {"edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDU1NTgyNjE4", "author": {"login": "Arnavion"}, "body": "Copying text is done via <kbd>Ctrl</kbd>-<kbd>Shift</kbd>-<kbd>C</kbd>. <kbd>Ctrl</kbd>-<kbd>C</kbd> copies text from the input box.\n\nAlso, if you have copy text on selection enabled (the default) then you don't need to press anything to copy.\n", "bodyText": "Copying text is done via Ctrl-Shift-C. Ctrl-C copies text from the input box.\nAlso, if you have copy text on selection enabled (the default) then you don't need to press anything to copy.", "bodyHTML": "<p>Copying text is done via <kbd>Ctrl</kbd>-<kbd>Shift</kbd>-<kbd>C</kbd>. <kbd>Ctrl</kbd>-<kbd>C</kbd> copies text from the input box.</p>\n<p>Also, if you have copy text on selection enabled (the default) then you don't need to press anything to copy.</p>", "createdAt": "2014-09-15T12:20:32Z", "publishedAt": "2014-09-15T12:20:32Z", "lastEditedAt": null, "updatedAt": "2014-09-15T12:21:57Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6423, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Copying text is done via Ctrl-Shift-C. Ctrl-C copies text from the input box.", "sentSegmented": ["copying", "text", "is", "done", "via", "ctrl-shift-c.", "ctrl-c", "copies", "text", "from", "the", "input", "box"], "sentSegmentedWithoutStops": ["copying", "text", "done", "via", "ctrl-shift-c.", "ctrl-c", "copies", "text", "input", "box"], "sentSegmentedWithoutStopsStemmed": ["copi", "text", "done", "via", "ctrl-shift-c.", "ctrl-c", "copi", "text", "input", "box"]}, {"number": 6424, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Also, if you have copy text on selection enabled (the default) then you don't need to press anything to copy.", "sentSegmented": ["also", "if", "you", "have", "copy", "text", "on", "selection", "enabled", "the", "default", "then", "you", "do", "n't", "need", "to", "press", "anything", "to", "copy"], "sentSegmentedWithoutStops": ["also", "copy", "text", "selection", "enabled", "default", "n't", "need", "press", "anything", "copy"], "sentSegmentedWithoutStopsStemmed": ["also", "copi", "text", "select", "enabl", "default", "n't", "need", "press", "anyth", "copi"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU1NjUyNDQx", "author": {"login": "deckblad"}, "body": "Why does hexchat break from the standard convention of Ctrl+C?\n", "bodyText": "Why does hexchat break from the standard convention of Ctrl+C?", "bodyHTML": "<p>Why does hexchat break from the standard convention of Ctrl+C?</p>", "createdAt": "2014-09-15T20:21:36Z", "publishedAt": "2014-09-15T20:21:36Z", "lastEditedAt": null, "updatedAt": "2014-09-15T20:21:36Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2017-05-12T01:33:21Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-07-14T02:18:24Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-11-20T04:15:50Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-05-23T15:47:22Z"}}]}, "bodyParsed": [{"number": 6425, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Why does hexchat break from the standard convention of Ctrl+C?", "sentSegmented": ["why", "does", "hexchat", "break", "from", "the", "standard", "convention", "of", "ctrl+c"], "sentSegmentedWithoutStops": ["hexchat", "break", "standard", "convention", "ctrl+c"], "sentSegmentedWithoutStopsStemmed": ["hexchat", "break", "standard", "convent", "ctrl+c"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU1NjU2MTA3", "author": {"login": "Farow"}, "body": "It's because the text box is always active and ctrl-c applies to whatever is the active element.\n", "bodyText": "It's because the text box is always active and ctrl-c applies to whatever is the active element.", "bodyHTML": "<p>It's because the text box is always active and ctrl-c applies to whatever is the active element.</p>", "createdAt": "2014-09-15T20:47:39Z", "publishedAt": "2014-09-15T20:47:39Z", "lastEditedAt": null, "updatedAt": "2014-09-15T20:47:39Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-11-20T04:16:08Z"}}]}, "bodyParsed": [{"number": 6426, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's because the text box is always active and ctrl-c applies to whatever is the active element.", "sentSegmented": ["it", "'s", "because", "the", "text", "box", "is", "always", "active", "and", "ctrl-c", "applies", "to", "whatever", "is", "the", "active", "element"], "sentSegmentedWithoutStops": ["'s", "text", "box", "always", "active", "ctrl-c", "applies", "whatever", "active", "element"], "sentSegmentedWithoutStopsStemmed": ["'s", "text", "box", "alway", "activ", "ctrl-c", "appli", "whatev", "activ", "element"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDY1OTcyMQ==", "author": {"login": "kparal"}, "body": "Since multiple users complain about this, isn't it possible to simply listen for ctrl+c keypress, and if that happens, copy the **text selection** into the clipboard? I.e. handle the ctrl+c shortcut manually, because of this always-active input box?\n", "bodyText": "Since multiple users complain about this, isn't it possible to simply listen for ctrl+c keypress, and if that happens, copy the text selection into the clipboard? I.e. handle the ctrl+c shortcut manually, because of this always-active input box?", "bodyHTML": "<p>Since multiple users complain about this, isn't it possible to simply listen for ctrl+c keypress, and if that happens, copy the <strong>text selection</strong> into the clipboard? I.e. handle the ctrl+c shortcut manually, because of this always-active input box?</p>", "createdAt": "2015-05-22T13:24:12Z", "publishedAt": "2015-05-22T13:24:12Z", "lastEditedAt": null, "updatedAt": "2015-05-22T13:24:12Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-07-14T02:18:32Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-05-23T15:47:36Z"}}]}, "bodyParsed": [{"number": 6427, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Since multiple users complain about this, isn't it possible to simply listen for ctrl+c keypress, and if that happens, copy the text selection into the clipboard?", "sentSegmented": ["since", "multiple", "users", "complain", "about", "this", "is", "n't", "it", "possible", "to", "simply", "listen", "for", "ctrl+c", "keypress", "and", "if", "that", "happens", "copy", "the", "text", "selection", "into", "the", "clipboard"], "sentSegmentedWithoutStops": ["since", "multiple", "users", "complain", "n't", "possible", "simply", "listen", "ctrl+c", "keypress", "happens", "copy", "text", "selection", "clipboard"], "sentSegmentedWithoutStopsStemmed": ["sinc", "multipl", "user", "complain", "n't", "possibl", "simpli", "listen", "ctrl+c", "keypress", "happen", "copi", "text", "select", "clipboard"]}, {"number": 6428, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I.e.", "sentSegmented": ["i.e"], "sentSegmentedWithoutStops": ["i.e"], "sentSegmentedWithoutStopsStemmed": ["i.e"]}, {"number": 6429, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "handle the ctrl+c shortcut manually, because of this always-active input box?", "sentSegmented": ["handle", "the", "ctrl+c", "shortcut", "manually", "because", "of", "this", "always-active", "input", "box"], "sentSegmentedWithoutStops": ["handle", "ctrl+c", "shortcut", "manually", "always-active", "input", "box"], "sentSegmentedWithoutStopsStemmed": ["handl", "ctrl+c", "shortcut", "manual", "always-act", "input", "box"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDY2MDkwMA==", "author": {"login": "TingPing"}, "body": "@kparal You could do some hacky workaround like \"if no selection in input, but ctrl+c pressed, and selection in xtext, then copy that\".. but that is so unclear and un-obvious it just makes the situation worse. xtext was designed stupidly, thats just all there is to it and it wont be changing any time soon.\n", "bodyText": "@kparal You could do some hacky workaround like \"if no selection in input, but ctrl+c pressed, and selection in xtext, then copy that\".. but that is so unclear and un-obvious it just makes the situation worse. xtext was designed stupidly, thats just all there is to it and it wont be changing any time soon.", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/kparal/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kparal\">@kparal</a> You could do some hacky workaround like \"if no selection in input, but ctrl+c pressed, and selection in xtext, then copy that\".. but that is so unclear and un-obvious it just makes the situation worse. xtext was designed stupidly, thats just all there is to it and it wont be changing any time soon.</p>", "createdAt": "2015-05-22T13:29:20Z", "publishedAt": "2015-05-22T13:29:20Z", "lastEditedAt": null, "updatedAt": "2015-05-22T13:29:20Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6430, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@kparal You could do some hacky workaround like \"if no selection in input, but ctrl+c pressed, and selection in xtext, then copy that\".. but that is so unclear and un-obvious it just makes the situation worse.", "sentSegmented": ["kparal", "you", "could", "do", "some", "hacky", "workaround", "like", "if", "no", "selection", "in", "input", "but", "ctrl+c", "pressed", "and", "selection", "in", "xtext", "then", "copy", "that", "but", "that", "is", "so", "unclear", "and", "un-obvious", "it", "just", "makes", "the", "situation", "worse"], "sentSegmentedWithoutStops": ["kparal", "could", "hacky", "workaround", "like", "selection", "input", "ctrl+c", "pressed", "selection", "xtext", "copy", "unclear", "un-obvious", "makes", "situation", "worse"], "sentSegmentedWithoutStopsStemmed": ["kparal", "could", "hacki", "workaround", "like", "select", "input", "ctrl+c", "press", "select", "xtext", "copi", "unclear", "un-obvi", "make", "situat", "wors"]}, {"number": 6431, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "xtext was designed stupidly, thats just all there is to it and it wont be changing any time soon.", "sentSegmented": ["xtext", "was", "designed", "stupidly", "thats", "just", "all", "there", "is", "to", "it", "and", "it", "wont", "be", "changing", "any", "time", "soon"], "sentSegmentedWithoutStops": ["xtext", "designed", "stupidly", "thats", "wont", "changing", "time", "soon"], "sentSegmentedWithoutStopsStemmed": ["xtext", "design", "stupidli", "that", "wont", "chang", "time", "soon"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDY3Mzg5Nw==", "author": {"login": "kparal"}, "body": "Why is it unobvious and why does it make the situation worse?\n- If I press Ctrl+C, it's obvious I want to copy something. If there's nothing selected in the input box, and there's something selected in chat, that's what I want to copy, you can't go wrong here. The only complicated situation is when both input box and chat have some selection active. Then, I assume, input box would be preferred. It makes sense from the user point of view and it is easy to correct.\n- About the situation being better or worse - currently, I hit ctrl+c and nothing happens. I've been using xchat/hexchat for several years now, and I still do it **daily**. And I'm daily angry about it. Ctrl+C is just a reflex, you don't think about it. If you implement this, it will do the right thing in 99% of times, and that's what I call a great improvement.\n\nPlease note that you can still keep the ctrl+shift+c shortcut in place, for those who are used to it and/or want to always be sure they copy from chat. I'm not asking to replace it. Just to make the world-known ctrl+c work as expected, at least in majority of cases.\n", "bodyText": "Why is it unobvious and why does it make the situation worse?\n\nIf I press Ctrl+C, it's obvious I want to copy something. If there's nothing selected in the input box, and there's something selected in chat, that's what I want to copy, you can't go wrong here. The only complicated situation is when both input box and chat have some selection active. Then, I assume, input box would be preferred. It makes sense from the user point of view and it is easy to correct.\nAbout the situation being better or worse - currently, I hit ctrl+c and nothing happens. I've been using xchat/hexchat for several years now, and I still do it daily. And I'm daily angry about it. Ctrl+C is just a reflex, you don't think about it. If you implement this, it will do the right thing in 99% of times, and that's what I call a great improvement.\n\nPlease note that you can still keep the ctrl+shift+c shortcut in place, for those who are used to it and/or want to always be sure they copy from chat. I'm not asking to replace it. Just to make the world-known ctrl+c work as expected, at least in majority of cases.", "bodyHTML": "<p>Why is it unobvious and why does it make the situation worse?</p>\n<ul>\n<li>If I press Ctrl+C, it's obvious I want to copy something. If there's nothing selected in the input box, and there's something selected in chat, that's what I want to copy, you can't go wrong here. The only complicated situation is when both input box and chat have some selection active. Then, I assume, input box would be preferred. It makes sense from the user point of view and it is easy to correct.</li>\n<li>About the situation being better or worse - currently, I hit ctrl+c and nothing happens. I've been using xchat/hexchat for several years now, and I still do it <strong>daily</strong>. And I'm daily angry about it. Ctrl+C is just a reflex, you don't think about it. If you implement this, it will do the right thing in 99% of times, and that's what I call a great improvement.</li>\n</ul>\n<p>Please note that you can still keep the ctrl+shift+c shortcut in place, for those who are used to it and/or want to always be sure they copy from chat. I'm not asking to replace it. Just to make the world-known ctrl+c work as expected, at least in majority of cases.</p>", "createdAt": "2015-05-22T14:28:02Z", "publishedAt": "2015-05-22T14:28:02Z", "lastEditedAt": null, "updatedAt": "2015-05-22T14:28:02Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-07-14T02:18:39Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-10-05T15:56:32Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-05-23T15:47:45Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-06-18T16:54:48Z"}}]}, "bodyParsed": [{"number": 6432, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Why is it unobvious and why does it make the situation worse?", "sentSegmented": ["why", "is", "it", "unobvious", "and", "why", "does", "it", "make", "the", "situation", "worse"], "sentSegmentedWithoutStops": ["unobvious", "make", "situation", "worse"], "sentSegmentedWithoutStopsStemmed": ["unobvi", "make", "situat", "wors"]}, {"number": 6433, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If I press Ctrl+C, it's obvious I want to copy something.", "sentSegmented": ["if", "i", "press", "ctrl+c", "it", "'s", "obvious", "i", "want", "to", "copy", "something"], "sentSegmentedWithoutStops": ["press", "ctrl+c", "'s", "obvious", "want", "copy", "something"], "sentSegmentedWithoutStopsStemmed": ["press", "ctrl+c", "'s", "obviou", "want", "copi", "someth"]}, {"number": 6434, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If there's nothing selected in the input box, and there's something selected in chat, that's what I want to copy, you can't go wrong here.", "sentSegmented": ["if", "there", "'s", "nothing", "selected", "in", "the", "input", "box", "and", "there", "'s", "something", "selected", "in", "chat", "that", "'s", "what", "i", "want", "to", "copy", "you", "ca", "n't", "go", "wrong", "here"], "sentSegmentedWithoutStops": ["'s", "nothing", "selected", "input", "box", "'s", "something", "selected", "chat", "'s", "want", "copy", "ca", "n't", "go", "wrong"], "sentSegmentedWithoutStopsStemmed": ["'s", "noth", "select", "input", "box", "'s", "someth", "select", "chat", "'s", "want", "copi", "ca", "n't", "go", "wrong"]}, {"number": 6435, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The only complicated situation is when both input box and chat have some selection active.", "sentSegmented": ["the", "only", "complicated", "situation", "is", "when", "both", "input", "box", "and", "chat", "have", "some", "selection", "active"], "sentSegmentedWithoutStops": ["complicated", "situation", "input", "box", "chat", "selection", "active"], "sentSegmentedWithoutStopsStemmed": ["complic", "situat", "input", "box", "chat", "select", "activ"]}, {"number": 6436, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Then, I assume, input box would be preferred.", "sentSegmented": ["then", "i", "assume", "input", "box", "would", "be", "preferred"], "sentSegmentedWithoutStops": ["assume", "input", "box", "would", "preferred"], "sentSegmentedWithoutStopsStemmed": ["assum", "input", "box", "would", "prefer"]}, {"number": 6437, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It makes sense from the user point of view and it is easy to correct.", "sentSegmented": ["it", "makes", "sense", "from", "the", "user", "point", "of", "view", "and", "it", "is", "easy", "to", "correct"], "sentSegmentedWithoutStops": ["makes", "sense", "user", "point", "view", "easy", "correct"], "sentSegmentedWithoutStopsStemmed": ["make", "sens", "user", "point", "view", "easi", "correct"]}, {"number": 6438, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "About the situation being better or worse - currently, I hit ctrl+c and nothing happens.", "sentSegmented": ["about", "the", "situation", "being", "better", "or", "worse", "currently", "i", "hit", "ctrl+c", "and", "nothing", "happens"], "sentSegmentedWithoutStops": ["situation", "better", "worse", "currently", "hit", "ctrl+c", "nothing", "happens"], "sentSegmentedWithoutStopsStemmed": ["situat", "better", "wors", "current", "hit", "ctrl+c", "noth", "happen"]}, {"number": 6439, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I've been using xchat/hexchat for several years now, and I still do it daily.", "sentSegmented": ["i", "'ve", "been", "using", "xchat/hexchat", "for", "several", "years", "now", "and", "i", "still", "do", "it", "daily"], "sentSegmentedWithoutStops": ["'ve", "using", "xchat/hexchat", "several", "years", "still", "daily"], "sentSegmentedWithoutStopsStemmed": ["'ve", "use", "xchat/hexchat", "sever", "year", "still", "daili"]}, {"number": 6440, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "And I'm daily angry about it.", "sentSegmented": ["and", "i", "'m", "daily", "angry", "about", "it"], "sentSegmentedWithoutStops": ["'m", "daily", "angry"], "sentSegmentedWithoutStopsStemmed": ["'m", "daili", "angri"]}, {"number": 6441, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Ctrl+C is just a reflex, you don't think about it.", "sentSegmented": ["ctrl+c", "is", "just", "a", "reflex", "you", "do", "n't", "think", "about", "it"], "sentSegmentedWithoutStops": ["ctrl+c", "reflex", "n't", "think"], "sentSegmentedWithoutStopsStemmed": ["ctrl+c", "reflex", "n't", "think"]}, {"number": 6442, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If you implement this, it will do the right thing in 99% of times, and that's what I call a great improvement.", "sentSegmented": ["if", "you", "implement", "this", "it", "will", "do", "the", "right", "thing", "in", "99", "of", "times", "and", "that", "'s", "what", "i", "call", "a", "great", "improvement"], "sentSegmentedWithoutStops": ["implement", "right", "thing", "99", "times", "'s", "call", "great", "improvement"], "sentSegmentedWithoutStopsStemmed": ["implement", "right", "thing", "99", "time", "'s", "call", "great", "improv"]}, {"number": 6443, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Please note that you can still keep the ctrl+shift+c shortcut in place, for those who are used to it and/or want to always be sure they copy from chat.", "sentSegmented": ["please", "note", "that", "you", "can", "still", "keep", "the", "ctrl+shift+c", "shortcut", "in", "place", "for", "those", "who", "are", "used", "to", "it", "and/or", "want", "to", "always", "be", "sure", "they", "copy", "from", "chat"], "sentSegmentedWithoutStops": ["please", "note", "still", "keep", "ctrl+shift+c", "shortcut", "place", "used", "and/or", "want", "always", "sure", "copy", "chat"], "sentSegmentedWithoutStopsStemmed": ["pleas", "note", "still", "keep", "ctrl+shift+c", "shortcut", "place", "use", "and/or", "want", "alway", "sure", "copi", "chat"]}, {"number": 6444, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm not asking to replace it.", "sentSegmented": ["i", "'m", "not", "asking", "to", "replace", "it"], "sentSegmentedWithoutStops": ["'m", "asking", "replace"], "sentSegmentedWithoutStopsStemmed": ["'m", "ask", "replac"]}, {"number": 6445, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Just to make the world-known ctrl+c work as expected, at least in majority of cases.", "sentSegmented": ["just", "to", "make", "the", "world-known", "ctrl+c", "work", "as", "expected", "at", "least", "in", "majority", "of", "cases"], "sentSegmentedWithoutStops": ["make", "world-known", "ctrl+c", "work", "expected", "least", "majority", "cases"], "sentSegmentedWithoutStopsStemmed": ["make", "world-known", "ctrl+c", "work", "expect", "least", "major", "case"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDY5MTU4MA==", "author": {"login": "TingPing"}, "body": "Ok support situation:\n\nCurrent:\n\n> \"How do I copy text?\"\n> \"Select it, or press ctrl+shift+c\"\n\nNot normal, but simple, understandable, etc.\n\nWith proposed behavior:\n\n> \"How do I copy text?\"\n> \"well if this then that but if this then something else but if that then this... just hit ctrl+shift+c\"\n\nIt is a mess unless you have an understanding of the stupid hacks at work.\n\nI agree the current behavior is stupid, I hate everything (literally) about xtext. I wish it would go die and HexChat moved into the technology of the 1990s already, but here we are with a 16 year legacy of behavior.\n", "bodyText": "Ok support situation:\nCurrent:\n\n\"How do I copy text?\"\n\"Select it, or press ctrl+shift+c\"\n\nNot normal, but simple, understandable, etc.\nWith proposed behavior:\n\n\"How do I copy text?\"\n\"well if this then that but if this then something else but if that then this... just hit ctrl+shift+c\"\n\nIt is a mess unless you have an understanding of the stupid hacks at work.\nI agree the current behavior is stupid, I hate everything (literally) about xtext. I wish it would go die and HexChat moved into the technology of the 1990s already, but here we are with a 16 year legacy of behavior.", "bodyHTML": "<p>Ok support situation:</p>\n<p>Current:</p>\n<blockquote>\n<p>\"How do I copy text?\"<br>\n\"Select it, or press ctrl+shift+c\"</p>\n</blockquote>\n<p>Not normal, but simple, understandable, etc.</p>\n<p>With proposed behavior:</p>\n<blockquote>\n<p>\"How do I copy text?\"<br>\n\"well if this then that but if this then something else but if that then this... just hit ctrl+shift+c\"</p>\n</blockquote>\n<p>It is a mess unless you have an understanding of the stupid hacks at work.</p>\n<p>I agree the current behavior is stupid, I hate everything (literally) about xtext. I wish it would go die and HexChat moved into the technology of the 1990s already, but here we are with a 16 year legacy of behavior.</p>", "createdAt": "2015-05-22T15:31:09Z", "publishedAt": "2015-05-22T15:31:09Z", "lastEditedAt": null, "updatedAt": "2015-05-22T15:31:09Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6446, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Ok support situation:", "sentSegmented": ["ok", "support", "situation"], "sentSegmentedWithoutStops": ["ok", "support", "situation"], "sentSegmentedWithoutStopsStemmed": ["ok", "support", "situat"]}, {"number": 6447, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Current:", "sentSegmented": ["current"], "sentSegmentedWithoutStops": ["current"], "sentSegmentedWithoutStopsStemmed": ["current"]}, {"number": 6448, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "\"How do I copy text?\"", "sentSegmented": ["how", "do", "i", "copy", "text"], "sentSegmentedWithoutStops": ["copy", "text"], "sentSegmentedWithoutStopsStemmed": ["copi", "text"]}, {"number": 6449, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "\"Select it, or press ctrl+shift+c\"", "sentSegmented": ["select", "it", "or", "press", "ctrl+shift+c"], "sentSegmentedWithoutStops": ["select", "press", "ctrl+shift+c"], "sentSegmentedWithoutStopsStemmed": ["select", "press", "ctrl+shift+c"]}, {"number": 6450, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Not normal, but simple, understandable, etc.", "sentSegmented": ["not", "normal", "but", "simple", "understandable", "etc"], "sentSegmentedWithoutStops": ["normal", "simple", "understandable", "etc"], "sentSegmentedWithoutStopsStemmed": ["normal", "simpl", "understand", "etc"]}, {"number": 6451, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "With proposed behavior:", "sentSegmented": ["with", "proposed", "behavior"], "sentSegmentedWithoutStops": ["proposed", "behavior"], "sentSegmentedWithoutStopsStemmed": ["propos", "behavior"]}, {"number": 6452, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "\"How do I copy text?\"", "sentSegmented": ["how", "do", "i", "copy", "text"], "sentSegmentedWithoutStops": ["copy", "text"], "sentSegmentedWithoutStopsStemmed": ["copi", "text"]}, {"number": 6453, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "\"well if this then that but if this then something else but if that then this... just hit ctrl+shift+c\"", "sentSegmented": ["well", "if", "this", "then", "that", "but", "if", "this", "then", "something", "else", "but", "if", "that", "then", "this", "just", "hit", "ctrl+shift+c"], "sentSegmentedWithoutStops": ["well", "something", "else", "hit", "ctrl+shift+c"], "sentSegmentedWithoutStopsStemmed": ["well", "someth", "els", "hit", "ctrl+shift+c"]}, {"number": 6454, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It is a mess unless you have an understanding of the stupid hacks at work.", "sentSegmented": ["it", "is", "a", "mess", "unless", "you", "have", "an", "understanding", "of", "the", "stupid", "hacks", "at", "work"], "sentSegmentedWithoutStops": ["mess", "unless", "understanding", "stupid", "hacks", "work"], "sentSegmentedWithoutStopsStemmed": ["mess", "unless", "understand", "stupid", "hack", "work"]}, {"number": 6455, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I agree the current behavior is stupid, I hate everything (literally) about xtext.", "sentSegmented": ["i", "agree", "the", "current", "behavior", "is", "stupid", "i", "hate", "everything", "literally", "about", "xtext"], "sentSegmentedWithoutStops": ["agree", "current", "behavior", "stupid", "hate", "everything", "literally", "xtext"], "sentSegmentedWithoutStopsStemmed": ["agre", "current", "behavior", "stupid", "hate", "everyth", "liter", "xtext"]}, {"number": 6456, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I wish it would go die and HexChat moved into the technology of the 1990s already, but here we are with a 16 year legacy of behavior.", "sentSegmented": ["i", "wish", "it", "would", "go", "die", "and", "hexchat", "moved", "into", "the", "technology", "of", "the", "1990s", "already", "but", "here", "we", "are", "with", "a", "16", "year", "legacy", "of", "behavior"], "sentSegmentedWithoutStops": ["wish", "would", "go", "die", "hexchat", "moved", "technology", "1990s", "already", "16", "year", "legacy", "behavior"], "sentSegmentedWithoutStopsStemmed": ["wish", "would", "go", "die", "hexchat", "move", "technolog", "1990", "alreadi", "16", "year", "legaci", "behavior"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDcwNTUxMQ==", "author": {"login": "kparal"}, "body": "I understand your concern about user support, I just think it's not going to happen. If I hit Ctrl+C and find out that I haven't copied something from the chat but from the input box, I think it's quite obvious to anyone - deselect/clear input box and try again. I don't think anyone will come asking.\n\nWhen I compare it to the question \"why doesn't Ctrl+C work in hexchat?\", I think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.\n\nWe're also talking about something that is disabled by default (autocopy is enabled by default). Since the user needs to enable this behavior manually, there can be a lot of done about it to make it clearer, e.g. name the option properly, e.g.\n\n```\n(o) Use mouse selection to copy text to clipboard automatically\n( ) Use Ctrl+C to copy selected text either from input box or chat area\n```\n\nand of course a tooltip can be used to explain it properly.\n\nI simply think that this change would improve the user friendliness a lot and the mentioned drawbacks are not such a big deal, i.e. net win. But you're the maintainer here, I'm not. If you decide not to make any adjustments but know about some potential plugins that could help users like me, I'd be very grateful to hear about them. Alternatively, if someone else writes such a plugin in the future, please post a link here. Thanks in advance.\n", "bodyText": "I understand your concern about user support, I just think it's not going to happen. If I hit Ctrl+C and find out that I haven't copied something from the chat but from the input box, I think it's quite obvious to anyone - deselect/clear input box and try again. I don't think anyone will come asking.\nWhen I compare it to the question \"why doesn't Ctrl+C work in hexchat?\", I think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.\nWe're also talking about something that is disabled by default (autocopy is enabled by default). Since the user needs to enable this behavior manually, there can be a lot of done about it to make it clearer, e.g. name the option properly, e.g.\n(o) Use mouse selection to copy text to clipboard automatically\n( ) Use Ctrl+C to copy selected text either from input box or chat area\n\nand of course a tooltip can be used to explain it properly.\nI simply think that this change would improve the user friendliness a lot and the mentioned drawbacks are not such a big deal, i.e. net win. But you're the maintainer here, I'm not. If you decide not to make any adjustments but know about some potential plugins that could help users like me, I'd be very grateful to hear about them. Alternatively, if someone else writes such a plugin in the future, please post a link here. Thanks in advance.", "bodyHTML": "<p>I understand your concern about user support, I just think it's not going to happen. If I hit Ctrl+C and find out that I haven't copied something from the chat but from the input box, I think it's quite obvious to anyone - deselect/clear input box and try again. I don't think anyone will come asking.</p>\n<p>When I compare it to the question \"why doesn't Ctrl+C work in hexchat?\", I think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.</p>\n<p>We're also talking about something that is disabled by default (autocopy is enabled by default). Since the user needs to enable this behavior manually, there can be a lot of done about it to make it clearer, e.g. name the option properly, e.g.</p>\n<pre><code>(o) Use mouse selection to copy text to clipboard automatically\n( ) Use Ctrl+C to copy selected text either from input box or chat area\n</code></pre>\n<p>and of course a tooltip can be used to explain it properly.</p>\n<p>I simply think that this change would improve the user friendliness a lot and the mentioned drawbacks are not such a big deal, i.e. net win. But you're the maintainer here, I'm not. If you decide not to make any adjustments but know about some potential plugins that could help users like me, I'd be very grateful to hear about them. Alternatively, if someone else writes such a plugin in the future, please post a link here. Thanks in advance.</p>", "createdAt": "2015-05-22T16:32:26Z", "publishedAt": "2015-05-22T16:32:26Z", "lastEditedAt": null, "updatedAt": "2015-05-22T16:32:26Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6457, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I understand your concern about user support, I just think it's not going to happen.", "sentSegmented": ["i", "understand", "your", "concern", "about", "user", "support", "i", "just", "think", "it", "'s", "not", "going", "to", "happen"], "sentSegmentedWithoutStops": ["understand", "concern", "user", "support", "think", "'s", "going", "happen"], "sentSegmentedWithoutStopsStemmed": ["understand", "concern", "user", "support", "think", "'s", "go", "happen"]}, {"number": 6458, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If I hit Ctrl+C and find out that I haven't copied something from the chat but from the input box, I think it's quite obvious to anyone - deselect/clear input box and try again.", "sentSegmented": ["if", "i", "hit", "ctrl+c", "and", "find", "out", "that", "i", "have", "n't", "copied", "something", "from", "the", "chat", "but", "from", "the", "input", "box", "i", "think", "it", "'s", "quite", "obvious", "to", "anyone", "deselect/clear", "input", "box", "and", "try", "again"], "sentSegmentedWithoutStops": ["hit", "ctrl+c", "find", "n't", "copied", "something", "chat", "input", "box", "think", "'s", "quite", "obvious", "anyone", "deselect/clear", "input", "box", "try"], "sentSegmentedWithoutStopsStemmed": ["hit", "ctrl+c", "find", "n't", "copi", "someth", "chat", "input", "box", "think", "'s", "quit", "obviou", "anyon", "deselect/clear", "input", "box", "tri"]}, {"number": 6459, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I don't think anyone will come asking.", "sentSegmented": ["i", "do", "n't", "think", "anyone", "will", "come", "asking"], "sentSegmentedWithoutStops": ["n't", "think", "anyone", "come", "asking"], "sentSegmentedWithoutStopsStemmed": ["n't", "think", "anyon", "come", "ask"]}, {"number": 6460, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "When I compare it to the question \"why doesn't Ctrl+C work in hexchat?", "sentSegmented": ["when", "i", "compare", "it", "to", "the", "question", "why", "does", "n't", "ctrl+c", "work", "in", "hexchat"], "sentSegmentedWithoutStops": ["compare", "question", "n't", "ctrl+c", "work", "hexchat"], "sentSegmentedWithoutStopsStemmed": ["compar", "question", "n't", "ctrl+c", "work", "hexchat"]}, {"number": 6461, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\", I think that one is much more non-obvious and harder to find out the answer to.", "sentSegmented": ["i", "think", "that", "one", "is", "much", "more", "non-obvious", "and", "harder", "to", "find", "out", "the", "answer", "to"], "sentSegmentedWithoutStops": ["think", "one", "much", "non-obvious", "harder", "find", "answer"], "sentSegmentedWithoutStopsStemmed": ["think", "one", "much", "non-obvi", "harder", "find", "answer"]}, {"number": 6462, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You most probably have to search online for it.", "sentSegmented": ["you", "most", "probably", "have", "to", "search", "online", "for", "it"], "sentSegmentedWithoutStops": ["probably", "search", "online"], "sentSegmentedWithoutStopsStemmed": ["probabl", "search", "onlin"]}, {"number": 6463, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "We're also talking about something that is disabled by default (autocopy is enabled by default).", "sentSegmented": ["we", "'re", "also", "talking", "about", "something", "that", "is", "disabled", "by", "default", "autocopy", "is", "enabled", "by", "default"], "sentSegmentedWithoutStops": ["'re", "also", "talking", "something", "disabled", "default", "autocopy", "enabled", "default"], "sentSegmentedWithoutStopsStemmed": ["'re", "also", "talk", "someth", "disabl", "default", "autocopi", "enabl", "default"]}, {"number": 6464, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Since the user needs to enable this behavior manually, there can be a lot of done about it to make it clearer, e.g.", "sentSegmented": ["since", "the", "user", "needs", "to", "enable", "this", "behavior", "manually", "there", "can", "be", "a", "lot", "of", "done", "about", "it", "to", "make", "it", "clearer", "e.g"], "sentSegmentedWithoutStops": ["since", "user", "needs", "enable", "behavior", "manually", "lot", "done", "make", "clearer", "e.g"], "sentSegmentedWithoutStopsStemmed": ["sinc", "user", "need", "enabl", "behavior", "manual", "lot", "done", "make", "clearer", "e.g"]}, {"number": 6465, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "name the option properly, e.g.", "sentSegmented": ["name", "the", "option", "properly", "e.g"], "sentSegmentedWithoutStops": ["name", "option", "properly", "e.g"], "sentSegmentedWithoutStopsStemmed": ["name", "option", "properli", "e.g"]}, {"number": 6466, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(o) Use mouse selection to copy text to clipboard automatically", "sentSegmented": ["o", "use", "mouse", "selection", "to", "copy", "text", "to", "clipboard", "automatically"], "sentSegmentedWithoutStops": ["use", "mouse", "selection", "text", "clipboard", "automatically"], "sentSegmentedWithoutStopsStemmed": ["use", "mous", "select", "text", "clipboard", "automat"]}, {"number": 6467, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "( ) Use Ctrl+C to copy selected text either from input box or chat area", "sentSegmented": ["use", "ctrl+c", "to", "copy", "selected", "text", "either", "from", "input", "box", "or", "chat", "area"], "sentSegmentedWithoutStops": ["use", "ctrl+c", "selected", "text", "either", "input", "box", "chat", "area"], "sentSegmentedWithoutStopsStemmed": ["use", "ctrl+c", "select", "text", "either", "input", "box", "chat", "area"]}, {"number": 6468, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "and of course a tooltip can be used to explain it properly.", "sentSegmented": ["and", "of", "course", "a", "tooltip", "can", "be", "used", "to", "explain", "it", "properly"], "sentSegmentedWithoutStops": ["course", "tooltip", "used", "explain", "properly"], "sentSegmentedWithoutStopsStemmed": ["cours", "tooltip", "use", "explain", "properli"]}, {"number": 6469, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I simply think that this change would improve the user friendliness a lot and the mentioned drawbacks are not such a big deal, i.e.", "sentSegmented": ["i", "simply", "think", "that", "this", "change", "would", "improve", "the", "user", "friendliness", "a", "lot", "and", "the", "mentioned", "drawbacks", "are", "not", "such", "a", "big", "deal", "i.e"], "sentSegmentedWithoutStops": ["simply", "think", "change", "would", "improve", "user", "friendliness", "lot", "mentioned", "drawbacks", "big", "deal", "i.e"], "sentSegmentedWithoutStopsStemmed": ["simpli", "think", "chang", "would", "improv", "user", "friendli", "lot", "mention", "drawback", "big", "deal", "i.e"]}, {"number": 6470, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "net win.", "sentSegmented": ["net", "win"], "sentSegmentedWithoutStops": ["net", "win"], "sentSegmentedWithoutStopsStemmed": ["net", "win"]}, {"number": 6471, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But you're the maintainer here, I'm not.", "sentSegmented": ["but", "you", "'re", "the", "maintainer", "here", "i", "'m", "not"], "sentSegmentedWithoutStops": ["'re", "maintainer", "'m"], "sentSegmentedWithoutStopsStemmed": ["'re", "maintain", "'m"]}, {"number": 6472, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If you decide not to make any adjustments but know about some potential plugins that could help users like me, I'd be very grateful to hear about them.", "sentSegmented": ["if", "you", "decide", "not", "to", "make", "any", "adjustments", "but", "know", "about", "some", "potential", "plugins", "that", "could", "help", "users", "like", "me", "i", "'d", "be", "very", "grateful", "to", "hear", "about", "them"], "sentSegmentedWithoutStops": ["decide", "make", "adjustments", "know", "potential", "plugins", "could", "help", "users", "like", "'d", "grateful", "hear"], "sentSegmentedWithoutStopsStemmed": ["decid", "make", "adjust", "know", "potenti", "plugin", "could", "help", "user", "like", "'d", "grate", "hear"]}, {"number": 6473, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Alternatively, if someone else writes such a plugin in the future, please post a link here.", "sentSegmented": ["alternatively", "if", "someone", "else", "writes", "such", "a", "plugin", "in", "the", "future", "please", "post", "a", "link", "here"], "sentSegmentedWithoutStops": ["alternatively", "someone", "else", "writes", "plugin", "future", "please", "post", "link"], "sentSegmentedWithoutStopsStemmed": ["altern", "someon", "els", "write", "plugin", "futur", "pleas", "post", "link"]}, {"number": 6474, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks in advance.", "sentSegmented": ["thanks", "in", "advance"], "sentSegmentedWithoutStops": ["thanks", "advance"], "sentSegmentedWithoutStopsStemmed": ["thank", "advanc"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDcxMzYyNQ==", "author": {"login": "RichardHitt"}, "body": "A tooltip, hmm.  Usually tooltips are exposed as a result of hovering.  \nWhat would I hover over to get a tooltip displayed, in your scenario?\n\nAnd, @TingPing, you're being too harsh on xtext, as you know.  You have \nmade improvements and helped clean it up.  I have done likewise.  You \nand I together have managed to make work properly just about all text \nhighlighting, including italics.  I'm working on a non-English-alphabet \nperformance improvement that will make hexchat usable for more people.  \nEtc etc.  So don't be so harsh about xtext, please.\n\nRichard Hitt\n\nOn 05/22/2015 09:32 AM, Kamil P\u00e1ral wrote:\n\n> I understand your concern about user support, I just think it's not going to happen. If I hit Ctrl+C and find out that I haven't copied something from the chat but from the input box, I think it's quite obvious to anyone - deselect/clear input box and try again. I don't think anyone will come asking.\n> \n> When I compare it to the question \"why doesn't Ctrl+C work in hexchat?\", I think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.\n> \n> We're also talking about something that is disabled by default (autocopy is enabled by default). Since the user needs to enable this behavior manually, there can be a lot of done about it to make it clearer, e.g. name the option properly, e.g.\n> \n> ```\n> (o) Use mouse selection to copy text to clipboard automatically\n> ( ) Use Ctrl+C to copy selected text either from input box or chat area\n> ```\n> \n> and of course a tooltip can be used to explain it properly.\n> \n> I simply think that this change would improve the user friendliness a lot and the mentioned drawbacks are not such a big deal, i.e. net win. But you're the maintainer here, I'm not. If you decide not to make any adjustments but know about some potential plugins that could help users like me, I'd be very grateful to hear about them. Alternatively, if someone else writes such a plugin in the future, please post a link here. Thanks in advance.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/hexchat/hexchat/issues/1137#issuecomment-104705511\n", "bodyText": "A tooltip, hmm.  Usually tooltips are exposed as a result of hovering.\nWhat would I hover over to get a tooltip displayed, in your scenario?\nAnd, @TingPing, you're being too harsh on xtext, as you know.  You have\nmade improvements and helped clean it up.  I have done likewise.  You\nand I together have managed to make work properly just about all text\nhighlighting, including italics.  I'm working on a non-English-alphabet\nperformance improvement that will make hexchat usable for more people.\nEtc etc.  So don't be so harsh about xtext, please.\nRichard Hitt\nOn 05/22/2015 09:32 AM, Kamil P\u00e1ral wrote:\n\nI understand your concern about user support, I just think it's not going to happen. If I hit Ctrl+C and find out that I haven't copied something from the chat but from the input box, I think it's quite obvious to anyone - deselect/clear input box and try again. I don't think anyone will come asking.\nWhen I compare it to the question \"why doesn't Ctrl+C work in hexchat?\", I think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.\nWe're also talking about something that is disabled by default (autocopy is enabled by default). Since the user needs to enable this behavior manually, there can be a lot of done about it to make it clearer, e.g. name the option properly, e.g.\n(o) Use mouse selection to copy text to clipboard automatically\n( ) Use Ctrl+C to copy selected text either from input box or chat area\n\nand of course a tooltip can be used to explain it properly.\nI simply think that this change would improve the user friendliness a lot and the mentioned drawbacks are not such a big deal, i.e. net win. But you're the maintainer here, I'm not. If you decide not to make any adjustments but know about some potential plugins that could help users like me, I'd be very grateful to hear about them. Alternatively, if someone else writes such a plugin in the future, please post a link here. Thanks in advance.\n\nReply to this email directly or view it on GitHub:\n#1137 (comment)", "bodyHTML": "<p>A tooltip, hmm.  Usually tooltips are exposed as a result of hovering.<br>\nWhat would I hover over to get a tooltip displayed, in your scenario?</p>\n<p>And, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/TingPing/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TingPing\">@TingPing</a>, you're being too harsh on xtext, as you know.  You have<br>\nmade improvements and helped clean it up.  I have done likewise.  You<br>\nand I together have managed to make work properly just about all text<br>\nhighlighting, including italics.  I'm working on a non-English-alphabet<br>\nperformance improvement that will make hexchat usable for more people.<br>\nEtc etc.  So don't be so harsh about xtext, please.</p>\n<p>Richard Hitt</p>\n<p>On 05/22/2015 09:32 AM, Kamil P\u00e1ral wrote:</p>\n<blockquote>\n<p>I understand your concern about user support, I just think it's not going to happen. If I hit Ctrl+C and find out that I haven't copied something from the chat but from the input box, I think it's quite obvious to anyone - deselect/clear input box and try again. I don't think anyone will come asking.</p>\n<p>When I compare it to the question \"why doesn't Ctrl+C work in hexchat?\", I think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.</p>\n<p>We're also talking about something that is disabled by default (autocopy is enabled by default). Since the user needs to enable this behavior manually, there can be a lot of done about it to make it clearer, e.g. name the option properly, e.g.</p>\n<pre><code>(o) Use mouse selection to copy text to clipboard automatically\n( ) Use Ctrl+C to copy selected text either from input box or chat area\n</code></pre>\n<p>and of course a tooltip can be used to explain it properly.</p>\n<p>I simply think that this change would improve the user friendliness a lot and the mentioned drawbacks are not such a big deal, i.e. net win. But you're the maintainer here, I'm not. If you decide not to make any adjustments but know about some potential plugins that could help users like me, I'd be very grateful to hear about them. Alternatively, if someone else writes such a plugin in the future, please post a link here. Thanks in advance.</p>\n<hr>\n<p>Reply to this email directly or view it on GitHub:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"42765350\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hexchat/hexchat/issues/1137\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hexchat/hexchat/issues/1137/hovercard?comment_id=104705511&amp;comment_type=issue_comment\" href=\"https://github.com/hexchat/hexchat/issues/1137#issuecomment-104705511\">#1137 (comment)</a></p>\n</blockquote>", "createdAt": "2015-05-22T17:00:10Z", "publishedAt": "2015-05-22T17:00:10Z", "lastEditedAt": null, "updatedAt": "2015-05-22T17:41:45Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6475, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "A tooltip, hmm.", "sentSegmented": ["a", "tooltip", "hmm"], "sentSegmentedWithoutStops": ["tooltip", "hmm"], "sentSegmentedWithoutStopsStemmed": ["tooltip", "hmm"]}, {"number": 6476, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Usually tooltips are exposed as a result of hovering.", "sentSegmented": ["usually", "tooltips", "are", "exposed", "as", "a", "result", "of", "hovering"], "sentSegmentedWithoutStops": ["usually", "tooltips", "exposed", "result", "hovering"], "sentSegmentedWithoutStopsStemmed": ["usual", "tooltip", "expos", "result", "hover"]}, {"number": 6477, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "What would I hover over to get a tooltip displayed, in your scenario?", "sentSegmented": ["what", "would", "i", "hover", "over", "to", "get", "a", "tooltip", "displayed", "in", "your", "scenario"], "sentSegmentedWithoutStops": ["would", "hover", "get", "tooltip", "displayed", "scenario"], "sentSegmentedWithoutStopsStemmed": ["would", "hover", "get", "tooltip", "display", "scenario"]}, {"number": 6478, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "And, @TingPing, you're being too harsh on xtext, as you know.", "sentSegmented": ["and", "tingping", "you", "'re", "being", "too", "harsh", "on", "xtext", "as", "you", "know"], "sentSegmentedWithoutStops": ["tingping", "'re", "harsh", "xtext", "know"], "sentSegmentedWithoutStopsStemmed": ["tingp", "'re", "harsh", "xtext", "know"]}, {"number": 6479, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You have", "sentSegmented": ["you", "have"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 6480, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "made improvements and helped clean it up.", "sentSegmented": ["made", "improvements", "and", "helped", "clean", "it", "up"], "sentSegmentedWithoutStops": ["made", "improvements", "helped", "clean"], "sentSegmentedWithoutStopsStemmed": ["made", "improv", "help", "clean"]}, {"number": 6481, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I have done likewise.", "sentSegmented": ["i", "have", "done", "likewise"], "sentSegmentedWithoutStops": ["done", "likewise"], "sentSegmentedWithoutStopsStemmed": ["done", "likewis"]}, {"number": 6482, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You", "sentSegmented": ["you"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 6483, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "and I together have managed to make work properly just about all text", "sentSegmented": ["and", "i", "together", "have", "managed", "to", "make", "work", "properly", "just", "about", "all", "text"], "sentSegmentedWithoutStops": ["together", "managed", "make", "work", "properly", "text"], "sentSegmentedWithoutStopsStemmed": ["togeth", "manag", "make", "work", "properli", "text"]}, {"number": 6484, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "highlighting, including italics.", "sentSegmented": ["highlighting", "including", "italics"], "sentSegmentedWithoutStops": ["highlighting", "including", "italics"], "sentSegmentedWithoutStopsStemmed": ["highlight", "includ", "ital"]}, {"number": 6485, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm working on a non-English-alphabet", "sentSegmented": ["i", "'m", "working", "on", "a", "non-english-alphabet"], "sentSegmentedWithoutStops": ["'m", "working", "non-english-alphabet"], "sentSegmentedWithoutStopsStemmed": ["'m", "work", "non-english-alphabet"]}, {"number": 6486, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "performance improvement that will make hexchat usable for more people.", "sentSegmented": ["performance", "improvement", "that", "will", "make", "hexchat", "usable", "for", "more", "people"], "sentSegmentedWithoutStops": ["performance", "improvement", "make", "hexchat", "usable", "people"], "sentSegmentedWithoutStopsStemmed": ["perform", "improv", "make", "hexchat", "usabl", "peopl"]}, {"number": 6487, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Etc etc.", "sentSegmented": ["etc", "etc"], "sentSegmentedWithoutStops": ["etc", "etc"], "sentSegmentedWithoutStopsStemmed": ["etc", "etc"]}, {"number": 6488, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So don't be so harsh about xtext, please.", "sentSegmented": ["so", "do", "n't", "be", "so", "harsh", "about", "xtext", "please"], "sentSegmentedWithoutStops": ["n't", "harsh", "xtext", "please"], "sentSegmentedWithoutStopsStemmed": ["n't", "harsh", "xtext", "pleas"]}, {"number": 6489, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Richard Hitt", "sentSegmented": ["richard", "hitt"], "sentSegmentedWithoutStops": ["richard", "hitt"], "sentSegmentedWithoutStopsStemmed": ["richard", "hitt"]}, {"number": 6490, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "On 05/22/2015 09:32 AM, Kamil P\u00e1ral wrote:", "sentSegmented": ["on", "05/22/2015", "09:32", "am", "kamil", "p\u00e1ral", "wrote"], "sentSegmentedWithoutStops": ["05/22/2015", "09:32", "kamil", "p\u00e1ral", "wrote"], "sentSegmentedWithoutStopsStemmed": ["05/22/2015", "09:32", "kamil", "p\u00e1ral", "wrote"]}, {"number": 6491, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I understand your concern about user support, I just think it's not going to happen.", "sentSegmented": ["i", "understand", "your", "concern", "about", "user", "support", "i", "just", "think", "it", "'s", "not", "going", "to", "happen"], "sentSegmentedWithoutStops": ["understand", "concern", "user", "support", "think", "'s", "going", "happen"], "sentSegmentedWithoutStopsStemmed": ["understand", "concern", "user", "support", "think", "'s", "go", "happen"]}, {"number": 6492, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "If I hit Ctrl+C and find out that I haven't copied something from the chat but from the input box, I think it's quite obvious to anyone - deselect/clear input box and try again.", "sentSegmented": ["if", "i", "hit", "ctrl+c", "and", "find", "out", "that", "i", "have", "n't", "copied", "something", "from", "the", "chat", "but", "from", "the", "input", "box", "i", "think", "it", "'s", "quite", "obvious", "to", "anyone", "deselect/clear", "input", "box", "and", "try", "again"], "sentSegmentedWithoutStops": ["hit", "ctrl+c", "find", "n't", "copied", "something", "chat", "input", "box", "think", "'s", "quite", "obvious", "anyone", "deselect/clear", "input", "box", "try"], "sentSegmentedWithoutStopsStemmed": ["hit", "ctrl+c", "find", "n't", "copi", "someth", "chat", "input", "box", "think", "'s", "quit", "obviou", "anyon", "deselect/clear", "input", "box", "tri"]}, {"number": 6493, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I don't think anyone will come asking.", "sentSegmented": ["i", "do", "n't", "think", "anyone", "will", "come", "asking"], "sentSegmentedWithoutStops": ["n't", "think", "anyone", "come", "asking"], "sentSegmentedWithoutStopsStemmed": ["n't", "think", "anyon", "come", "ask"]}, {"number": 6494, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "When I compare it to the question \"why doesn't Ctrl+C work in hexchat?", "sentSegmented": ["when", "i", "compare", "it", "to", "the", "question", "why", "does", "n't", "ctrl+c", "work", "in", "hexchat"], "sentSegmentedWithoutStops": ["compare", "question", "n't", "ctrl+c", "work", "hexchat"], "sentSegmentedWithoutStopsStemmed": ["compar", "question", "n't", "ctrl+c", "work", "hexchat"]}, {"number": 6495, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "\", I think that one is much more non-obvious and harder to find out the answer to.", "sentSegmented": ["i", "think", "that", "one", "is", "much", "more", "non-obvious", "and", "harder", "to", "find", "out", "the", "answer", "to"], "sentSegmentedWithoutStops": ["think", "one", "much", "non-obvious", "harder", "find", "answer"], "sentSegmentedWithoutStopsStemmed": ["think", "one", "much", "non-obvi", "harder", "find", "answer"]}, {"number": 6496, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "You most probably have to search online for it.", "sentSegmented": ["you", "most", "probably", "have", "to", "search", "online", "for", "it"], "sentSegmentedWithoutStops": ["probably", "search", "online"], "sentSegmentedWithoutStopsStemmed": ["probabl", "search", "onlin"]}, {"number": 6497, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "We're also talking about something that is disabled by default (autocopy is enabled by default).", "sentSegmented": ["we", "'re", "also", "talking", "about", "something", "that", "is", "disabled", "by", "default", "autocopy", "is", "enabled", "by", "default"], "sentSegmentedWithoutStops": ["'re", "also", "talking", "something", "disabled", "default", "autocopy", "enabled", "default"], "sentSegmentedWithoutStopsStemmed": ["'re", "also", "talk", "someth", "disabl", "default", "autocopi", "enabl", "default"]}, {"number": 6498, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Since the user needs to enable this behavior manually, there can be a lot of done about it to make it clearer, e.g.", "sentSegmented": ["since", "the", "user", "needs", "to", "enable", "this", "behavior", "manually", "there", "can", "be", "a", "lot", "of", "done", "about", "it", "to", "make", "it", "clearer", "e.g"], "sentSegmentedWithoutStops": ["since", "user", "needs", "enable", "behavior", "manually", "lot", "done", "make", "clearer", "e.g"], "sentSegmentedWithoutStopsStemmed": ["sinc", "user", "need", "enabl", "behavior", "manual", "lot", "done", "make", "clearer", "e.g"]}, {"number": 6499, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "name the option properly, e.g.", "sentSegmented": ["name", "the", "option", "properly", "e.g"], "sentSegmentedWithoutStops": ["name", "option", "properly", "e.g"], "sentSegmentedWithoutStopsStemmed": ["name", "option", "properli", "e.g"]}, {"number": 6500, "isCode": true, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "(o) Use mouse selection to copy text to clipboard automatically", "sentSegmented": ["o", "use", "mouse", "selection", "to", "copy", "text", "to", "clipboard", "automatically"], "sentSegmentedWithoutStops": ["use", "mouse", "selection", "text", "clipboard", "automatically"], "sentSegmentedWithoutStopsStemmed": ["use", "mous", "select", "text", "clipboard", "automat"]}, {"number": 6501, "isCode": true, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "( ) Use Ctrl+C to copy selected text either from input box or chat area", "sentSegmented": ["use", "ctrl+c", "to", "copy", "selected", "text", "either", "from", "input", "box", "or", "chat", "area"], "sentSegmentedWithoutStops": ["use", "ctrl+c", "selected", "text", "either", "input", "box", "chat", "area"], "sentSegmentedWithoutStopsStemmed": ["use", "ctrl+c", "select", "text", "either", "input", "box", "chat", "area"]}, {"number": 6502, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "and of course a tooltip can be used to explain it properly.", "sentSegmented": ["and", "of", "course", "a", "tooltip", "can", "be", "used", "to", "explain", "it", "properly"], "sentSegmentedWithoutStops": ["course", "tooltip", "used", "explain", "properly"], "sentSegmentedWithoutStopsStemmed": ["cours", "tooltip", "use", "explain", "properli"]}, {"number": 6503, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I simply think that this change would improve the user friendliness a lot and the mentioned drawbacks are not such a big deal, i.e.", "sentSegmented": ["i", "simply", "think", "that", "this", "change", "would", "improve", "the", "user", "friendliness", "a", "lot", "and", "the", "mentioned", "drawbacks", "are", "not", "such", "a", "big", "deal", "i.e"], "sentSegmentedWithoutStops": ["simply", "think", "change", "would", "improve", "user", "friendliness", "lot", "mentioned", "drawbacks", "big", "deal", "i.e"], "sentSegmentedWithoutStopsStemmed": ["simpli", "think", "chang", "would", "improv", "user", "friendli", "lot", "mention", "drawback", "big", "deal", "i.e"]}, {"number": 6504, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "net win.", "sentSegmented": ["net", "win"], "sentSegmentedWithoutStops": ["net", "win"], "sentSegmentedWithoutStopsStemmed": ["net", "win"]}, {"number": 6505, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "But you're the maintainer here, I'm not.", "sentSegmented": ["but", "you", "'re", "the", "maintainer", "here", "i", "'m", "not"], "sentSegmentedWithoutStops": ["'re", "maintainer", "'m"], "sentSegmentedWithoutStopsStemmed": ["'re", "maintain", "'m"]}, {"number": 6506, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "If you decide not to make any adjustments but know about some potential plugins that could help users like me, I'd be very grateful to hear about them.", "sentSegmented": ["if", "you", "decide", "not", "to", "make", "any", "adjustments", "but", "know", "about", "some", "potential", "plugins", "that", "could", "help", "users", "like", "me", "i", "'d", "be", "very", "grateful", "to", "hear", "about", "them"], "sentSegmentedWithoutStops": ["decide", "make", "adjustments", "know", "potential", "plugins", "could", "help", "users", "like", "'d", "grateful", "hear"], "sentSegmentedWithoutStopsStemmed": ["decid", "make", "adjust", "know", "potenti", "plugin", "could", "help", "user", "like", "'d", "grate", "hear"]}, {"number": 6507, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Alternatively, if someone else writes such a plugin in the future, please post a link here.", "sentSegmented": ["alternatively", "if", "someone", "else", "writes", "such", "a", "plugin", "in", "the", "future", "please", "post", "a", "link", "here"], "sentSegmentedWithoutStops": ["alternatively", "someone", "else", "writes", "plugin", "future", "please", "post", "link"], "sentSegmentedWithoutStopsStemmed": ["altern", "someon", "els", "write", "plugin", "futur", "pleas", "post", "link"]}, {"number": 6508, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Thanks in advance.", "sentSegmented": ["thanks", "in", "advance"], "sentSegmentedWithoutStops": ["thanks", "advance"], "sentSegmentedWithoutStopsStemmed": ["thank", "advanc"]}, {"number": 6509, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Reply to this email directly or view it on GitHub:", "sentSegmented": ["reply", "to", "this", "email", "directly", "or", "view", "it", "on", "github"], "sentSegmentedWithoutStops": ["reply", "email", "directly", "view", "github"], "sentSegmentedWithoutStopsStemmed": ["repli", "email", "directli", "view", "github"]}, {"number": 6510, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "#1137 (comment)", "sentSegmented": ["1137", "comment"], "sentSegmentedWithoutStops": ["1137", "comment"], "sentSegmentedWithoutStopsStemmed": ["1137", "comment"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDcyMzA3NA==", "author": {"login": "TingPing"}, "body": "@RichardHitt I'm not being harsh on your improvements, xtext almost displays text properly, so we really have done good things. That doesn't mean it shouldn't be replaced.\n", "bodyText": "@RichardHitt I'm not being harsh on your improvements, xtext almost displays text properly, so we really have done good things. That doesn't mean it shouldn't be replaced.", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RichardHitt/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RichardHitt\">@RichardHitt</a> I'm not being harsh on your improvements, xtext almost displays text properly, so we really have done good things. That doesn't mean it shouldn't be replaced.</p>", "createdAt": "2015-05-22T17:38:36Z", "publishedAt": "2015-05-22T17:38:36Z", "lastEditedAt": null, "updatedAt": "2015-05-22T17:38:36Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6511, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@RichardHitt I'm not being harsh on your improvements, xtext almost displays text properly, so we really have done good things.", "sentSegmented": ["richardhitt", "i", "'m", "not", "being", "harsh", "on", "your", "improvements", "xtext", "almost", "displays", "text", "properly", "so", "we", "really", "have", "done", "good", "things"], "sentSegmentedWithoutStops": ["richardhitt", "'m", "harsh", "improvements", "xtext", "almost", "displays", "text", "properly", "really", "done", "good", "things"], "sentSegmentedWithoutStopsStemmed": ["richardhitt", "'m", "harsh", "improv", "xtext", "almost", "display", "text", "properli", "realli", "done", "good", "thing"]}, {"number": 6512, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "That doesn't mean it shouldn't be replaced.", "sentSegmented": ["that", "does", "n't", "mean", "it", "should", "n't", "be", "replaced"], "sentSegmentedWithoutStops": ["n't", "mean", "n't", "replaced"], "sentSegmentedWithoutStopsStemmed": ["n't", "mean", "n't", "replac"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDczNTIxNg==", "author": {"login": "kparal"}, "body": "> A tooltip, hmm. Usually tooltips are exposed as a result of hovering. What would I hover over to get a tooltip displayed, in your scenario?\n\nThe same item that currently already has a tooltip :) Which is the following checkbox in options:\n\n> [  ] Automatically copy selected text\n\nIf you hover over if, there is an explanation tooltip that talks about the ctrl+shift+c shortcut if it is disabled.\n\nI assumed a similar tooltip could be added over the radion button I proposed. It could even still mention ctrl+shift+c for those who always want to be sure to copy from chat area (also to be consistent with older versions and people used to it).\n", "bodyText": "A tooltip, hmm. Usually tooltips are exposed as a result of hovering. What would I hover over to get a tooltip displayed, in your scenario?\n\nThe same item that currently already has a tooltip :) Which is the following checkbox in options:\n\n[  ] Automatically copy selected text\n\nIf you hover over if, there is an explanation tooltip that talks about the ctrl+shift+c shortcut if it is disabled.\nI assumed a similar tooltip could be added over the radion button I proposed. It could even still mention ctrl+shift+c for those who always want to be sure to copy from chat area (also to be consistent with older versions and people used to it).", "bodyHTML": "<blockquote>\n<p>A tooltip, hmm. Usually tooltips are exposed as a result of hovering. What would I hover over to get a tooltip displayed, in your scenario?</p>\n</blockquote>\n<p>The same item that currently already has a tooltip :) Which is the following checkbox in options:</p>\n<blockquote>\n<p>[  ] Automatically copy selected text</p>\n</blockquote>\n<p>If you hover over if, there is an explanation tooltip that talks about the ctrl+shift+c shortcut if it is disabled.</p>\n<p>I assumed a similar tooltip could be added over the radion button I proposed. It could even still mention ctrl+shift+c for those who always want to be sure to copy from chat area (also to be consistent with older versions and people used to it).</p>", "createdAt": "2015-05-22T18:14:43Z", "publishedAt": "2015-05-22T18:14:43Z", "lastEditedAt": null, "updatedAt": "2015-05-22T18:14:43Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6513, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "A tooltip, hmm.", "sentSegmented": ["a", "tooltip", "hmm"], "sentSegmentedWithoutStops": ["tooltip", "hmm"], "sentSegmentedWithoutStopsStemmed": ["tooltip", "hmm"]}, {"number": 6514, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Usually tooltips are exposed as a result of hovering.", "sentSegmented": ["usually", "tooltips", "are", "exposed", "as", "a", "result", "of", "hovering"], "sentSegmentedWithoutStops": ["usually", "tooltips", "exposed", "result", "hovering"], "sentSegmentedWithoutStopsStemmed": ["usual", "tooltip", "expos", "result", "hover"]}, {"number": 6515, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "What would I hover over to get a tooltip displayed, in your scenario?", "sentSegmented": ["what", "would", "i", "hover", "over", "to", "get", "a", "tooltip", "displayed", "in", "your", "scenario"], "sentSegmentedWithoutStops": ["would", "hover", "get", "tooltip", "displayed", "scenario"], "sentSegmentedWithoutStopsStemmed": ["would", "hover", "get", "tooltip", "display", "scenario"]}, {"number": 6516, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The same item that currently already has a tooltip :) Which is the following checkbox in options:", "sentSegmented": ["the", "same", "item", "that", "currently", "already", "has", "a", "tooltip", "which", "is", "the", "following", "checkbox", "in", "options"], "sentSegmentedWithoutStops": ["item", "currently", "already", "tooltip", "following", "checkbox", "options"], "sentSegmentedWithoutStopsStemmed": ["item", "current", "alreadi", "tooltip", "follow", "checkbox", "option"]}, {"number": 6517, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "[  ] Automatically copy selected text", "sentSegmented": ["automatically", "copy", "selected", "text"], "sentSegmentedWithoutStops": ["automatically", "copy", "selected", "text"], "sentSegmentedWithoutStopsStemmed": ["automat", "copi", "select", "text"]}, {"number": 6518, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If you hover over if, there is an explanation tooltip that talks about the ctrl+shift+c shortcut if it is disabled.", "sentSegmented": ["if", "you", "hover", "over", "if", "there", "is", "an", "explanation", "tooltip", "that", "talks", "about", "the", "ctrl+shift+c", "shortcut", "if", "it", "is", "disabled"], "sentSegmentedWithoutStops": ["hover", "explanation", "tooltip", "talks", "ctrl+shift+c", "shortcut", "disabled"], "sentSegmentedWithoutStopsStemmed": ["hover", "explan", "tooltip", "talk", "ctrl+shift+c", "shortcut", "disabl"]}, {"number": 6519, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I assumed a similar tooltip could be added over the radion button I proposed.", "sentSegmented": ["i", "assumed", "a", "similar", "tooltip", "could", "be", "added", "over", "the", "radion", "button", "i", "proposed"], "sentSegmentedWithoutStops": ["assumed", "similar", "tooltip", "could", "added", "radion", "button", "proposed"], "sentSegmentedWithoutStopsStemmed": ["assum", "similar", "tooltip", "could", "ad", "radion", "button", "propos"]}, {"number": 6520, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It could even still mention ctrl+shift+c for those who always want to be sure to copy from chat area (also to be consistent with older versions and people used to it).", "sentSegmented": ["it", "could", "even", "still", "mention", "ctrl+shift+c", "for", "those", "who", "always", "want", "to", "be", "sure", "to", "copy", "from", "chat", "area", "also", "to", "be", "consistent", "with", "older", "versions", "and", "people", "used", "to", "it"], "sentSegmentedWithoutStops": ["could", "even", "still", "mention", "ctrl+shift+c", "always", "want", "sure", "copy", "chat", "area", "also", "consistent", "older", "versions", "people", "used"], "sentSegmentedWithoutStopsStemmed": ["could", "even", "still", "mention", "ctrl+shift+c", "alway", "want", "sure", "copi", "chat", "area", "also", "consist", "older", "version", "peopl", "use"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDczODUzNQ==", "author": {"login": "lenny87"}, "body": "I can recommend also one more solution for that - If I select text in chat window, copy action should be accessible from right-click menu. But ctrl+c will be best as guys already said there.\n", "bodyText": "I can recommend also one more solution for that - If I select text in chat window, copy action should be accessible from right-click menu. But ctrl+c will be best as guys already said there.", "bodyHTML": "<p>I can recommend also one more solution for that - If I select text in chat window, copy action should be accessible from right-click menu. But ctrl+c will be best as guys already said there.</p>", "createdAt": "2015-05-22T18:30:31Z", "publishedAt": "2015-05-22T18:30:31Z", "lastEditedAt": null, "updatedAt": "2015-05-22T18:30:51Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6521, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I can recommend also one more solution for that - If I select text in chat window, copy action should be accessible from right-click menu.", "sentSegmented": ["i", "can", "recommend", "also", "one", "more", "solution", "for", "that", "if", "i", "select", "text", "in", "chat", "window", "copy", "action", "should", "be", "accessible", "from", "right-click", "menu"], "sentSegmentedWithoutStops": ["recommend", "also", "one", "solution", "select", "text", "chat", "window", "copy", "action", "accessible", "right-click", "menu"], "sentSegmentedWithoutStopsStemmed": ["recommend", "also", "one", "solut", "select", "text", "chat", "window", "copi", "action", "access", "right-click", "menu"]}, {"number": 6522, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But ctrl+c will be best as guys already said there.", "sentSegmented": ["but", "ctrl+c", "will", "be", "best", "as", "guys", "already", "said", "there"], "sentSegmentedWithoutStops": ["ctrl+c", "best", "guys", "already", "said"], "sentSegmentedWithoutStopsStemmed": ["ctrl+c", "best", "guy", "alreadi", "said"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDc0NDU0Mg==", "author": {"login": "Poorchop"}, "body": "I don't see the problem with ctrl+shift+C. I'm pretty that is the standard keybinding for copying text in most terminal emulators, while ctrl+C breaks the current active process. I also like HexChat's default behavior of automatically copying selected text to the clipboard - a lot of times, I will highlight text in another program and then ctrl+V somewhere else, only to realize that in this case, I have to ctrl+C first.\n\nI can definitely understand why some people would want to disable the automatic copy to clipboard behavior, but with the way that HexChat currently works, ctrl+shift+C makes the most sense. I think the \"if no selection in input\" hacky workaround wouldn't even be a good solution because that means users have to first delete the contents of the input box in order to select chat window text.\n\n> I think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.\n\nYou have to search online in order to figure out how to do a lot of things, including multiple things in HexChat. That's why there is extensive documentation that anyone can edit, as well as an IRC channel that is active around the clock. You could also just go to \"Window\" in the HexChat menu bar, where you will see the \"copy selection\" option and the corresponding shortcut.\n", "bodyText": "I don't see the problem with ctrl+shift+C. I'm pretty that is the standard keybinding for copying text in most terminal emulators, while ctrl+C breaks the current active process. I also like HexChat's default behavior of automatically copying selected text to the clipboard - a lot of times, I will highlight text in another program and then ctrl+V somewhere else, only to realize that in this case, I have to ctrl+C first.\nI can definitely understand why some people would want to disable the automatic copy to clipboard behavior, but with the way that HexChat currently works, ctrl+shift+C makes the most sense. I think the \"if no selection in input\" hacky workaround wouldn't even be a good solution because that means users have to first delete the contents of the input box in order to select chat window text.\n\nI think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.\n\nYou have to search online in order to figure out how to do a lot of things, including multiple things in HexChat. That's why there is extensive documentation that anyone can edit, as well as an IRC channel that is active around the clock. You could also just go to \"Window\" in the HexChat menu bar, where you will see the \"copy selection\" option and the corresponding shortcut.", "bodyHTML": "<p>I don't see the problem with ctrl+shift+C. I'm pretty that is the standard keybinding for copying text in most terminal emulators, while ctrl+C breaks the current active process. I also like HexChat's default behavior of automatically copying selected text to the clipboard - a lot of times, I will highlight text in another program and then ctrl+V somewhere else, only to realize that in this case, I have to ctrl+C first.</p>\n<p>I can definitely understand why some people would want to disable the automatic copy to clipboard behavior, but with the way that HexChat currently works, ctrl+shift+C makes the most sense. I think the \"if no selection in input\" hacky workaround wouldn't even be a good solution because that means users have to first delete the contents of the input box in order to select chat window text.</p>\n<blockquote>\n<p>I think that one is much more non-obvious and harder to find out the answer to. You most probably have to search online for it.</p>\n</blockquote>\n<p>You have to search online in order to figure out how to do a lot of things, including multiple things in HexChat. That's why there is extensive documentation that anyone can edit, as well as an IRC channel that is active around the clock. You could also just go to \"Window\" in the HexChat menu bar, where you will see the \"copy selection\" option and the corresponding shortcut.</p>", "createdAt": "2015-05-22T19:02:56Z", "publishedAt": "2015-05-22T19:02:56Z", "lastEditedAt": null, "updatedAt": "2015-05-22T19:02:56Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6523, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I don't see the problem with ctrl+shift+C.", "sentSegmented": ["i", "do", "n't", "see", "the", "problem", "with", "ctrl+shift+c"], "sentSegmentedWithoutStops": ["n't", "see", "problem", "ctrl+shift+c"], "sentSegmentedWithoutStopsStemmed": ["n't", "see", "problem", "ctrl+shift+c"]}, {"number": 6524, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm pretty that is the standard keybinding for copying text in most terminal emulators, while ctrl+C breaks the current active process.", "sentSegmented": ["i", "'m", "pretty", "that", "is", "the", "standard", "keybinding", "for", "copying", "text", "in", "most", "terminal", "emulators", "while", "ctrl+c", "breaks", "the", "current", "active", "process"], "sentSegmentedWithoutStops": ["'m", "pretty", "standard", "keybinding", "copying", "text", "terminal", "emulators", "ctrl+c", "breaks", "current", "active", "process"], "sentSegmentedWithoutStopsStemmed": ["'m", "pretti", "standard", "keybind", "copi", "text", "termin", "emul", "ctrl+c", "break", "current", "activ", "process"]}, {"number": 6525, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I also like HexChat's default behavior of automatically copying selected text to the clipboard - a lot of times, I will highlight text in another program and then ctrl+V somewhere else, only to realize that in this case, I have to ctrl+C first.", "sentSegmented": ["i", "also", "like", "hexchat", "'s", "default", "behavior", "of", "automatically", "copying", "selected", "text", "to", "the", "clipboard", "a", "lot", "of", "times", "i", "will", "highlight", "text", "in", "another", "program", "and", "then", "ctrl+v", "somewhere", "else", "only", "to", "realize", "that", "in", "this", "case", "i", "have", "to", "ctrl+c", "first"], "sentSegmentedWithoutStops": ["also", "like", "hexchat", "'s", "default", "behavior", "automatically", "copying", "selected", "text", "clipboard", "lot", "times", "highlight", "text", "another", "program", "ctrl+v", "somewhere", "else", "realize", "case", "ctrl+c", "first"], "sentSegmentedWithoutStopsStemmed": ["also", "like", "hexchat", "'s", "default", "behavior", "automat", "copi", "select", "text", "clipboard", "lot", "time", "highlight", "text", "anoth", "program", "ctrl+v", "somewher", "els", "realiz", "case", "ctrl+c", "first"]}, {"number": 6526, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I can definitely understand why some people would want to disable the automatic copy to clipboard behavior, but with the way that HexChat currently works, ctrl+shift+C makes the most sense.", "sentSegmented": ["i", "can", "definitely", "understand", "why", "some", "people", "would", "want", "to", "disable", "the", "automatic", "copy", "to", "clipboard", "behavior", "but", "with", "the", "way", "that", "hexchat", "currently", "works", "ctrl+shift+c", "makes", "the", "most", "sense"], "sentSegmentedWithoutStops": ["definitely", "understand", "people", "would", "want", "disable", "automatic", "copy", "clipboard", "behavior", "way", "hexchat", "currently", "works", "ctrl+shift+c", "makes", "sense"], "sentSegmentedWithoutStopsStemmed": ["definit", "understand", "peopl", "would", "want", "disabl", "automat", "copi", "clipboard", "behavior", "way", "hexchat", "current", "work", "ctrl+shift+c", "make", "sens"]}, {"number": 6527, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I think the \"if no selection in input\" hacky workaround wouldn't even be a good solution because that means users have to first delete the contents of the input box in order to select chat window text.", "sentSegmented": ["i", "think", "the", "if", "no", "selection", "in", "input", "hacky", "workaround", "would", "n't", "even", "be", "a", "good", "solution", "because", "that", "means", "users", "have", "to", "first", "delete", "the", "contents", "of", "the", "input", "box", "in", "order", "to", "select", "chat", "window", "text"], "sentSegmentedWithoutStops": ["think", "selection", "input", "hacky", "workaround", "would", "n't", "even", "good", "solution", "means", "users", "first", "delete", "contents", "input", "box", "order", "select", "chat", "window", "text"], "sentSegmentedWithoutStopsStemmed": ["think", "select", "input", "hacki", "workaround", "would", "n't", "even", "good", "solut", "mean", "user", "first", "delet", "content", "input", "box", "order", "select", "chat", "window", "text"]}, {"number": 6528, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I think that one is much more non-obvious and harder to find out the answer to.", "sentSegmented": ["i", "think", "that", "one", "is", "much", "more", "non-obvious", "and", "harder", "to", "find", "out", "the", "answer", "to"], "sentSegmentedWithoutStops": ["think", "one", "much", "non-obvious", "harder", "find", "answer"], "sentSegmentedWithoutStopsStemmed": ["think", "one", "much", "non-obvi", "harder", "find", "answer"]}, {"number": 6529, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "You most probably have to search online for it.", "sentSegmented": ["you", "most", "probably", "have", "to", "search", "online", "for", "it"], "sentSegmentedWithoutStops": ["probably", "search", "online"], "sentSegmentedWithoutStopsStemmed": ["probabl", "search", "onlin"]}, {"number": 6530, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You have to search online in order to figure out how to do a lot of things, including multiple things in HexChat.", "sentSegmented": ["you", "have", "to", "search", "online", "in", "order", "to", "figure", "out", "how", "to", "do", "a", "lot", "of", "things", "including", "multiple", "things", "in", "hexchat"], "sentSegmentedWithoutStops": ["search", "online", "order", "figure", "lot", "things", "including", "multiple", "things", "hexchat"], "sentSegmentedWithoutStopsStemmed": ["search", "onlin", "order", "figur", "lot", "thing", "includ", "multipl", "thing", "hexchat"]}, {"number": 6531, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "That's why there is extensive documentation that anyone can edit, as well as an IRC channel that is active around the clock.", "sentSegmented": ["that", "'s", "why", "there", "is", "extensive", "documentation", "that", "anyone", "can", "edit", "as", "well", "as", "an", "irc", "channel", "that", "is", "active", "around", "the", "clock"], "sentSegmentedWithoutStops": ["'s", "extensive", "documentation", "anyone", "edit", "well", "irc", "channel", "active", "around", "clock"], "sentSegmentedWithoutStopsStemmed": ["'s", "extens", "document", "anyon", "edit", "well", "irc", "channel", "activ", "around", "clock"]}, {"number": 6532, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You could also just go to \"Window\" in the HexChat menu bar, where you will see the \"copy selection\" option and the corresponding shortcut.", "sentSegmented": ["you", "could", "also", "just", "go", "to", "window", "in", "the", "hexchat", "menu", "bar", "where", "you", "will", "see", "the", "copy", "selection", "option", "and", "the", "corresponding", "shortcut"], "sentSegmentedWithoutStops": ["could", "also", "go", "window", "hexchat", "menu", "bar", "see", "copy", "selection", "option", "corresponding", "shortcut"], "sentSegmentedWithoutStopsStemmed": ["could", "also", "go", "window", "hexchat", "menu", "bar", "see", "copi", "select", "option", "correspond", "shortcut"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDc1MzY4NQ==", "author": {"login": "kparal"}, "body": "> I'm pretty that is the standard keybinding for copying text in most terminal emulators, while ctrl+C breaks the current active process.\n\nYes, it is. Hexchat is a chat, though, which falls in to the \"everything else\" category.\n\n> I also like HexChat's default behavior of automatically copying selected text to the clipboard\n\nI don't propose to remove it nor make it not the default behavior.\n\n>  I think the \"if no selection in input\" hacky workaround wouldn't even be a good solution because that means users have to first delete the contents of the input box in order to select chat window text.\n\nNo _selection_, not _content_.\n\n> You have to search online in order to figure out how to do a lot of things, including multiple things in HexChat. \n\nIf just a single search worked for me, I would have never spent the time reporting this issue. I'm fighting with it daily. I'm happy that it works for you. But it seems you're not using the manual copy behavior anyway. I'm not sure how it would affect you if Ctrl+C shortcut was added?\n", "bodyText": "I'm pretty that is the standard keybinding for copying text in most terminal emulators, while ctrl+C breaks the current active process.\n\nYes, it is. Hexchat is a chat, though, which falls in to the \"everything else\" category.\n\nI also like HexChat's default behavior of automatically copying selected text to the clipboard\n\nI don't propose to remove it nor make it not the default behavior.\n\nI think the \"if no selection in input\" hacky workaround wouldn't even be a good solution because that means users have to first delete the contents of the input box in order to select chat window text.\n\nNo selection, not content.\n\nYou have to search online in order to figure out how to do a lot of things, including multiple things in HexChat.\n\nIf just a single search worked for me, I would have never spent the time reporting this issue. I'm fighting with it daily. I'm happy that it works for you. But it seems you're not using the manual copy behavior anyway. I'm not sure how it would affect you if Ctrl+C shortcut was added?", "bodyHTML": "<blockquote>\n<p>I'm pretty that is the standard keybinding for copying text in most terminal emulators, while ctrl+C breaks the current active process.</p>\n</blockquote>\n<p>Yes, it is. Hexchat is a chat, though, which falls in to the \"everything else\" category.</p>\n<blockquote>\n<p>I also like HexChat's default behavior of automatically copying selected text to the clipboard</p>\n</blockquote>\n<p>I don't propose to remove it nor make it not the default behavior.</p>\n<blockquote>\n<p>I think the \"if no selection in input\" hacky workaround wouldn't even be a good solution because that means users have to first delete the contents of the input box in order to select chat window text.</p>\n</blockquote>\n<p>No <em>selection</em>, not <em>content</em>.</p>\n<blockquote>\n<p>You have to search online in order to figure out how to do a lot of things, including multiple things in HexChat.</p>\n</blockquote>\n<p>If just a single search worked for me, I would have never spent the time reporting this issue. I'm fighting with it daily. I'm happy that it works for you. But it seems you're not using the manual copy behavior anyway. I'm not sure how it would affect you if Ctrl+C shortcut was added?</p>", "createdAt": "2015-05-22T19:54:46Z", "publishedAt": "2015-05-22T19:54:46Z", "lastEditedAt": null, "updatedAt": "2015-05-22T19:54:46Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6533, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I'm pretty that is the standard keybinding for copying text in most terminal emulators, while ctrl+C breaks the current active process.", "sentSegmented": ["i", "'m", "pretty", "that", "is", "the", "standard", "keybinding", "for", "copying", "text", "in", "most", "terminal", "emulators", "while", "ctrl+c", "breaks", "the", "current", "active", "process"], "sentSegmentedWithoutStops": ["'m", "pretty", "standard", "keybinding", "copying", "text", "terminal", "emulators", "ctrl+c", "breaks", "current", "active", "process"], "sentSegmentedWithoutStopsStemmed": ["'m", "pretti", "standard", "keybind", "copi", "text", "termin", "emul", "ctrl+c", "break", "current", "activ", "process"]}, {"number": 6534, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Yes, it is.", "sentSegmented": ["yes", "it", "is"], "sentSegmentedWithoutStops": ["yes"], "sentSegmentedWithoutStopsStemmed": ["ye"]}, {"number": 6535, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hexchat is a chat, though, which falls in to the \"everything else\" category.", "sentSegmented": ["hexchat", "is", "a", "chat", "though", "which", "falls", "in", "to", "the", "everything", "else", "category"], "sentSegmentedWithoutStops": ["hexchat", "chat", "though", "falls", "everything", "else", "category"], "sentSegmentedWithoutStopsStemmed": ["hexchat", "chat", "though", "fall", "everyth", "els", "categori"]}, {"number": 6536, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I also like HexChat's default behavior of automatically copying selected text to the clipboard", "sentSegmented": ["i", "also", "like", "hexchat", "'s", "default", "behavior", "of", "automatically", "copying", "selected", "text", "to", "the", "clipboard"], "sentSegmentedWithoutStops": ["also", "like", "hexchat", "'s", "default", "behavior", "automatically", "copying", "selected", "text", "clipboard"], "sentSegmentedWithoutStopsStemmed": ["also", "like", "hexchat", "'s", "default", "behavior", "automat", "copi", "select", "text", "clipboard"]}, {"number": 6537, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I don't propose to remove it nor make it not the default behavior.", "sentSegmented": ["i", "do", "n't", "propose", "to", "remove", "it", "nor", "make", "it", "not", "the", "default", "behavior"], "sentSegmentedWithoutStops": ["n't", "propose", "remove", "make", "default", "behavior"], "sentSegmentedWithoutStopsStemmed": ["n't", "propos", "remov", "make", "default", "behavior"]}, {"number": 6538, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I think the \"if no selection in input\" hacky workaround wouldn't even be a good solution because that means users have to first delete the contents of the input box in order to select chat window text.", "sentSegmented": ["i", "think", "the", "if", "no", "selection", "in", "input", "hacky", "workaround", "would", "n't", "even", "be", "a", "good", "solution", "because", "that", "means", "users", "have", "to", "first", "delete", "the", "contents", "of", "the", "input", "box", "in", "order", "to", "select", "chat", "window", "text"], "sentSegmentedWithoutStops": ["think", "selection", "input", "hacky", "workaround", "would", "n't", "even", "good", "solution", "means", "users", "first", "delete", "contents", "input", "box", "order", "select", "chat", "window", "text"], "sentSegmentedWithoutStopsStemmed": ["think", "select", "input", "hacki", "workaround", "would", "n't", "even", "good", "solut", "mean", "user", "first", "delet", "content", "input", "box", "order", "select", "chat", "window", "text"]}, {"number": 6539, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "No selection, not content.", "sentSegmented": ["no", "selection", "not", "content"], "sentSegmentedWithoutStops": ["selection", "content"], "sentSegmentedWithoutStopsStemmed": ["select", "content"]}, {"number": 6540, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "You have to search online in order to figure out how to do a lot of things, including multiple things in HexChat.", "sentSegmented": ["you", "have", "to", "search", "online", "in", "order", "to", "figure", "out", "how", "to", "do", "a", "lot", "of", "things", "including", "multiple", "things", "in", "hexchat"], "sentSegmentedWithoutStops": ["search", "online", "order", "figure", "lot", "things", "including", "multiple", "things", "hexchat"], "sentSegmentedWithoutStopsStemmed": ["search", "onlin", "order", "figur", "lot", "thing", "includ", "multipl", "thing", "hexchat"]}, {"number": 6541, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If just a single search worked for me, I would have never spent the time reporting this issue.", "sentSegmented": ["if", "just", "a", "single", "search", "worked", "for", "me", "i", "would", "have", "never", "spent", "the", "time", "reporting", "this", "issue"], "sentSegmentedWithoutStops": ["single", "search", "worked", "would", "never", "spent", "time", "reporting", "issue"], "sentSegmentedWithoutStopsStemmed": ["singl", "search", "work", "would", "never", "spent", "time", "report", "issu"]}, {"number": 6542, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm fighting with it daily.", "sentSegmented": ["i", "'m", "fighting", "with", "it", "daily"], "sentSegmentedWithoutStops": ["'m", "fighting", "daily"], "sentSegmentedWithoutStopsStemmed": ["'m", "fight", "daili"]}, {"number": 6543, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm happy that it works for you.", "sentSegmented": ["i", "'m", "happy", "that", "it", "works", "for", "you"], "sentSegmentedWithoutStops": ["'m", "happy", "works"], "sentSegmentedWithoutStopsStemmed": ["'m", "happi", "work"]}, {"number": 6544, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But it seems you're not using the manual copy behavior anyway.", "sentSegmented": ["but", "it", "seems", "you", "'re", "not", "using", "the", "manual", "copy", "behavior", "anyway"], "sentSegmentedWithoutStops": ["seems", "'re", "using", "manual", "copy", "behavior", "anyway"], "sentSegmentedWithoutStopsStemmed": ["seem", "'re", "use", "manual", "copi", "behavior", "anyway"]}, {"number": 6545, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm not sure how it would affect you if Ctrl+C shortcut was added?", "sentSegmented": ["i", "'m", "not", "sure", "how", "it", "would", "affect", "you", "if", "ctrl+c", "shortcut", "was", "added"], "sentSegmentedWithoutStops": ["'m", "sure", "would", "affect", "ctrl+c", "shortcut", "added"], "sentSegmentedWithoutStopsStemmed": ["'m", "sure", "would", "affect", "ctrl+c", "shortcut", "ad"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDc1NDkxNg==", "author": {"login": "TingPing"}, "body": "> I'm not sure how it would affect you if Ctrl+C shortcut was added?\n\nYou mean overridden, that is the questionable part.\n\nxtext is very much designed like a terminal window. Until hexchat improvements it basically only could use monospace fonts, it also only had a select to copy behavior, etc.\n", "bodyText": "I'm not sure how it would affect you if Ctrl+C shortcut was added?\n\nYou mean overridden, that is the questionable part.\nxtext is very much designed like a terminal window. Until hexchat improvements it basically only could use monospace fonts, it also only had a select to copy behavior, etc.", "bodyHTML": "<blockquote>\n<p>I'm not sure how it would affect you if Ctrl+C shortcut was added?</p>\n</blockquote>\n<p>You mean overridden, that is the questionable part.</p>\n<p>xtext is very much designed like a terminal window. Until hexchat improvements it basically only could use monospace fonts, it also only had a select to copy behavior, etc.</p>", "createdAt": "2015-05-22T20:01:26Z", "publishedAt": "2015-05-22T20:01:26Z", "lastEditedAt": null, "updatedAt": "2015-05-22T20:01:26Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6546, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I'm not sure how it would affect you if Ctrl+C shortcut was added?", "sentSegmented": ["i", "'m", "not", "sure", "how", "it", "would", "affect", "you", "if", "ctrl+c", "shortcut", "was", "added"], "sentSegmentedWithoutStops": ["'m", "sure", "would", "affect", "ctrl+c", "shortcut", "added"], "sentSegmentedWithoutStopsStemmed": ["'m", "sure", "would", "affect", "ctrl+c", "shortcut", "ad"]}, {"number": 6547, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You mean overridden, that is the questionable part.", "sentSegmented": ["you", "mean", "overridden", "that", "is", "the", "questionable", "part"], "sentSegmentedWithoutStops": ["mean", "overridden", "questionable", "part"], "sentSegmentedWithoutStopsStemmed": ["mean", "overridden", "question", "part"]}, {"number": 6548, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "xtext is very much designed like a terminal window.", "sentSegmented": ["xtext", "is", "very", "much", "designed", "like", "a", "terminal", "window"], "sentSegmentedWithoutStops": ["xtext", "much", "designed", "like", "terminal", "window"], "sentSegmentedWithoutStopsStemmed": ["xtext", "much", "design", "like", "termin", "window"]}, {"number": 6549, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Until hexchat improvements it basically only could use monospace fonts, it also only had a select to copy behavior, etc.", "sentSegmented": ["until", "hexchat", "improvements", "it", "basically", "only", "could", "use", "monospace", "fonts", "it", "also", "only", "had", "a", "select", "to", "copy", "behavior", "etc"], "sentSegmentedWithoutStops": ["hexchat", "improvements", "basically", "could", "use", "monospace", "fonts", "also", "select", "copy", "behavior", "etc"], "sentSegmentedWithoutStopsStemmed": ["hexchat", "improv", "basic", "could", "use", "monospac", "font", "also", "select", "copi", "behavior", "etc"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDc3MTY1OA==", "author": {"login": "Poorchop"}, "body": "> No selection, not content.\n\nWell since you cleared that up, I guess you make a decent case. The hacky workaround might not be such a bad idea then, even though it would be kind of ugly. I still don't see why it's so hard to adapt to just using ctrl+shift+C - if you can do it in your terminal emulator, then you can get used to doing it in another program that more or less looks and feels like a terminal program (by default). I don't feel as strongly about it since I actually like the default select-to-copy behavior, but I can see where you are coming from now.\n", "bodyText": "No selection, not content.\n\nWell since you cleared that up, I guess you make a decent case. The hacky workaround might not be such a bad idea then, even though it would be kind of ugly. I still don't see why it's so hard to adapt to just using ctrl+shift+C - if you can do it in your terminal emulator, then you can get used to doing it in another program that more or less looks and feels like a terminal program (by default). I don't feel as strongly about it since I actually like the default select-to-copy behavior, but I can see where you are coming from now.", "bodyHTML": "<blockquote>\n<p>No selection, not content.</p>\n</blockquote>\n<p>Well since you cleared that up, I guess you make a decent case. The hacky workaround might not be such a bad idea then, even though it would be kind of ugly. I still don't see why it's so hard to adapt to just using ctrl+shift+C - if you can do it in your terminal emulator, then you can get used to doing it in another program that more or less looks and feels like a terminal program (by default). I don't feel as strongly about it since I actually like the default select-to-copy behavior, but I can see where you are coming from now.</p>", "createdAt": "2015-05-22T21:12:30Z", "publishedAt": "2015-05-22T21:12:30Z", "lastEditedAt": null, "updatedAt": "2015-05-22T21:12:30Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6550, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "No selection, not content.", "sentSegmented": ["no", "selection", "not", "content"], "sentSegmentedWithoutStops": ["selection", "content"], "sentSegmentedWithoutStopsStemmed": ["select", "content"]}, {"number": 6551, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Well since you cleared that up, I guess you make a decent case.", "sentSegmented": ["well", "since", "you", "cleared", "that", "up", "i", "guess", "you", "make", "a", "decent", "case"], "sentSegmentedWithoutStops": ["well", "since", "cleared", "guess", "make", "decent", "case"], "sentSegmentedWithoutStopsStemmed": ["well", "sinc", "clear", "guess", "make", "decent", "case"]}, {"number": 6552, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The hacky workaround might not be such a bad idea then, even though it would be kind of ugly.", "sentSegmented": ["the", "hacky", "workaround", "might", "not", "be", "such", "a", "bad", "idea", "then", "even", "though", "it", "would", "be", "kind", "of", "ugly"], "sentSegmentedWithoutStops": ["hacky", "workaround", "might", "bad", "idea", "even", "though", "would", "kind", "ugly"], "sentSegmentedWithoutStopsStemmed": ["hacki", "workaround", "might", "bad", "idea", "even", "though", "would", "kind", "ugli"]}, {"number": 6553, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I still don't see why it's so hard to adapt to just using ctrl+shift+C - if you can do it in your terminal emulator, then you can get used to doing it in another program that more or less looks and feels like a terminal program (by default).", "sentSegmented": ["i", "still", "do", "n't", "see", "why", "it", "'s", "so", "hard", "to", "adapt", "to", "just", "using", "ctrl+shift+c", "if", "you", "can", "do", "it", "in", "your", "terminal", "emulator", "then", "you", "can", "get", "used", "to", "doing", "it", "in", "another", "program", "that", "more", "or", "less", "looks", "and", "feels", "like", "a", "terminal", "program", "by", "default"], "sentSegmentedWithoutStops": ["still", "n't", "see", "'s", "hard", "adapt", "using", "ctrl+shift+c", "terminal", "emulator", "get", "used", "another", "program", "less", "looks", "feels", "like", "terminal", "program", "default"], "sentSegmentedWithoutStopsStemmed": ["still", "n't", "see", "'s", "hard", "adapt", "use", "ctrl+shift+c", "termin", "emul", "get", "use", "anoth", "program", "less", "look", "feel", "like", "termin", "program", "default"]}, {"number": 6554, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I don't feel as strongly about it since I actually like the default select-to-copy behavior, but I can see where you are coming from now.", "sentSegmented": ["i", "do", "n't", "feel", "as", "strongly", "about", "it", "since", "i", "actually", "like", "the", "default", "select-to-copy", "behavior", "but", "i", "can", "see", "where", "you", "are", "coming", "from", "now"], "sentSegmentedWithoutStops": ["n't", "feel", "strongly", "since", "actually", "like", "default", "select-to-copy", "behavior", "see", "coming"], "sentSegmentedWithoutStopsStemmed": ["n't", "feel", "strongli", "sinc", "actual", "like", "default", "select-to-copi", "behavior", "see", "come"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNDgwODk3NA==", "author": {"login": "kparal"}, "body": "> You mean overridden, that is the questionable part.\n\nI already mentioned twice I don't ask to replace it: https://github.com/hexchat/hexchat/issues/1137#issuecomment-104673897 and https://github.com/hexchat/hexchat/issues/1137#issuecomment-104735216\n\n>  I still don't see why it's so hard to adapt to just using ctrl+shift+C\n\nBelieve me, I really tried (and still try). I opened #1380 because during an IRC conversation I quickly selected a sentence from a different channel, hit Ctrl+C as I'm used to from everywhere else (which in reality did nothing), switched to the other channel, pasted using Ctrl+V and hit Enter. Only after that I found out that what I pasted was an older clipboard contents, which wasn't meant to go public... and this wasn't the first time.\n\nIt's not like it's not possible to remember ctrl+shift+c. Sometimes I do, sometimes I don't, but it's easy to correct. But occasionally such accidents happen and they are not pleasant. Also, using hexchat keeps me on my toes, because I constantly need to think about \"the copy exception rule\". These operations then feel unreliable to me, because I'm not able to be constantly mentally aware whether I'm using hexchat, gedit, firefox, atom, spyder, pidgin or one of the dozen other apps I switch between every few minutes. So I'm being unhappy about that.\n\nAs for terminal, yeah, for some reason I'm usually able to keep those special shortcuts in my mind. But more often than not, I simply use the mouse context menu. I find ctrl+shift+c hard to press and there's a danger that if you press shift too little, you'll kill your program, so I don't use it much.\n\n> if you can do it in your terminal emulator, then you can get used to doing it in another program that more or less looks and feels like a terminal program\n\nThat's probably the difference between us. Subconsciously, I consider hexchat exactly the same as any other IM or chat. Or any other GUI app. It has white background, you know... and terminal is black :-) It has probably been hard-wired into my brain over the years. Not sure if it is about the color or just general look and feel.\n", "bodyText": "You mean overridden, that is the questionable part.\n\nI already mentioned twice I don't ask to replace it: #1137 (comment) and #1137 (comment)\n\nI still don't see why it's so hard to adapt to just using ctrl+shift+C\n\nBelieve me, I really tried (and still try). I opened #1380 because during an IRC conversation I quickly selected a sentence from a different channel, hit Ctrl+C as I'm used to from everywhere else (which in reality did nothing), switched to the other channel, pasted using Ctrl+V and hit Enter. Only after that I found out that what I pasted was an older clipboard contents, which wasn't meant to go public... and this wasn't the first time.\nIt's not like it's not possible to remember ctrl+shift+c. Sometimes I do, sometimes I don't, but it's easy to correct. But occasionally such accidents happen and they are not pleasant. Also, using hexchat keeps me on my toes, because I constantly need to think about \"the copy exception rule\". These operations then feel unreliable to me, because I'm not able to be constantly mentally aware whether I'm using hexchat, gedit, firefox, atom, spyder, pidgin or one of the dozen other apps I switch between every few minutes. So I'm being unhappy about that.\nAs for terminal, yeah, for some reason I'm usually able to keep those special shortcuts in my mind. But more often than not, I simply use the mouse context menu. I find ctrl+shift+c hard to press and there's a danger that if you press shift too little, you'll kill your program, so I don't use it much.\n\nif you can do it in your terminal emulator, then you can get used to doing it in another program that more or less looks and feels like a terminal program\n\nThat's probably the difference between us. Subconsciously, I consider hexchat exactly the same as any other IM or chat. Or any other GUI app. It has white background, you know... and terminal is black :-) It has probably been hard-wired into my brain over the years. Not sure if it is about the color or just general look and feel.", "bodyHTML": "<blockquote>\n<p>You mean overridden, that is the questionable part.</p>\n</blockquote>\n<p>I already mentioned twice I don't ask to replace it: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"42765350\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hexchat/hexchat/issues/1137\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hexchat/hexchat/issues/1137/hovercard?comment_id=104673897&amp;comment_type=issue_comment\" href=\"https://github.com/hexchat/hexchat/issues/1137#issuecomment-104673897\">#1137 (comment)</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"42765350\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hexchat/hexchat/issues/1137\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hexchat/hexchat/issues/1137/hovercard?comment_id=104735216&amp;comment_type=issue_comment\" href=\"https://github.com/hexchat/hexchat/issues/1137#issuecomment-104735216\">#1137 (comment)</a></p>\n<blockquote>\n<p>I still don't see why it's so hard to adapt to just using ctrl+shift+C</p>\n</blockquote>\n<p>Believe me, I really tried (and still try). I opened <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"79118875\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hexchat/hexchat/issues/1380\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hexchat/hexchat/issues/1380/hovercard\" href=\"https://github.com/hexchat/hexchat/issues/1380\">#1380</a> because during an IRC conversation I quickly selected a sentence from a different channel, hit Ctrl+C as I'm used to from everywhere else (which in reality did nothing), switched to the other channel, pasted using Ctrl+V and hit Enter. Only after that I found out that what I pasted was an older clipboard contents, which wasn't meant to go public... and this wasn't the first time.</p>\n<p>It's not like it's not possible to remember ctrl+shift+c. Sometimes I do, sometimes I don't, but it's easy to correct. But occasionally such accidents happen and they are not pleasant. Also, using hexchat keeps me on my toes, because I constantly need to think about \"the copy exception rule\". These operations then feel unreliable to me, because I'm not able to be constantly mentally aware whether I'm using hexchat, gedit, firefox, atom, spyder, pidgin or one of the dozen other apps I switch between every few minutes. So I'm being unhappy about that.</p>\n<p>As for terminal, yeah, for some reason I'm usually able to keep those special shortcuts in my mind. But more often than not, I simply use the mouse context menu. I find ctrl+shift+c hard to press and there's a danger that if you press shift too little, you'll kill your program, so I don't use it much.</p>\n<blockquote>\n<p>if you can do it in your terminal emulator, then you can get used to doing it in another program that more or less looks and feels like a terminal program</p>\n</blockquote>\n<p>That's probably the difference between us. Subconsciously, I consider hexchat exactly the same as any other IM or chat. Or any other GUI app. It has white background, you know... and terminal is black :-) It has probably been hard-wired into my brain over the years. Not sure if it is about the color or just general look and feel.</p>", "createdAt": "2015-05-23T00:56:36Z", "publishedAt": "2015-05-23T00:56:36Z", "lastEditedAt": null, "updatedAt": "2015-05-23T00:56:36Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6555, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "You mean overridden, that is the questionable part.", "sentSegmented": ["you", "mean", "overridden", "that", "is", "the", "questionable", "part"], "sentSegmentedWithoutStops": ["mean", "overridden", "questionable", "part"], "sentSegmentedWithoutStopsStemmed": ["mean", "overridden", "question", "part"]}, {"number": 6556, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I already mentioned twice I don't ask to replace it: #1137 (comment) and #1137 (comment)", "sentSegmented": ["i", "already", "mentioned", "twice", "i", "do", "n't", "ask", "to", "replace", "it", "1137", "comment", "and", "1137", "comment"], "sentSegmentedWithoutStops": ["already", "mentioned", "twice", "n't", "ask", "replace", "1137", "comment", "1137", "comment"], "sentSegmentedWithoutStopsStemmed": ["alreadi", "mention", "twice", "n't", "ask", "replac", "1137", "comment", "1137", "comment"]}, {"number": 6557, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I still don't see why it's so hard to adapt to just using ctrl+shift+C", "sentSegmented": ["i", "still", "do", "n't", "see", "why", "it", "'s", "so", "hard", "to", "adapt", "to", "just", "using", "ctrl+shift+c"], "sentSegmentedWithoutStops": ["still", "n't", "see", "'s", "hard", "adapt", "using", "ctrl+shift+c"], "sentSegmentedWithoutStopsStemmed": ["still", "n't", "see", "'s", "hard", "adapt", "use", "ctrl+shift+c"]}, {"number": 6558, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Believe me, I really tried (and still try).", "sentSegmented": ["believe", "me", "i", "really", "tried", "and", "still", "try"], "sentSegmentedWithoutStops": ["believe", "really", "tried", "still", "try"], "sentSegmentedWithoutStopsStemmed": ["believ", "realli", "tri", "still", "tri"]}, {"number": 6559, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I opened #1380 because during an IRC conversation I quickly selected a sentence from a different channel, hit Ctrl+C as I'm used to from everywhere else (which in reality did nothing), switched to the other channel, pasted using Ctrl+V and hit Enter.", "sentSegmented": ["i", "opened", "1380", "because", "during", "an", "irc", "conversation", "i", "quickly", "selected", "a", "sentence", "from", "a", "different", "channel", "hit", "ctrl+c", "as", "i", "'m", "used", "to", "from", "everywhere", "else", "which", "in", "reality", "did", "nothing", "switched", "to", "the", "other", "channel", "pasted", "using", "ctrl+v", "and", "hit", "enter"], "sentSegmentedWithoutStops": ["opened", "1380", "irc", "conversation", "quickly", "selected", "sentence", "different", "channel", "hit", "ctrl+c", "'m", "used", "everywhere", "else", "reality", "nothing", "switched", "channel", "pasted", "using", "ctrl+v", "hit", "enter"], "sentSegmentedWithoutStopsStemmed": ["open", "1380", "irc", "convers", "quickli", "select", "sentenc", "differ", "channel", "hit", "ctrl+c", "'m", "use", "everywher", "els", "realiti", "noth", "switch", "channel", "past", "use", "ctrl+v", "hit", "enter"]}, {"number": 6560, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Only after that I found out that what I pasted was an older clipboard contents, which wasn't meant to go public... and this wasn't the first time.", "sentSegmented": ["only", "after", "that", "i", "found", "out", "that", "what", "i", "pasted", "was", "an", "older", "clipboard", "contents", "which", "was", "n't", "meant", "to", "go", "public", "and", "this", "was", "n't", "the", "first", "time"], "sentSegmentedWithoutStops": ["found", "pasted", "older", "clipboard", "contents", "n't", "meant", "go", "public", "n't", "first", "time"], "sentSegmentedWithoutStopsStemmed": ["found", "past", "older", "clipboard", "content", "n't", "meant", "go", "public", "n't", "first", "time"]}, {"number": 6561, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's not like it's not possible to remember ctrl+shift+c.", "sentSegmented": ["it", "'s", "not", "like", "it", "'s", "not", "possible", "to", "remember", "ctrl+shift+c"], "sentSegmentedWithoutStops": ["'s", "like", "'s", "possible", "remember", "ctrl+shift+c"], "sentSegmentedWithoutStopsStemmed": ["'s", "like", "'s", "possibl", "rememb", "ctrl+shift+c"]}, {"number": 6562, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Sometimes I do, sometimes I don't, but it's easy to correct.", "sentSegmented": ["sometimes", "i", "do", "sometimes", "i", "do", "n't", "but", "it", "'s", "easy", "to", "correct"], "sentSegmentedWithoutStops": ["sometimes", "sometimes", "n't", "'s", "easy", "correct"], "sentSegmentedWithoutStopsStemmed": ["sometim", "sometim", "n't", "'s", "easi", "correct"]}, {"number": 6563, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But occasionally such accidents happen and they are not pleasant.", "sentSegmented": ["but", "occasionally", "such", "accidents", "happen", "and", "they", "are", "not", "pleasant"], "sentSegmentedWithoutStops": ["occasionally", "accidents", "happen", "pleasant"], "sentSegmentedWithoutStopsStemmed": ["occasion", "accid", "happen", "pleasant"]}, {"number": 6564, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Also, using hexchat keeps me on my toes, because I constantly need to think about \"the copy exception rule\".", "sentSegmented": ["also", "using", "hexchat", "keeps", "me", "on", "my", "toes", "because", "i", "constantly", "need", "to", "think", "about", "the", "copy", "exception", "rule"], "sentSegmentedWithoutStops": ["also", "using", "hexchat", "keeps", "toes", "constantly", "need", "think", "copy", "exception", "rule"], "sentSegmentedWithoutStopsStemmed": ["also", "use", "hexchat", "keep", "toe", "constantli", "need", "think", "copi", "except", "rule"]}, {"number": 6565, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "These operations then feel unreliable to me, because I'm not able to be constantly mentally aware whether I'm using hexchat, gedit, firefox, atom, spyder, pidgin or one of the dozen other apps I switch between every few minutes.", "sentSegmented": ["these", "operations", "then", "feel", "unreliable", "to", "me", "because", "i", "'m", "not", "able", "to", "be", "constantly", "mentally", "aware", "whether", "i", "'m", "using", "hexchat", "gedit", "firefox", "atom", "spyder", "pidgin", "or", "one", "of", "the", "dozen", "other", "apps", "i", "switch", "between", "every", "few", "minutes"], "sentSegmentedWithoutStops": ["operations", "feel", "unreliable", "'m", "able", "constantly", "mentally", "aware", "whether", "'m", "using", "hexchat", "gedit", "firefox", "atom", "spyder", "pidgin", "one", "dozen", "apps", "switch", "every", "minutes"], "sentSegmentedWithoutStopsStemmed": ["oper", "feel", "unreli", "'m", "abl", "constantli", "mental", "awar", "whether", "'m", "use", "hexchat", "gedit", "firefox", "atom", "spyder", "pidgin", "one", "dozen", "app", "switch", "everi", "minut"]}, {"number": 6566, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So I'm being unhappy about that.", "sentSegmented": ["so", "i", "'m", "being", "unhappy", "about", "that"], "sentSegmentedWithoutStops": ["'m", "unhappy"], "sentSegmentedWithoutStopsStemmed": ["'m", "unhappi"]}, {"number": 6567, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "As for terminal, yeah, for some reason I'm usually able to keep those special shortcuts in my mind.", "sentSegmented": ["as", "for", "terminal", "yeah", "for", "some", "reason", "i", "'m", "usually", "able", "to", "keep", "those", "special", "shortcuts", "in", "my", "mind"], "sentSegmentedWithoutStops": ["terminal", "yeah", "reason", "'m", "usually", "able", "keep", "special", "shortcuts", "mind"], "sentSegmentedWithoutStopsStemmed": ["termin", "yeah", "reason", "'m", "usual", "abl", "keep", "special", "shortcut", "mind"]}, {"number": 6568, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But more often than not, I simply use the mouse context menu.", "sentSegmented": ["but", "more", "often", "than", "not", "i", "simply", "use", "the", "mouse", "context", "menu"], "sentSegmentedWithoutStops": ["often", "simply", "use", "mouse", "context", "menu"], "sentSegmentedWithoutStopsStemmed": ["often", "simpli", "use", "mous", "context", "menu"]}, {"number": 6569, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I find ctrl+shift+c hard to press and there's a danger that if you press shift too little, you'll kill your program, so I don't use it much.", "sentSegmented": ["i", "find", "ctrl+shift+c", "hard", "to", "press", "and", "there", "'s", "a", "danger", "that", "if", "you", "press", "shift", "too", "little", "you", "'ll", "kill", "your", "program", "so", "i", "do", "n't", "use", "it", "much"], "sentSegmentedWithoutStops": ["find", "ctrl+shift+c", "hard", "press", "'s", "danger", "press", "shift", "little", "'ll", "kill", "program", "n't", "use", "much"], "sentSegmentedWithoutStopsStemmed": ["find", "ctrl+shift+c", "hard", "press", "'s", "danger", "press", "shift", "littl", "'ll", "kill", "program", "n't", "use", "much"]}, {"number": 6570, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "if you can do it in your terminal emulator, then you can get used to doing it in another program that more or less looks and feels like a terminal program", "sentSegmented": ["if", "you", "can", "do", "it", "in", "your", "terminal", "emulator", "then", "you", "can", "get", "used", "to", "doing", "it", "in", "another", "program", "that", "more", "or", "less", "looks", "and", "feels", "like", "a", "terminal", "program"], "sentSegmentedWithoutStops": ["terminal", "emulator", "get", "used", "another", "program", "less", "looks", "feels", "like", "terminal", "program"], "sentSegmentedWithoutStopsStemmed": ["termin", "emul", "get", "use", "anoth", "program", "less", "look", "feel", "like", "termin", "program"]}, {"number": 6571, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "That's probably the difference between us.", "sentSegmented": ["that", "'s", "probably", "the", "difference", "between", "us"], "sentSegmentedWithoutStops": ["'s", "probably", "difference", "us"], "sentSegmentedWithoutStopsStemmed": ["'s", "probabl", "differ", "us"]}, {"number": 6572, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Subconsciously, I consider hexchat exactly the same as any other IM or chat.", "sentSegmented": ["subconsciously", "i", "consider", "hexchat", "exactly", "the", "same", "as", "any", "other", "im", "or", "chat"], "sentSegmentedWithoutStops": ["subconsciously", "consider", "hexchat", "exactly", "im", "chat"], "sentSegmentedWithoutStopsStemmed": ["subconsci", "consid", "hexchat", "exactli", "im", "chat"]}, {"number": 6573, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Or any other GUI app.", "sentSegmented": ["or", "any", "other", "gui", "app"], "sentSegmentedWithoutStops": ["gui", "app"], "sentSegmentedWithoutStopsStemmed": ["gui", "app"]}, {"number": 6574, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It has white background, you know... and terminal is black :-) It has probably been hard-wired into my brain over the years.", "sentSegmented": ["it", "has", "white", "background", "you", "know", "and", "terminal", "is", "black", "it", "has", "probably", "been", "hard-wired", "into", "my", "brain", "over", "the", "years"], "sentSegmentedWithoutStops": ["white", "background", "know", "terminal", "black", "probably", "hard-wired", "brain", "years"], "sentSegmentedWithoutStopsStemmed": ["white", "background", "know", "termin", "black", "probabl", "hard-wir", "brain", "year"]}, {"number": 6575, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Not sure if it is about the color or just general look and feel.", "sentSegmented": ["not", "sure", "if", "it", "is", "about", "the", "color", "or", "just", "general", "look", "and", "feel"], "sentSegmentedWithoutStops": ["sure", "color", "general", "look", "feel"], "sentSegmentedWithoutStopsStemmed": ["sure", "color", "gener", "look", "feel"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDEwNjkzMzIzNg==", "author": {"login": "deckblad"}, "body": "Hexchat should use whatever hotkey is common for that OS. Like every other program. \n\nFocus shouldn't be locked to the text box. If I'm selecting something, that's where the cursor now. If I want to type, I click back in the input box.\n\nAnd/or, take a look at pidgin. It sends any un-modded keystrokes to text input but lets you select whatever text from the buffer at the same time.\n", "bodyText": "Hexchat should use whatever hotkey is common for that OS. Like every other program.\nFocus shouldn't be locked to the text box. If I'm selecting something, that's where the cursor now. If I want to type, I click back in the input box.\nAnd/or, take a look at pidgin. It sends any un-modded keystrokes to text input but lets you select whatever text from the buffer at the same time.", "bodyHTML": "<p>Hexchat should use whatever hotkey is common for that OS. Like every other program.</p>\n<p>Focus shouldn't be locked to the text box. If I'm selecting something, that's where the cursor now. If I want to type, I click back in the input box.</p>\n<p>And/or, take a look at pidgin. It sends any un-modded keystrokes to text input but lets you select whatever text from the buffer at the same time.</p>", "createdAt": "2015-05-29T20:55:11Z", "publishedAt": "2015-05-29T20:55:11Z", "lastEditedAt": null, "updatedAt": "2015-05-29T20:57:28Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2016-05-19T14:13:38Z"}}, {"node": {"content": "HOORAY", "createdAt": "2016-05-19T14:13:42Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2016-08-28T13:49:11Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2017-05-12T01:40:38Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-10-05T15:59:46Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-05-23T15:49:04Z"}}, {"node": {"content": "HOORAY", "createdAt": "2020-05-23T15:49:07Z"}}]}, "bodyParsed": [{"number": 6576, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hexchat should use whatever hotkey is common for that OS.", "sentSegmented": ["hexchat", "should", "use", "whatever", "hotkey", "is", "common", "for", "that", "os"], "sentSegmentedWithoutStops": ["hexchat", "use", "whatever", "hotkey", "common", "os"], "sentSegmentedWithoutStopsStemmed": ["hexchat", "use", "whatev", "hotkey", "common", "os"]}, {"number": 6577, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Like every other program.", "sentSegmented": ["like", "every", "other", "program"], "sentSegmentedWithoutStops": ["like", "every", "program"], "sentSegmentedWithoutStopsStemmed": ["like", "everi", "program"]}, {"number": 6578, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Focus shouldn't be locked to the text box.", "sentSegmented": ["focus", "should", "n't", "be", "locked", "to", "the", "text", "box"], "sentSegmentedWithoutStops": ["focus", "n't", "locked", "text", "box"], "sentSegmentedWithoutStopsStemmed": ["focu", "n't", "lock", "text", "box"]}, {"number": 6579, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If I'm selecting something, that's where the cursor now.", "sentSegmented": ["if", "i", "'m", "selecting", "something", "that", "'s", "where", "the", "cursor", "now"], "sentSegmentedWithoutStops": ["'m", "selecting", "something", "'s", "cursor"], "sentSegmentedWithoutStopsStemmed": ["'m", "select", "someth", "'s", "cursor"]}, {"number": 6580, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If I want to type, I click back in the input box.", "sentSegmented": ["if", "i", "want", "to", "type", "i", "click", "back", "in", "the", "input", "box"], "sentSegmentedWithoutStops": ["want", "type", "click", "back", "input", "box"], "sentSegmentedWithoutStopsStemmed": ["want", "type", "click", "back", "input", "box"]}, {"number": 6581, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "And/or, take a look at pidgin.", "sentSegmented": ["and/or", "take", "a", "look", "at", "pidgin"], "sentSegmentedWithoutStops": ["and/or", "take", "look", "pidgin"], "sentSegmentedWithoutStopsStemmed": ["and/or", "take", "look", "pidgin"]}, {"number": 6582, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It sends any un-modded keystrokes to text input but lets you select whatever text from the buffer at the same time.", "sentSegmented": ["it", "sends", "any", "un-modded", "keystrokes", "to", "text", "input", "but", "lets", "you", "select", "whatever", "text", "from", "the", "buffer", "at", "the", "same", "time"], "sentSegmentedWithoutStops": ["sends", "un-modded", "keystrokes", "text", "input", "lets", "select", "whatever", "text", "buffer", "time"], "sentSegmentedWithoutStopsStemmed": ["send", "un-mod", "keystrok", "text", "input", "let", "select", "whatev", "text", "buffer", "time"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDIyMDM0OTM4Mw==", "author": {"login": "Arnavion"}, "body": "> Focus shouldn't be locked to the text box. If I'm selecting something, that's where the cursor now. If I want to type, I click back in the input box.\n\nFor the record, this would be a severe usability regression for anyone who has HC running on another monitor and wants to quickly focus it and start typing.\n", "bodyText": "Focus shouldn't be locked to the text box. If I'm selecting something, that's where the cursor now. If I want to type, I click back in the input box.\n\nFor the record, this would be a severe usability regression for anyone who has HC running on another monitor and wants to quickly focus it and start typing.", "bodyHTML": "<blockquote>\n<p>Focus shouldn't be locked to the text box. If I'm selecting something, that's where the cursor now. If I want to type, I click back in the input box.</p>\n</blockquote>\n<p>For the record, this would be a severe usability regression for anyone who has HC running on another monitor and wants to quickly focus it and start typing.</p>", "createdAt": "2016-05-19T14:54:31Z", "publishedAt": "2016-05-19T14:54:31Z", "lastEditedAt": null, "updatedAt": "2016-05-19T14:54:31Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6583, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Focus shouldn't be locked to the text box.", "sentSegmented": ["focus", "should", "n't", "be", "locked", "to", "the", "text", "box"], "sentSegmentedWithoutStops": ["focus", "n't", "locked", "text", "box"], "sentSegmentedWithoutStopsStemmed": ["focu", "n't", "lock", "text", "box"]}, {"number": 6584, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "If I'm selecting something, that's where the cursor now.", "sentSegmented": ["if", "i", "'m", "selecting", "something", "that", "'s", "where", "the", "cursor", "now"], "sentSegmentedWithoutStops": ["'m", "selecting", "something", "'s", "cursor"], "sentSegmentedWithoutStopsStemmed": ["'m", "select", "someth", "'s", "cursor"]}, {"number": 6585, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "If I want to type, I click back in the input box.", "sentSegmented": ["if", "i", "want", "to", "type", "i", "click", "back", "in", "the", "input", "box"], "sentSegmentedWithoutStops": ["want", "type", "click", "back", "input", "box"], "sentSegmentedWithoutStopsStemmed": ["want", "type", "click", "back", "input", "box"]}, {"number": 6586, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "For the record, this would be a severe usability regression for anyone who has HC running on another monitor and wants to quickly focus it and start typing.", "sentSegmented": ["for", "the", "record", "this", "would", "be", "a", "severe", "usability", "regression", "for", "anyone", "who", "has", "hc", "running", "on", "another", "monitor", "and", "wants", "to", "quickly", "focus", "it", "and", "start", "typing"], "sentSegmentedWithoutStops": ["record", "would", "severe", "usability", "regression", "anyone", "hc", "running", "another", "monitor", "wants", "quickly", "focus", "start", "typing"], "sentSegmentedWithoutStopsStemmed": ["record", "would", "sever", "usabl", "regress", "anyon", "hc", "run", "anoth", "monitor", "want", "quickli", "focu", "start", "type"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDIyMDM3MTY3Mw==", "author": {"login": "kparal"}, "body": "> For the record, this would be a severe usability regression for anyone who has HC running on another monitor and wants to quickly focus it and start typing.\n\nNot really, since hexchat can auto-focus the input box once you start typing.\n", "bodyText": "For the record, this would be a severe usability regression for anyone who has HC running on another monitor and wants to quickly focus it and start typing.\n\nNot really, since hexchat can auto-focus the input box once you start typing.", "bodyHTML": "<blockquote>\n<p>For the record, this would be a severe usability regression for anyone who has HC running on another monitor and wants to quickly focus it and start typing.</p>\n</blockquote>\n<p>Not really, since hexchat can auto-focus the input box once you start typing.</p>", "createdAt": "2016-05-19T16:03:20Z", "publishedAt": "2016-05-19T16:03:20Z", "lastEditedAt": null, "updatedAt": "2016-05-19T16:03:20Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2016-08-28T13:50:02Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2016-09-19T23:33:03Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2017-05-12T01:40:23Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-07-14T02:20:00Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-11-20T04:17:59Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-05-23T15:49:31Z"}}]}, "bodyParsed": [{"number": 6587, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "For the record, this would be a severe usability regression for anyone who has HC running on another monitor and wants to quickly focus it and start typing.", "sentSegmented": ["for", "the", "record", "this", "would", "be", "a", "severe", "usability", "regression", "for", "anyone", "who", "has", "hc", "running", "on", "another", "monitor", "and", "wants", "to", "quickly", "focus", "it", "and", "start", "typing"], "sentSegmentedWithoutStops": ["record", "would", "severe", "usability", "regression", "anyone", "hc", "running", "another", "monitor", "wants", "quickly", "focus", "start", "typing"], "sentSegmentedWithoutStopsStemmed": ["record", "would", "sever", "usabl", "regress", "anyon", "hc", "run", "anoth", "monitor", "want", "quickli", "focu", "start", "type"]}, {"number": 6588, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Not really, since hexchat can auto-focus the input box once you start typing.", "sentSegmented": ["not", "really", "since", "hexchat", "can", "auto-focus", "the", "input", "box", "once", "you", "start", "typing"], "sentSegmentedWithoutStops": ["really", "since", "hexchat", "auto-focus", "input", "box", "start", "typing"], "sentSegmentedWithoutStopsStemmed": ["realli", "sinc", "hexchat", "auto-focu", "input", "box", "start", "type"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MTIzOTQ3NQ==", "author": {"login": "eos-"}, "body": "@kparal \r\n> If I press Ctrl+C, it's obvious I want to copy something. If there's nothing selected in the input box, and there's something selected in chat, that's what I want to copy, you can't go wrong here. The only complicated situation is when both input box and chat have some selection active. Then, I assume, input box would be preferred. It makes sense from the user point of view and it is easy to correct.\r\n\r\nI implemented exactly this with a little patch in `menu.c`. Enjoy! I know I will. :)\r\n[ctrl-c-patch.txt](https://github.com/hexchat/hexchat/files/1908695/ctrl-c-patch.txt)\r\n\r\n", "bodyText": "@kparal\n\nIf I press Ctrl+C, it's obvious I want to copy something. If there's nothing selected in the input box, and there's something selected in chat, that's what I want to copy, you can't go wrong here. The only complicated situation is when both input box and chat have some selection active. Then, I assume, input box would be preferred. It makes sense from the user point of view and it is easy to correct.\n\nI implemented exactly this with a little patch in menu.c. Enjoy! I know I will. :)\nctrl-c-patch.txt", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/kparal/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kparal\">@kparal</a></p>\n<blockquote>\n<p>If I press Ctrl+C, it's obvious I want to copy something. If there's nothing selected in the input box, and there's something selected in chat, that's what I want to copy, you can't go wrong here. The only complicated situation is when both input box and chat have some selection active. Then, I assume, input box would be preferred. It makes sense from the user point of view and it is easy to correct.</p>\n</blockquote>\n<p>I implemented exactly this with a little patch in <code>menu.c</code>. Enjoy! I know I will. :)<br>\n<a href=\"https://github.com/hexchat/hexchat/files/1908695/ctrl-c-patch.txt\">ctrl-c-patch.txt</a></p>", "createdAt": "2018-04-13T19:31:39Z", "publishedAt": "2018-04-13T19:31:39Z", "lastEditedAt": null, "updatedAt": "2018-04-13T19:31:39Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-06-19T11:59:54Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-10-05T16:00:15Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-05-23T15:49:41Z"}}]}, "bodyParsed": [{"number": 6589, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@kparal", "sentSegmented": ["kparal"], "sentSegmentedWithoutStops": ["kparal"], "sentSegmentedWithoutStopsStemmed": ["kparal"]}, {"number": 6590, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "If I press Ctrl+C, it's obvious I want to copy something.", "sentSegmented": ["if", "i", "press", "ctrl+c", "it", "'s", "obvious", "i", "want", "to", "copy", "something"], "sentSegmentedWithoutStops": ["press", "ctrl+c", "'s", "obvious", "want", "copy", "something"], "sentSegmentedWithoutStopsStemmed": ["press", "ctrl+c", "'s", "obviou", "want", "copi", "someth"]}, {"number": 6591, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "If there's nothing selected in the input box, and there's something selected in chat, that's what I want to copy, you can't go wrong here.", "sentSegmented": ["if", "there", "'s", "nothing", "selected", "in", "the", "input", "box", "and", "there", "'s", "something", "selected", "in", "chat", "that", "'s", "what", "i", "want", "to", "copy", "you", "ca", "n't", "go", "wrong", "here"], "sentSegmentedWithoutStops": ["'s", "nothing", "selected", "input", "box", "'s", "something", "selected", "chat", "'s", "want", "copy", "ca", "n't", "go", "wrong"], "sentSegmentedWithoutStopsStemmed": ["'s", "noth", "select", "input", "box", "'s", "someth", "select", "chat", "'s", "want", "copi", "ca", "n't", "go", "wrong"]}, {"number": 6592, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "The only complicated situation is when both input box and chat have some selection active.", "sentSegmented": ["the", "only", "complicated", "situation", "is", "when", "both", "input", "box", "and", "chat", "have", "some", "selection", "active"], "sentSegmentedWithoutStops": ["complicated", "situation", "input", "box", "chat", "selection", "active"], "sentSegmentedWithoutStopsStemmed": ["complic", "situat", "input", "box", "chat", "select", "activ"]}, {"number": 6593, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Then, I assume, input box would be preferred.", "sentSegmented": ["then", "i", "assume", "input", "box", "would", "be", "preferred"], "sentSegmentedWithoutStops": ["assume", "input", "box", "would", "preferred"], "sentSegmentedWithoutStopsStemmed": ["assum", "input", "box", "would", "prefer"]}, {"number": 6594, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "It makes sense from the user point of view and it is easy to correct.", "sentSegmented": ["it", "makes", "sense", "from", "the", "user", "point", "of", "view", "and", "it", "is", "easy", "to", "correct"], "sentSegmentedWithoutStops": ["makes", "sense", "user", "point", "view", "easy", "correct"], "sentSegmentedWithoutStopsStemmed": ["make", "sens", "user", "point", "view", "easi", "correct"]}, {"number": 6595, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I implemented exactly this with a little patch in menu.c.", "sentSegmented": ["i", "implemented", "exactly", "this", "with", "a", "little", "patch", "in", "menu.c"], "sentSegmentedWithoutStops": ["implemented", "exactly", "little", "patch", "menu.c"], "sentSegmentedWithoutStopsStemmed": ["implement", "exactli", "littl", "patch", "menu.c"]}, {"number": 6596, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Enjoy!", "sentSegmented": ["enjoy"], "sentSegmentedWithoutStops": ["enjoy"], "sentSegmentedWithoutStopsStemmed": ["enjoy"]}, {"number": 6597, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I know I will.", "sentSegmented": ["i", "know", "i", "will"], "sentSegmentedWithoutStops": ["know"], "sentSegmentedWithoutStopsStemmed": ["know"]}, {"number": 6598, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": ":)", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 6599, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "ctrl-c-patch.txt", "sentSegmented": ["ctrl-c-patch.txt"], "sentSegmentedWithoutStops": ["ctrl-c-patch.txt"], "sentSegmentedWithoutStopsStemmed": ["ctrl-c-patch.txt"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQyOTEwMjM5Ng==", "author": {"login": "rzumer"}, "body": "Even Ctrl+Shift+C often does not work as expected. For example it doesn't seem to work to copy text in the input bar (and neither does Ctrl+C, so the only way to get something to the clipboard from there is to use Ctrl+X!), and sometimes for no discernible reason (loss of focus?) I have to re-select text that is already highlighted in order for copying to work. It's very frustrating from a user's perspective, and I agree that Ctrl+C should work universally, even if it is less elegant from a technical point of view.", "bodyText": "Even Ctrl+Shift+C often does not work as expected. For example it doesn't seem to work to copy text in the input bar (and neither does Ctrl+C, so the only way to get something to the clipboard from there is to use Ctrl+X!), and sometimes for no discernible reason (loss of focus?) I have to re-select text that is already highlighted in order for copying to work. It's very frustrating from a user's perspective, and I agree that Ctrl+C should work universally, even if it is less elegant from a technical point of view.", "bodyHTML": "<p>Even Ctrl+Shift+C often does not work as expected. For example it doesn't seem to work to copy text in the input bar (and neither does Ctrl+C, so the only way to get something to the clipboard from there is to use Ctrl+X!), and sometimes for no discernible reason (loss of focus?) I have to re-select text that is already highlighted in order for copying to work. It's very frustrating from a user's perspective, and I agree that Ctrl+C should work universally, even if it is less elegant from a technical point of view.</p>", "createdAt": "2018-10-11T20:14:58Z", "publishedAt": "2018-10-11T20:14:58Z", "lastEditedAt": "2018-11-20T15:29:49Z", "updatedAt": "2018-11-20T15:29:50Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 6600, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Even Ctrl+Shift+C often does not work as expected.", "sentSegmented": ["even", "ctrl+shift+c", "often", "does", "not", "work", "as", "expected"], "sentSegmentedWithoutStops": ["even", "ctrl+shift+c", "often", "work", "expected"], "sentSegmentedWithoutStopsStemmed": ["even", "ctrl+shift+c", "often", "work", "expect"]}, {"number": 6601, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "For example it doesn't seem to work to copy text in the input bar (and neither does Ctrl+C, so the only way to get something to the clipboard from there is to use Ctrl+X!", "sentSegmented": ["for", "example", "it", "does", "n't", "seem", "to", "work", "to", "copy", "text", "in", "the", "input", "bar", "and", "neither", "does", "ctrl+c", "so", "the", "only", "way", "to", "get", "something", "to", "the", "clipboard", "from", "there", "is", "to", "use", "ctrl+x"], "sentSegmentedWithoutStops": ["example", "n't", "seem", "work", "copy", "text", "input", "bar", "neither", "ctrl+c", "way", "get", "something", "clipboard", "use", "ctrl+x"], "sentSegmentedWithoutStopsStemmed": ["exampl", "n't", "seem", "work", "copi", "text", "input", "bar", "neither", "ctrl+c", "way", "get", "someth", "clipboard", "use", "ctrl+x"]}, {"number": 6602, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "), and sometimes for no discernible reason (loss of focus?)", "sentSegmented": ["and", "sometimes", "for", "no", "discernible", "reason", "loss", "of", "focus"], "sentSegmentedWithoutStops": ["sometimes", "discernible", "reason", "loss", "focus"], "sentSegmentedWithoutStopsStemmed": ["sometim", "discern", "reason", "loss", "focu"]}, {"number": 6603, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I have to re-select text that is already highlighted in order for copying to work.", "sentSegmented": ["i", "have", "to", "re-select", "text", "that", "is", "already", "highlighted", "in", "order", "for", "copying", "to", "work"], "sentSegmentedWithoutStops": ["re-select", "text", "already", "highlighted", "order", "copying", "work"], "sentSegmentedWithoutStopsStemmed": ["re-select", "text", "alreadi", "highlight", "order", "copi", "work"]}, {"number": 6604, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's very frustrating from a user's perspective, and I agree that Ctrl+C should work universally, even if it is less elegant from a technical point of view.", "sentSegmented": ["it", "'s", "very", "frustrating", "from", "a", "user", "'s", "perspective", "and", "i", "agree", "that", "ctrl+c", "should", "work", "universally", "even", "if", "it", "is", "less", "elegant", "from", "a", "technical", "point", "of", "view"], "sentSegmentedWithoutStops": ["'s", "frustrating", "user", "'s", "perspective", "agree", "ctrl+c", "work", "universally", "even", "less", "elegant", "technical", "point", "view"], "sentSegmentedWithoutStopsStemmed": ["'s", "frustrat", "user", "'s", "perspect", "agre", "ctrl+c", "work", "univers", "even", "less", "eleg", "technic", "point", "view"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ0MDEzMzI0Mw==", "author": {"login": "cinderblock"}, "body": "If users want a way to make Ctrl-C work like normal, can't we just add an _option_ to support that?", "bodyText": "If users want a way to make Ctrl-C work like normal, can't we just add an option to support that?", "bodyHTML": "<p>If users want a way to make Ctrl-C work like normal, can't we just add an <em>option</em> to support that?</p>", "createdAt": "2018-11-20T04:23:21Z", "publishedAt": "2018-11-20T04:23:21Z", "lastEditedAt": null, "updatedAt": "2018-11-20T04:23:21Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2020-01-01T15:19:05Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-07T14:16:03Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2021-02-25T14:12:32Z"}}]}, "bodyParsed": [{"number": 6605, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If users want a way to make Ctrl-C work like normal, can't we just add an option to support that?", "sentSegmented": ["if", "users", "want", "a", "way", "to", "make", "ctrl-c", "work", "like", "normal", "ca", "n't", "we", "just", "add", "an", "option", "to", "support", "that"], "sentSegmentedWithoutStops": ["users", "want", "way", "make", "ctrl-c", "work", "like", "normal", "ca", "n't", "add", "option", "support"], "sentSegmentedWithoutStopsStemmed": ["user", "want", "way", "make", "ctrl-c", "work", "like", "normal", "ca", "n't", "add", "option", "support"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHODSKa2Q==", "hasNextPage": true}, "totalCount": 23}, "labels": {"edges": []}, "milestone": null, "reactions": {"edges": []}, "state": "CLOSED", "titleSegmented": ["copying", "from", "hexchat", "does", "not", "work"], "titleSegmentedWithoutStops": ["copying", "hexchat", "work"], "titleSegmentedWithoutStopsStemmed": ["copi", "hexchat", "work"], "bodyParsed": [{"number": 6418, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "When I select some text in HexChat and try to copy it with ctrl+C keystroke, nothing happens and old copied text (or nothing) will remain in paste buffer.", "sentSegmented": ["when", "i", "select", "some", "text", "in", "hexchat", "and", "try", "to", "copy", "it", "with", "ctrl+c", "keystroke", "nothing", "happens", "and", "old", "copied", "text", "or", "nothing", "will", "remain", "in", "paste", "buffer"], "sentSegmentedWithoutStops": ["select", "text", "hexchat", "try", "copy", "ctrl+c", "keystroke", "nothing", "happens", "old", "copied", "text", "nothing", "remain", "paste", "buffer"], "sentSegmentedWithoutStopsStemmed": ["select", "text", "hexchat", "tri", "copi", "ctrl+c", "keystrok", "noth", "happen", "old", "copi", "text", "noth", "remain", "past", "buffer"]}, {"number": 6419, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Version: HexChat 2.10.1 (from Arch Linux package)", "sentSegmented": ["version", "hexchat", "2.10.1", "from", "arch", "linux", "package"], "sentSegmentedWithoutStops": ["version", "hexchat", "2.10.1", "arch", "linux", "package"], "sentSegmentedWithoutStopsStemmed": ["version", "hexchat", "2.10.1", "arch", "linux", "packag"]}, {"number": 6420, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Compiled: Jul 29 2014", "sentSegmented": ["compiled", "jul", "29", "2014"], "sentSegmentedWithoutStops": ["compiled", "jul", "29", "2014"], "sentSegmentedWithoutStopsStemmed": ["compil", "jul", "29", "2014"]}, {"number": 6421, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "OS: Linux 3.16.2-1-ck [x86_64/1,40GHz/SMP]", "sentSegmented": ["os", "linux", "3.16.2-1-ck", "x86_64/1,40ghz/smp"], "sentSegmentedWithoutStops": ["os", "linux", "3.16.2-1-ck", "x86_64/1,40ghz/smp"], "sentSegmentedWithoutStopsStemmed": ["os", "linux", "3.16.2-1-ck", "x86_64/1,40ghz/smp"]}, {"number": 6422, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "OS: Arch Linux x64", "sentSegmented": ["os", "arch", "linux", "x64"], "sentSegmentedWithoutStops": ["os", "arch", "linux", "x64"], "sentSegmentedWithoutStopsStemmed": ["os", "arch", "linux", "x64"]}]}