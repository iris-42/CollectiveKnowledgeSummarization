{"repository": {"owner": {"login": "tensorflow"}, "name": "tensorflow", "forkCount": 84199, "stargazerCount": 153936, "createdAt": "2015-11-07T01:19:20Z", "updatedAt": "2021-03-12T08:52:22Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "tensorflow"}}}, {"node": {"topic": {"name": "machine-learning"}}}, {"node": {"topic": {"name": "python"}}}, {"node": {"topic": {"name": "deep-learning"}}}, {"node": {"topic": {"name": "deep-neural-networks"}}}, {"node": {"topic": {"name": "neural-network"}}}, {"node": {"topic": {"name": "ml"}}}, {"node": {"topic": {"name": "distributed"}}}]}, "languages": {"edges": [{"node": {"name": "Python"}}, {"node": {"name": "C++"}}, {"node": {"name": "C"}}, {"node": {"name": "Java"}}, {"node": {"name": "Shell"}}, {"node": {"name": "Jupyter Notebook"}}, {"node": {"name": "CMake"}}, {"node": {"name": "Makefile"}}, {"node": {"name": "Objective-C"}}, {"node": {"name": "Objective-C++"}}, {"node": {"name": "Go"}}, {"node": {"name": "Batchfile"}}, {"node": {"name": "LLVM"}}, {"node": {"name": "Ruby"}}, {"node": {"name": "Perl"}}, {"node": {"name": "PHP"}}, {"node": {"name": "HTML"}}, {"node": {"name": "Smarty"}}, {"node": {"name": "Dockerfile"}}, {"node": {"name": "C#"}}]}, "primaryLanguage": {"name": "C++"}}, "id": "MDU6SXNzdWU0MzQ3Njg0NTA=", "number": 27955, "author": {"login": "seanpmorgan"}, "title": "TF Nightly 20190418 Crashes on Estimator Import", "body": "<em>Please make sure that this is a bug. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em>\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): **No**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): **Ubuntu 16.04**\r\n- TensorFlow installed from (source or binary): **Binary**\r\n- TensorFlow version (use command below): **tf-nightly-20190418**\r\n- Python version: **3.6**\r\n\r\n**Describe the current behavior**\r\nNightly tensorflow crashes on importing estimator-nightly\r\n\r\n**Describe the expected behavior**\r\nAble to import\r\n\r\n**Code to reproduce the issue**\r\n```\r\npip install tf-nightly==1.14.1.dev20190418\r\nimport tensorflow\r\n```\r\n**Other info / logs**\r\nhttps://colab.research.google.com/drive/1mvVTcAWHwJY1Kko49Ae93iQum6lT9W8D\r\n\r\nCrash:\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-2-64156d691fe5> in <module>()\r\n----> 1 import tensorflow as tf\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/__init__.py in <module>()\r\n     32 from tensorflow._api.v1 import autograph\r\n     33 from tensorflow._api.v1 import bitwise\r\n---> 34 from tensorflow._api.v1 import compat\r\n     35 from tensorflow._api.v1 import config\r\n     36 from tensorflow._api.v1 import data\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/__init__.py in <module>()\r\n     19 from __future__ import print_function as _print_function\r\n     20 \r\n---> 21 from tensorflow._api.v1.compat import v1\r\n     22 from tensorflow._api.v1.compat import v2\r\n     23 from tensorflow.python.compat.compat import forward_compatibility_horizon\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/v1/__init__.py in <module>()\r\n    641     parent_package_str=__name__,\r\n    642     child_package_str=(\r\n--> 643         'tensorflow_estimator.python.estimator.api._v1.estimator'))\r\n    644 _component_api_helper.package_hook(\r\n    645     parent_package_str=__name__,\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/tools/component_api_helper.py in package_hook(parent_package_str, child_package_str, error_msg)\r\n     54   parent_pkg = importlib.import_module(parent_package_str)\r\n     55   try:\r\n---> 56     child_pkg = importlib.import_module(child_package_str)\r\n     57   except ImportError:\r\n     58     if error_msg:\r\n\r\n/usr/lib/python3.6/importlib/__init__.py in import_module(name, package)\r\n    124                 break\r\n    125             level += 1\r\n--> 126     return _bootstrap._gcd_import(name[level:], package, level)\r\n    127 \r\n    128 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/__init__.py in <module>()\r\n      6 from __future__ import print_function as _print_function\r\n      7 \r\n----> 8 from tensorflow_estimator._api.v1 import estimator\r\n      9 _names_with_underscore = []\r\n     10 __all__ = [_s for _s in dir() if not _s.startswith('_')]\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/__init__.py in <module>()\r\n      6 from __future__ import print_function as _print_function\r\n      7 \r\n----> 8 from tensorflow_estimator._api.v1.estimator import experimental\r\n      9 from tensorflow_estimator._api.v1.estimator import export\r\n     10 from tensorflow_estimator._api.v1.estimator import inputs\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/experimental/__init__.py in <module>()\r\n     33 if not isinstance(_sys.modules[__name__], _deprecation_wrapper.DeprecationWrapper):\r\n     34   _sys.modules[__name__] = _deprecation_wrapper.DeprecationWrapper(\r\n---> 35       _sys.modules[__name__], \"estimator.experimental\", _DEPRECATED_TO_CANONICAL)\r\n\r\nTypeError: __init__() takes 3 positional arguments but 4 were given\r\n```", "bodyHTML": "<p><em>Please make sure that this is a bug. As per our <a href=\"https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md\">GitHub Policy</a>, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em></p>\n<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): <strong>No</strong></li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): <strong>Ubuntu 16.04</strong></li>\n<li>TensorFlow installed from (source or binary): <strong>Binary</strong></li>\n<li>TensorFlow version (use command below): <strong>tf-nightly-20190418</strong></li>\n<li>Python version: <strong>3.6</strong></li>\n</ul>\n<p><strong>Describe the current behavior</strong><br>\nNightly tensorflow crashes on importing estimator-nightly</p>\n<p><strong>Describe the expected behavior</strong><br>\nAble to import</p>\n<p><strong>Code to reproduce the issue</strong></p>\n<pre><code>pip install tf-nightly==1.14.1.dev20190418\nimport tensorflow\n</code></pre>\n<p><strong>Other info / logs</strong><br>\n<a rel=\"nofollow\" href=\"https://colab.research.google.com/drive/1mvVTcAWHwJY1Kko49Ae93iQum6lT9W8D\">https://colab.research.google.com/drive/1mvVTcAWHwJY1Kko49Ae93iQum6lT9W8D</a></p>\n<p>Crash:</p>\n<pre><code>TypeError                                 Traceback (most recent call last)\n&lt;ipython-input-2-64156d691fe5&gt; in &lt;module&gt;()\n----&gt; 1 import tensorflow as tf\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/__init__.py in &lt;module&gt;()\n     32 from tensorflow._api.v1 import autograph\n     33 from tensorflow._api.v1 import bitwise\n---&gt; 34 from tensorflow._api.v1 import compat\n     35 from tensorflow._api.v1 import config\n     36 from tensorflow._api.v1 import data\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/__init__.py in &lt;module&gt;()\n     19 from __future__ import print_function as _print_function\n     20 \n---&gt; 21 from tensorflow._api.v1.compat import v1\n     22 from tensorflow._api.v1.compat import v2\n     23 from tensorflow.python.compat.compat import forward_compatibility_horizon\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/v1/__init__.py in &lt;module&gt;()\n    641     parent_package_str=__name__,\n    642     child_package_str=(\n--&gt; 643         'tensorflow_estimator.python.estimator.api._v1.estimator'))\n    644 _component_api_helper.package_hook(\n    645     parent_package_str=__name__,\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/tools/component_api_helper.py in package_hook(parent_package_str, child_package_str, error_msg)\n     54   parent_pkg = importlib.import_module(parent_package_str)\n     55   try:\n---&gt; 56     child_pkg = importlib.import_module(child_package_str)\n     57   except ImportError:\n     58     if error_msg:\n\n/usr/lib/python3.6/importlib/__init__.py in import_module(name, package)\n    124                 break\n    125             level += 1\n--&gt; 126     return _bootstrap._gcd_import(name[level:], package, level)\n    127 \n    128 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/__init__.py in &lt;module&gt;()\n      6 from __future__ import print_function as _print_function\n      7 \n----&gt; 8 from tensorflow_estimator._api.v1 import estimator\n      9 _names_with_underscore = []\n     10 __all__ = [_s for _s in dir() if not _s.startswith('_')]\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/__init__.py in &lt;module&gt;()\n      6 from __future__ import print_function as _print_function\n      7 \n----&gt; 8 from tensorflow_estimator._api.v1.estimator import experimental\n      9 from tensorflow_estimator._api.v1.estimator import export\n     10 from tensorflow_estimator._api.v1.estimator import inputs\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/experimental/__init__.py in &lt;module&gt;()\n     33 if not isinstance(_sys.modules[__name__], _deprecation_wrapper.DeprecationWrapper):\n     34   _sys.modules[__name__] = _deprecation_wrapper.DeprecationWrapper(\n---&gt; 35       _sys.modules[__name__], \"estimator.experimental\", _DEPRECATED_TO_CANONICAL)\n\nTypeError: __init__() takes 3 positional arguments but 4 were given\n</code></pre>", "bodyText": "Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): tf-nightly-20190418\nPython version: 3.6\n\nDescribe the current behavior\nNightly tensorflow crashes on importing estimator-nightly\nDescribe the expected behavior\nAble to import\nCode to reproduce the issue\npip install tf-nightly==1.14.1.dev20190418\nimport tensorflow\n\nOther info / logs\nhttps://colab.research.google.com/drive/1mvVTcAWHwJY1Kko49Ae93iQum6lT9W8D\nCrash:\nTypeError                                 Traceback (most recent call last)\n<ipython-input-2-64156d691fe5> in <module>()\n----> 1 import tensorflow as tf\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/__init__.py in <module>()\n     32 from tensorflow._api.v1 import autograph\n     33 from tensorflow._api.v1 import bitwise\n---> 34 from tensorflow._api.v1 import compat\n     35 from tensorflow._api.v1 import config\n     36 from tensorflow._api.v1 import data\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/__init__.py in <module>()\n     19 from __future__ import print_function as _print_function\n     20 \n---> 21 from tensorflow._api.v1.compat import v1\n     22 from tensorflow._api.v1.compat import v2\n     23 from tensorflow.python.compat.compat import forward_compatibility_horizon\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/v1/__init__.py in <module>()\n    641     parent_package_str=__name__,\n    642     child_package_str=(\n--> 643         'tensorflow_estimator.python.estimator.api._v1.estimator'))\n    644 _component_api_helper.package_hook(\n    645     parent_package_str=__name__,\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/tools/component_api_helper.py in package_hook(parent_package_str, child_package_str, error_msg)\n     54   parent_pkg = importlib.import_module(parent_package_str)\n     55   try:\n---> 56     child_pkg = importlib.import_module(child_package_str)\n     57   except ImportError:\n     58     if error_msg:\n\n/usr/lib/python3.6/importlib/__init__.py in import_module(name, package)\n    124                 break\n    125             level += 1\n--> 126     return _bootstrap._gcd_import(name[level:], package, level)\n    127 \n    128 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/__init__.py in <module>()\n      6 from __future__ import print_function as _print_function\n      7 \n----> 8 from tensorflow_estimator._api.v1 import estimator\n      9 _names_with_underscore = []\n     10 __all__ = [_s for _s in dir() if not _s.startswith('_')]\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/__init__.py in <module>()\n      6 from __future__ import print_function as _print_function\n      7 \n----> 8 from tensorflow_estimator._api.v1.estimator import experimental\n      9 from tensorflow_estimator._api.v1.estimator import export\n     10 from tensorflow_estimator._api.v1.estimator import inputs\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/experimental/__init__.py in <module>()\n     33 if not isinstance(_sys.modules[__name__], _deprecation_wrapper.DeprecationWrapper):\n     34   _sys.modules[__name__] = _deprecation_wrapper.DeprecationWrapper(\n---> 35       _sys.modules[__name__], \"estimator.experimental\", _DEPRECATED_TO_CANONICAL)\n\nTypeError: __init__() takes 3 positional arguments but 4 were given", "assignees": {"edges": [{"node": {"login": "mihaimaruseac"}}]}, "createdAt": "2019-04-18T13:23:11Z", "closed": true, "closedAt": "2019-04-19T14:12:07Z", "lastEditedAt": "2019-04-18T13:23:47Z", "publishedAt": "2019-04-18T13:23:11Z", "comments": {"edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDU1NDQxMg==", "author": {"login": "krutartha"}, "body": "I have the same error while using tensorflowjs converter!", "bodyText": "I have the same error while using tensorflowjs converter!", "bodyHTML": "<p>I have the same error while using tensorflowjs converter!</p>", "createdAt": "2019-04-18T15:15:39Z", "publishedAt": "2019-04-18T15:15:39Z", "lastEditedAt": null, "updatedAt": "2019-04-18T15:15:39Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 93138, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I have the same error while using tensorflowjs converter!", "sentSegmented": ["i", "have", "the", "same", "error", "while", "using", "tensorflowjs", "converter"], "sentSegmentedWithoutStops": ["error", "using", "tensorflowjs", "converter"], "sentSegmentedWithoutStopsStemmed": ["error", "use", "tensorflowj", "convert"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDU2NDI3Ng==", "author": {"login": "villeh1"}, "body": "I saw the same issue. Wonder why build process did not catch this issue?", "bodyText": "I saw the same issue. Wonder why build process did not catch this issue?", "bodyHTML": "<p>I saw the same issue. Wonder why build process did not catch this issue?</p>", "createdAt": "2019-04-18T15:35:42Z", "publishedAt": "2019-04-18T15:35:42Z", "lastEditedAt": null, "updatedAt": "2019-04-18T15:35:42Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 93139, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I saw the same issue.", "sentSegmented": ["i", "saw", "the", "same", "issue"], "sentSegmentedWithoutStops": ["saw", "issue"], "sentSegmentedWithoutStopsStemmed": ["saw", "issu"]}, {"number": 93140, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Wonder why build process did not catch this issue?", "sentSegmented": ["wonder", "why", "build", "process", "did", "not", "catch", "this", "issue"], "sentSegmentedWithoutStops": ["wonder", "build", "process", "catch", "issue"], "sentSegmentedWithoutStopsStemmed": ["wonder", "build", "process", "catch", "issu"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDU3NTA2Nw==", "author": {"login": "kaeflint"}, "body": "I had thesame problem. For now installing an older version such as: \r\npip install -q tf-nightly-gpu-2.0-preview==2.0.0.dev20190416\r\nsolved allowed me to run my models. ", "bodyText": "I had thesame problem. For now installing an older version such as:\npip install -q tf-nightly-gpu-2.0-preview==2.0.0.dev20190416\nsolved allowed me to run my models.", "bodyHTML": "<p>I had thesame problem. For now installing an older version such as:<br>\npip install -q tf-nightly-gpu-2.0-preview==2.0.0.dev20190416<br>\nsolved allowed me to run my models.</p>", "createdAt": "2019-04-18T16:06:00Z", "publishedAt": "2019-04-18T16:06:00Z", "lastEditedAt": null, "updatedAt": "2019-04-18T16:06:00Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 93141, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I had thesame problem.", "sentSegmented": ["i", "had", "thesame", "problem"], "sentSegmentedWithoutStops": ["thesame", "problem"], "sentSegmentedWithoutStopsStemmed": ["thesam", "problem"]}, {"number": 93142, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "For now installing an older version such as:", "sentSegmented": ["for", "now", "installing", "an", "older", "version", "such", "as"], "sentSegmentedWithoutStops": ["installing", "older", "version"], "sentSegmentedWithoutStopsStemmed": ["instal", "older", "version"]}, {"number": 93143, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "pip install -q tf-nightly-gpu-2.0-preview==2.0.0.dev20190416", "sentSegmented": ["pip", "install", "-q", "tf-nightly-gpu-2.0-preview==2.0.0.dev20190416"], "sentSegmentedWithoutStops": ["pip", "install", "-q", "tf-nightly-gpu-2.0-preview==2.0.0.dev20190416"], "sentSegmentedWithoutStopsStemmed": ["pip", "instal", "-q", "tf-nightly-gpu-2.0-preview==2.0.0.dev20190416"]}, {"number": 93144, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "solved allowed me to run my models.", "sentSegmented": ["solved", "allowed", "me", "to", "run", "my", "models"], "sentSegmentedWithoutStops": ["solved", "allowed", "run", "models"], "sentSegmentedWithoutStopsStemmed": ["solv", "allow", "run", "model"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDU3NjExMg==", "author": {"login": "drewszurko"}, "body": "I have the same issue on macOS.\r\n\r\n**System information**\r\n\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): **No**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): **macOS 10.14.4**\r\n- TensorFlow installed from (source or binary): **binary**\r\n- TensorFlow version (use command below): **tf-nightly-2.0-preview==2.0.0.dev20190418**\r\n- Python version: **3.6.8**", "bodyText": "I have the same issue on macOS.\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.14.4\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): tf-nightly-2.0-preview==2.0.0.dev20190418\nPython version: 3.6.8", "bodyHTML": "<p>I have the same issue on macOS.</p>\n<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): <strong>No</strong></li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): <strong>macOS 10.14.4</strong></li>\n<li>TensorFlow installed from (source or binary): <strong>binary</strong></li>\n<li>TensorFlow version (use command below): <strong>tf-nightly-2.0-preview==2.0.0.dev20190418</strong></li>\n<li>Python version: <strong>3.6.8</strong></li>\n</ul>", "createdAt": "2019-04-18T16:09:11Z", "publishedAt": "2019-04-18T16:09:11Z", "lastEditedAt": "2019-04-18T16:36:37Z", "updatedAt": "2019-04-18T16:36:37Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 93145, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I have the same issue on macOS.", "sentSegmented": ["i", "have", "the", "same", "issue", "on", "macos"], "sentSegmentedWithoutStops": ["issue", "macos"], "sentSegmentedWithoutStopsStemmed": ["issu", "maco"]}, {"number": 93146, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "System information", "sentSegmented": ["system", "information"], "sentSegmentedWithoutStops": ["system", "information"], "sentSegmentedWithoutStopsStemmed": ["system", "inform"]}, {"number": 93147, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No", "sentSegmented": ["have", "i", "written", "custom", "code", "as", "opposed", "to", "using", "a", "stock", "example", "script", "provided", "in", "tensorflow", "no"], "sentSegmentedWithoutStops": ["written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "tensorflow"], "sentSegmentedWithoutStopsStemmed": ["written", "custom", "code", "oppos", "use", "stock", "exampl", "script", "provid", "tensorflow"]}, {"number": 93148, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.14.4", "sentSegmented": ["os", "platform", "and", "distribution", "e.g.", "linux", "ubuntu", "16.04", "macos", "10.14.4"], "sentSegmentedWithoutStops": ["os", "platform", "distribution", "e.g.", "linux", "ubuntu", "16.04", "macos", "10.14.4"], "sentSegmentedWithoutStopsStemmed": ["os", "platform", "distribut", "e.g.", "linux", "ubuntu", "16.04", "maco", "10.14.4"]}, {"number": 93149, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "TensorFlow installed from (source or binary): binary", "sentSegmented": ["tensorflow", "installed", "from", "source", "or", "binary", "binary"], "sentSegmentedWithoutStops": ["tensorflow", "installed", "source", "binary", "binary"], "sentSegmentedWithoutStopsStemmed": ["tensorflow", "instal", "sourc", "binari", "binari"]}, {"number": 93150, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "TensorFlow version (use command below): tf-nightly-2.0-preview==2.0.0.dev20190418", "sentSegmented": ["tensorflow", "version", "use", "command", "below", "tf-nightly-2.0-preview==2.0.0.dev20190418"], "sentSegmentedWithoutStops": ["tensorflow", "version", "use", "command", "tf-nightly-2.0-preview==2.0.0.dev20190418"], "sentSegmentedWithoutStopsStemmed": ["tensorflow", "version", "use", "command", "tf-nightly-2.0-preview==2.0.0.dev20190418"]}, {"number": 93151, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Python version: 3.6.8", "sentSegmented": ["python", "version", "3.6.8"], "sentSegmentedWithoutStops": ["python", "version", "3.6.8"], "sentSegmentedWithoutStopsStemmed": ["python", "version", "3.6.8"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDU3ODQxMw==", "author": {"login": "mihaimaruseac"}, "body": "It's been already fixed by https://github.com/tensorflow/tensorflow/commit/e84d155152ab5a187d2c0e4c5eea6a73df3789e1 but the nightly process for estimator ran with the code before this commit and the nightly process for tensorflow ran with the code after.", "bodyText": "It's been already fixed by e84d155 but the nightly process for estimator ran with the code before this commit and the nightly process for tensorflow ran with the code after.", "bodyHTML": "<p>It's been already fixed by <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/e84d155152ab5a187d2c0e4c5eea6a73df3789e1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/e84d155152ab5a187d2c0e4c5eea6a73df3789e1\"><tt>e84d155</tt></a> but the nightly process for estimator ran with the code before this commit and the nightly process for tensorflow ran with the code after.</p>", "createdAt": "2019-04-18T16:16:04Z", "publishedAt": "2019-04-18T16:16:04Z", "lastEditedAt": null, "updatedAt": "2019-04-18T16:16:04Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-04-18T16:16:20Z"}}]}, "bodyParsed": [{"number": 93152, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's been already fixed by e84d155 but the nightly process for estimator ran with the code before this commit and the nightly process for tensorflow ran with the code after.", "sentSegmented": ["it", "'s", "been", "already", "fixed", "by", "e84d155", "but", "the", "nightly", "process", "for", "estimator", "ran", "with", "the", "code", "before", "this", "commit", "and", "the", "nightly", "process", "for", "tensorflow", "ran", "with", "the", "code", "after"], "sentSegmentedWithoutStops": ["'s", "already", "fixed", "e84d155", "nightly", "process", "estimator", "ran", "code", "commit", "nightly", "process", "tensorflow", "ran", "code"], "sentSegmentedWithoutStopsStemmed": ["'s", "alreadi", "fix", "e84d155", "nightli", "process", "estim", "ran", "code", "commit", "nightli", "process", "tensorflow", "ran", "code"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDU3OTEwNg==", "author": {"login": "mihaimaruseac"}, "body": "For now, if you want a quick fix, you can edit the `tensorflow/python/util/deprecation_wrapper.py` file to have:\r\n\r\n```python\r\nclass DeprecationWrapper(types.ModuleType):\r\n  \"\"\"Wrapper for TensorFlow modules to support deprecation messages.\"\"\"\r\n\r\n  def __init__(self, wrapped, module_name, _unused_arg={}):  # pylint: disable=super-on-old-class\r\n```\r\n\r\n(just add the `_unused_arg={}` argument). Though this is just patching, and will have to be undone on the next nightly.", "bodyText": "For now, if you want a quick fix, you can edit the tensorflow/python/util/deprecation_wrapper.py file to have:\nclass DeprecationWrapper(types.ModuleType):\n  \"\"\"Wrapper for TensorFlow modules to support deprecation messages.\"\"\"\n\n  def __init__(self, wrapped, module_name, _unused_arg={}):  # pylint: disable=super-on-old-class\n(just add the _unused_arg={} argument). Though this is just patching, and will have to be undone on the next nightly.", "bodyHTML": "<p>For now, if you want a quick fix, you can edit the <code>tensorflow/python/util/deprecation_wrapper.py</code> file to have:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">DeprecationWrapper</span>(<span class=\"pl-s1\">types</span>.<span class=\"pl-v\">ModuleType</span>):\n  <span class=\"pl-s\">\"\"\"Wrapper for TensorFlow modules to support deprecation messages.\"\"\"</span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">__init__</span>(<span class=\"pl-s1\">self</span>, <span class=\"pl-s1\">wrapped</span>, <span class=\"pl-s1\">module_name</span>, <span class=\"pl-s1\">_unused_arg</span><span class=\"pl-c1\">=</span>{}):  <span class=\"pl-c\"># pylint: disable=super-on-old-class</span></pre></div>\n<p>(just add the <code>_unused_arg={}</code> argument). Though this is just patching, and will have to be undone on the next nightly.</p>", "createdAt": "2019-04-18T16:18:13Z", "publishedAt": "2019-04-18T16:18:13Z", "lastEditedAt": null, "updatedAt": "2019-04-18T16:18:13Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 93153, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "For now, if you want a quick fix, you can edit the tensorflow/python/util/deprecation_wrapper.py file to have:", "sentSegmented": ["for", "now", "if", "you", "want", "a", "quick", "fix", "you", "can", "edit", "the", "tensorflow/python/util/deprecation_wrapper.py", "file", "to", "have"], "sentSegmentedWithoutStops": ["want", "quick", "fix", "edit", "tensorflow/python/util/deprecation_wrapper.py", "file"], "sentSegmentedWithoutStopsStemmed": ["want", "quick", "fix", "edit", "tensorflow/python/util/deprecation_wrapper.pi", "file"]}, {"number": 93154, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "class DeprecationWrapper(types.ModuleType):", "sentSegmented": ["class", "deprecationwrapper", "types.moduletype"], "sentSegmentedWithoutStops": ["deprecationwrapper", "types.moduletype"], "sentSegmentedWithoutStopsStemmed": ["deprecationwrapp", "types.moduletyp"]}, {"number": 93155, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  \"\"\"Wrapper for TensorFlow modules to support deprecation messages.\"\"\"", "sentSegmented": ["wrapper", "for", "tensorflow", "modules", "to", "support", "deprecation", "messages"], "sentSegmentedWithoutStops": ["wrapper", "tensorflow", "modules", "support", "deprecation", "messages"], "sentSegmentedWithoutStopsStemmed": ["wrapper", "tensorflow", "modul", "support", "deprec", "messag"]}, {"number": 93156, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  def __init__(self, wrapped, module_name, _unused_arg={}):  # pylint: disable=super-on-old-class", "sentSegmented": ["def", "__init__", "self", "wrapped", "module_name", "_unused_arg=", "pylint", "disable=super-on-old-class"], "sentSegmentedWithoutStops": ["__init__", "wrapped", "module_name", "_unused_arg=", "pylint", "disable=super-on-old-class"], "sentSegmentedWithoutStopsStemmed": ["__init__", "wrap", "module_nam", "_unused_arg=", "pylint", "disable=super-on-old-class"]}, {"number": 93157, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(just add the _unused_arg={} argument).", "sentSegmented": ["just", "add", "the", "_unused_arg=", "argument"], "sentSegmentedWithoutStops": ["add", "_unused_arg=", "argument"], "sentSegmentedWithoutStopsStemmed": ["add", "_unused_arg=", "argument"]}, {"number": 93158, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Though this is just patching, and will have to be undone on the next nightly.", "sentSegmented": ["though", "this", "is", "just", "patching", "and", "will", "have", "to", "be", "undone", "on", "the", "next", "nightly"], "sentSegmentedWithoutStops": ["though", "patching", "undone", "next", "nightly"], "sentSegmentedWithoutStopsStemmed": ["though", "patch", "undon", "next", "nightli"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDU4Mzg2MQ==", "author": {"login": "qlzh727"}, "body": "Can we rerun the nightly process for estimator so that user don't have to patch and revert? Also since most of library rely on tf from PIP install, which is hard to patch every time.", "bodyText": "Can we rerun the nightly process for estimator so that user don't have to patch and revert? Also since most of library rely on tf from PIP install, which is hard to patch every time.", "bodyHTML": "<p>Can we rerun the nightly process for estimator so that user don't have to patch and revert? Also since most of library rely on tf from PIP install, which is hard to patch every time.</p>", "createdAt": "2019-04-18T16:32:34Z", "publishedAt": "2019-04-18T16:32:34Z", "lastEditedAt": null, "updatedAt": "2019-04-18T16:32:34Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 93159, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Can we rerun the nightly process for estimator so that user don't have to patch and revert?", "sentSegmented": ["can", "we", "rerun", "the", "nightly", "process", "for", "estimator", "so", "that", "user", "do", "n't", "have", "to", "patch", "and", "revert"], "sentSegmentedWithoutStops": ["rerun", "nightly", "process", "estimator", "user", "n't", "patch", "revert"], "sentSegmentedWithoutStopsStemmed": ["rerun", "nightli", "process", "estim", "user", "n't", "patch", "revert"]}, {"number": 93160, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Also since most of library rely on tf from PIP install, which is hard to patch every time.", "sentSegmented": ["also", "since", "most", "of", "library", "rely", "on", "tf", "from", "pip", "install", "which", "is", "hard", "to", "patch", "every", "time"], "sentSegmentedWithoutStops": ["also", "since", "library", "rely", "tf", "pip", "install", "hard", "patch", "every", "time"], "sentSegmentedWithoutStopsStemmed": ["also", "sinc", "librari", "reli", "tf", "pip", "instal", "hard", "patch", "everi", "time"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDU5NjA2Mw==", "author": {"login": "mihaimaruseac"}, "body": "Unfortunately if we launch the nightly process now we will have issues with automatic tooling on the next nightly, so probably it's better to either patch or use an older nightly.", "bodyText": "Unfortunately if we launch the nightly process now we will have issues with automatic tooling on the next nightly, so probably it's better to either patch or use an older nightly.", "bodyHTML": "<p>Unfortunately if we launch the nightly process now we will have issues with automatic tooling on the next nightly, so probably it's better to either patch or use an older nightly.</p>", "createdAt": "2019-04-18T17:11:00Z", "publishedAt": "2019-04-18T17:11:00Z", "lastEditedAt": null, "updatedAt": "2019-04-18T17:11:00Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 93161, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Unfortunately if we launch the nightly process now we will have issues with automatic tooling on the next nightly, so probably it's better to either patch or use an older nightly.", "sentSegmented": ["unfortunately", "if", "we", "launch", "the", "nightly", "process", "now", "we", "will", "have", "issues", "with", "automatic", "tooling", "on", "the", "next", "nightly", "so", "probably", "it", "'s", "better", "to", "either", "patch", "or", "use", "an", "older", "nightly"], "sentSegmentedWithoutStops": ["unfortunately", "launch", "nightly", "process", "issues", "automatic", "tooling", "next", "nightly", "probably", "'s", "better", "either", "patch", "use", "older", "nightly"], "sentSegmentedWithoutStopsStemmed": ["unfortun", "launch", "nightli", "process", "issu", "automat", "tool", "next", "nightli", "probabl", "'s", "better", "either", "patch", "use", "older", "nightli"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NDkwNzcxMg==", "author": {"login": "seanpmorgan"}, "body": "Fixed in 20190419 nightly. Thanks!", "bodyText": "Fixed in 20190419 nightly. Thanks!", "bodyHTML": "<p>Fixed in 20190419 nightly. Thanks!</p>", "createdAt": "2019-04-19T14:12:06Z", "publishedAt": "2019-04-19T14:12:06Z", "lastEditedAt": null, "updatedAt": "2019-04-19T14:12:06Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 93162, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Fixed in 20190419 nightly.", "sentSegmented": ["fixed", "in", "20190419", "nightly"], "sentSegmentedWithoutStops": ["fixed", "20190419", "nightly"], "sentSegmentedWithoutStopsStemmed": ["fix", "20190419", "nightli"]}, {"number": 93163, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks!", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOHOcawA==", "hasNextPage": false}, "totalCount": 9}, "labels": {"edges": []}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-04-18T15:20:35Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-18T15:33:56Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-21T21:01:24Z"}}]}, "state": "CLOSED", "titleSegmented": ["tf", "nightly", "20190418", "crashes", "on", "estimator", "import"], "titleSegmentedWithoutStops": ["tf", "nightly", "20190418", "crashes", "estimator", "import"], "titleSegmentedWithoutStopsStemmed": ["tf", "nightli", "20190418", "crash", "estim", "import"], "bodyParsed": [{"number": 93069, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Please make sure that this is a bug.", "sentSegmented": ["please", "make", "sure", "that", "this", "is", "a", "bug"], "sentSegmentedWithoutStops": ["please", "make", "sure", "bug"], "sentSegmentedWithoutStopsStemmed": ["pleas", "make", "sure", "bug"]}, {"number": 93070, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub.", "sentSegmented": ["as", "per", "our", "github", "policy", "we", "only", "address", "code/doc", "bugs", "performance", "issues", "feature", "requests", "and", "build/installation", "issues", "on", "github"], "sentSegmentedWithoutStops": ["per", "github", "policy", "address", "code/doc", "bugs", "performance", "issues", "feature", "requests", "build/installation", "issues", "github"], "sentSegmentedWithoutStopsStemmed": ["per", "github", "polici", "address", "code/doc", "bug", "perform", "issu", "featur", "request", "build/instal", "issu", "github"]}, {"number": 93071, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "tag:bug_template", "sentSegmented": ["tag", "bug_template"], "sentSegmentedWithoutStops": ["tag", "bug_template"], "sentSegmentedWithoutStopsStemmed": ["tag", "bug_templ"]}, {"number": 93072, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "System information", "sentSegmented": ["system", "information"], "sentSegmentedWithoutStops": ["system", "information"], "sentSegmentedWithoutStopsStemmed": ["system", "inform"]}, {"number": 93073, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No", "sentSegmented": ["have", "i", "written", "custom", "code", "as", "opposed", "to", "using", "a", "stock", "example", "script", "provided", "in", "tensorflow", "no"], "sentSegmentedWithoutStops": ["written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "tensorflow"], "sentSegmentedWithoutStopsStemmed": ["written", "custom", "code", "oppos", "use", "stock", "exampl", "script", "provid", "tensorflow"]}, {"number": 93074, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04", "sentSegmented": ["os", "platform", "and", "distribution", "e.g.", "linux", "ubuntu", "16.04", "ubuntu", "16.04"], "sentSegmentedWithoutStops": ["os", "platform", "distribution", "e.g.", "linux", "ubuntu", "16.04", "ubuntu", "16.04"], "sentSegmentedWithoutStopsStemmed": ["os", "platform", "distribut", "e.g.", "linux", "ubuntu", "16.04", "ubuntu", "16.04"]}, {"number": 93075, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "TensorFlow installed from (source or binary): Binary", "sentSegmented": ["tensorflow", "installed", "from", "source", "or", "binary", "binary"], "sentSegmentedWithoutStops": ["tensorflow", "installed", "source", "binary", "binary"], "sentSegmentedWithoutStopsStemmed": ["tensorflow", "instal", "sourc", "binari", "binari"]}, {"number": 93076, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "TensorFlow version (use command below): tf-nightly-20190418", "sentSegmented": ["tensorflow", "version", "use", "command", "below", "tf-nightly-20190418"], "sentSegmentedWithoutStops": ["tensorflow", "version", "use", "command", "tf-nightly-20190418"], "sentSegmentedWithoutStopsStemmed": ["tensorflow", "version", "use", "command", "tf-nightly-20190418"]}, {"number": 93077, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Python version: 3.6", "sentSegmented": ["python", "version", "3.6"], "sentSegmentedWithoutStops": ["python", "version", "3.6"], "sentSegmentedWithoutStopsStemmed": ["python", "version", "3.6"]}, {"number": 93078, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Describe the current behavior", "sentSegmented": ["describe", "the", "current", "behavior"], "sentSegmentedWithoutStops": ["describe", "current", "behavior"], "sentSegmentedWithoutStopsStemmed": ["describ", "current", "behavior"]}, {"number": 93079, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Nightly tensorflow crashes on importing estimator-nightly", "sentSegmented": ["nightly", "tensorflow", "crashes", "on", "importing", "estimator-nightly"], "sentSegmentedWithoutStops": ["nightly", "tensorflow", "crashes", "importing", "estimator-nightly"], "sentSegmentedWithoutStopsStemmed": ["nightli", "tensorflow", "crash", "import", "estimator-nightli"]}, {"number": 93080, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Describe the expected behavior", "sentSegmented": ["describe", "the", "expected", "behavior"], "sentSegmentedWithoutStops": ["describe", "expected", "behavior"], "sentSegmentedWithoutStopsStemmed": ["describ", "expect", "behavior"]}, {"number": 93081, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Able to import", "sentSegmented": ["able", "to", "import"], "sentSegmentedWithoutStops": ["able", "import"], "sentSegmentedWithoutStopsStemmed": ["abl", "import"]}, {"number": 93082, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Code to reproduce the issue", "sentSegmented": ["code", "to", "reproduce", "the", "issue"], "sentSegmentedWithoutStops": ["code", "reproduce", "issue"], "sentSegmentedWithoutStopsStemmed": ["code", "reproduc", "issu"]}, {"number": 93083, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "pip install tf-nightly==1.14.1.dev20190418", "sentSegmented": ["pip", "install", "tf-nightly==1.14.1.dev20190418"], "sentSegmentedWithoutStops": ["pip", "tf-nightly==1.14.1.dev20190418"], "sentSegmentedWithoutStopsStemmed": ["pip", "tf-nightly==1.14.1.dev20190418"]}, {"number": 93084, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "import tensorflow", "sentSegmented": ["import", "tensorflow"], "sentSegmentedWithoutStops": ["tensorflow"], "sentSegmentedWithoutStopsStemmed": ["tensorflow"]}, {"number": 93085, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Other info / logs", "sentSegmented": ["other", "info", "logs"], "sentSegmentedWithoutStops": ["info", "logs"], "sentSegmentedWithoutStopsStemmed": ["info", "log"]}, {"number": 93086, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "https://colab.research.google.com/drive/1mvVTcAWHwJY1Kko49Ae93iQum6lT9W8D", "sentSegmented": ["https", "//colab.research.google.com/drive/1mvvtcawhwjy1kko49ae93iqum6lt9w8d"], "sentSegmentedWithoutStops": ["https", "//colab.research.google.com/drive/1mvvtcawhwjy1kko49ae93iqum6lt9w8d"], "sentSegmentedWithoutStopsStemmed": ["http", "//colab.research.google.com/drive/1mvvtcawhwjy1kko49ae93iqum6lt9w8d"]}, {"number": 93087, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Crash:", "sentSegmented": ["crash"], "sentSegmentedWithoutStops": ["crash"], "sentSegmentedWithoutStopsStemmed": ["crash"]}, {"number": 93088, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "TypeError                                 Traceback (most recent call last)", "sentSegmented": ["typeerror", "traceback", "most", "recent", "call", "last"], "sentSegmentedWithoutStops": ["typeerror", "traceback", "recent", "last"], "sentSegmentedWithoutStopsStemmed": ["typeerror", "traceback", "recent", "last"]}, {"number": 93089, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " in ()", "sentSegmented": ["in"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 93090, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "----> 1 import tensorflow as tf", "sentSegmented": ["1", "import", "tensorflow", "as", "tf"], "sentSegmentedWithoutStops": ["1", "tensorflow", "tf"], "sentSegmentedWithoutStopsStemmed": ["1", "tensorflow", "tf"]}, {"number": 93091, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/usr/local/lib/python3.6/dist-packages/tensorflow/__init__.py in ()", "sentSegmented": ["/usr/local/lib/python3.6/dist-packages/tensorflow/__init__.py", "in"], "sentSegmentedWithoutStops": ["/usr/local/lib/python3.6/dist-packages/tensorflow/__init__.py"], "sentSegmentedWithoutStopsStemmed": ["/usr/local/lib/python3.6/dist-packages/tensorflow/__init__.pi"]}, {"number": 93092, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     32 from tensorflow._api.v1 import autograph", "sentSegmented": ["32", "from", "tensorflow._api.v1", "import", "autograph"], "sentSegmentedWithoutStops": ["32", "tensorflow._api.v1", "autograph"], "sentSegmentedWithoutStopsStemmed": ["32", "tensorflow._api.v1", "autograph"]}, {"number": 93093, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     33 from tensorflow._api.v1 import bitwise", "sentSegmented": ["33", "from", "tensorflow._api.v1", "import", "bitwise"], "sentSegmentedWithoutStops": ["33", "tensorflow._api.v1", "bitwise"], "sentSegmentedWithoutStopsStemmed": ["33", "tensorflow._api.v1", "bitwis"]}, {"number": 93094, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "---> 34 from tensorflow._api.v1 import compat", "sentSegmented": ["34", "from", "tensorflow._api.v1", "import", "compat"], "sentSegmentedWithoutStops": ["34", "tensorflow._api.v1", "compat"], "sentSegmentedWithoutStopsStemmed": ["34", "tensorflow._api.v1", "compat"]}, {"number": 93095, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     35 from tensorflow._api.v1 import config", "sentSegmented": ["35", "from", "tensorflow._api.v1", "import", "config"], "sentSegmentedWithoutStops": ["35", "tensorflow._api.v1", "config"], "sentSegmentedWithoutStopsStemmed": ["35", "tensorflow._api.v1", "config"]}, {"number": 93096, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     36 from tensorflow._api.v1 import data", "sentSegmented": ["36", "from", "tensorflow._api.v1", "import", "data"], "sentSegmentedWithoutStops": ["36", "tensorflow._api.v1", "data"], "sentSegmentedWithoutStopsStemmed": ["36", "tensorflow._api.v1", "data"]}, {"number": 93097, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/__init__.py in ()", "sentSegmented": ["/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/__init__.py", "in"], "sentSegmentedWithoutStops": ["/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/__init__.py"], "sentSegmentedWithoutStopsStemmed": ["/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/__init__.pi"]}, {"number": 93098, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     19 from __future__ import print_function as _print_function", "sentSegmented": ["19", "from", "__future__", "import", "print_function", "as", "_print_function"], "sentSegmentedWithoutStops": ["19", "__future__", "print_function", "_print_function"], "sentSegmentedWithoutStopsStemmed": ["19", "__future__", "print_funct", "_print_funct"]}, {"number": 93099, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     20 ", "sentSegmented": ["20"], "sentSegmentedWithoutStops": ["20"], "sentSegmentedWithoutStopsStemmed": ["20"]}, {"number": 93100, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "---> 21 from tensorflow._api.v1.compat import v1", "sentSegmented": ["21", "from", "tensorflow._api.v1.compat", "import", "v1"], "sentSegmentedWithoutStops": ["21", "tensorflow._api.v1.compat", "v1"], "sentSegmentedWithoutStopsStemmed": ["21", "tensorflow._api.v1.compat", "v1"]}, {"number": 93101, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     22 from tensorflow._api.v1.compat import v2", "sentSegmented": ["22", "from", "tensorflow._api.v1.compat", "import", "v2"], "sentSegmentedWithoutStops": ["22", "tensorflow._api.v1.compat", "v2"], "sentSegmentedWithoutStopsStemmed": ["22", "tensorflow._api.v1.compat", "v2"]}, {"number": 93102, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     23 from tensorflow.python.compat.compat import forward_compatibility_horizon", "sentSegmented": ["23", "from", "tensorflow.python.compat.compat", "import", "forward_compatibility_horizon"], "sentSegmentedWithoutStops": ["23", "tensorflow.python.compat.compat", "forward_compatibility_horizon"], "sentSegmentedWithoutStopsStemmed": ["23", "tensorflow.python.compat.compat", "forward_compatibility_horizon"]}, {"number": 93103, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/v1/__init__.py in ()", "sentSegmented": ["/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/v1/__init__.py", "in"], "sentSegmentedWithoutStops": ["/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/v1/__init__.py"], "sentSegmentedWithoutStopsStemmed": ["/usr/local/lib/python3.6/dist-packages/tensorflow/_api/v1/compat/v1/__init__.pi"]}, {"number": 93104, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    641     parent_package_str=__name__,", "sentSegmented": ["641", "parent_package_str=__name__"], "sentSegmentedWithoutStops": ["641", "parent_package_str=__name__"], "sentSegmentedWithoutStopsStemmed": ["641", "parent_package_str=__name__"]}, {"number": 93105, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    642     child_package_str=(", "sentSegmented": ["642", "child_package_str="], "sentSegmentedWithoutStops": ["642", "child_package_str="], "sentSegmentedWithoutStopsStemmed": ["642", "child_package_str="]}, {"number": 93106, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "--> 643         'tensorflow_estimator.python.estimator.api._v1.estimator'))", "sentSegmented": ["643", "'tensorflow_estimator.python.estimator.api._v1.estimator"], "sentSegmentedWithoutStops": ["643", "'tensorflow_estimator.python.estimator.api._v1.estimator"], "sentSegmentedWithoutStopsStemmed": ["643", "'tensorflow_estimator.python.estimator.api._v1.estim"]}, {"number": 93107, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    644 _component_api_helper.package_hook(", "sentSegmented": ["644", "_component_api_helper.package_hook"], "sentSegmentedWithoutStops": ["644", "_component_api_helper.package_hook"], "sentSegmentedWithoutStopsStemmed": ["644", "_component_api_helper.package_hook"]}, {"number": 93108, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    645     parent_package_str=__name__,", "sentSegmented": ["645", "parent_package_str=__name__"], "sentSegmentedWithoutStops": ["645", "parent_package_str=__name__"], "sentSegmentedWithoutStopsStemmed": ["645", "parent_package_str=__name__"]}, {"number": 93109, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/usr/local/lib/python3.6/dist-packages/tensorflow/python/tools/component_api_helper.py in package_hook(parent_package_str, child_package_str, error_msg)", "sentSegmented": ["/usr/local/lib/python3.6/dist-packages/tensorflow/python/tools/component_api_helper.py", "in", "package_hook", "parent_package_str", "child_package_str", "error_msg"], "sentSegmentedWithoutStops": ["/usr/local/lib/python3.6/dist-packages/tensorflow/python/tools/component_api_helper.py", "package_hook", "parent_package_str", "child_package_str", "error_msg"], "sentSegmentedWithoutStopsStemmed": ["/usr/local/lib/python3.6/dist-packages/tensorflow/python/tools/component_api_helper.pi", "package_hook", "parent_package_str", "child_package_str", "error_msg"]}, {"number": 93110, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     54   parent_pkg = importlib.import_module(parent_package_str)", "sentSegmented": ["54", "parent_pkg", "importlib.import_module", "parent_package_str"], "sentSegmentedWithoutStops": ["54", "parent_pkg", "importlib.import_module", "parent_package_str"], "sentSegmentedWithoutStopsStemmed": ["54", "parent_pkg", "importlib.import_modul", "parent_package_str"]}, {"number": 93111, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     55   try:", "sentSegmented": ["55", "try"], "sentSegmentedWithoutStops": ["55"], "sentSegmentedWithoutStopsStemmed": ["55"]}, {"number": 93112, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "---> 56     child_pkg = importlib.import_module(child_package_str)", "sentSegmented": ["56", "child_pkg", "importlib.import_module", "child_package_str"], "sentSegmentedWithoutStops": ["56", "child_pkg", "importlib.import_module", "child_package_str"], "sentSegmentedWithoutStopsStemmed": ["56", "child_pkg", "importlib.import_modul", "child_package_str"]}, {"number": 93113, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     57   except ImportError:", "sentSegmented": ["57", "except", "importerror"], "sentSegmentedWithoutStops": ["57", "importerror"], "sentSegmentedWithoutStopsStemmed": ["57", "importerror"]}, {"number": 93114, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     58     if error_msg:", "sentSegmented": ["58", "if", "error_msg"], "sentSegmentedWithoutStops": ["58", "error_msg"], "sentSegmentedWithoutStopsStemmed": ["58", "error_msg"]}, {"number": 93115, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/usr/lib/python3.6/importlib/__init__.py in import_module(name, package)", "sentSegmented": ["/usr/lib/python3.6/importlib/__init__.py", "in", "import_module", "name", "package"], "sentSegmentedWithoutStops": ["/usr/lib/python3.6/importlib/__init__.py", "import_module", "name"], "sentSegmentedWithoutStopsStemmed": ["/usr/lib/python3.6/importlib/__init__.pi", "import_modul", "name"]}, {"number": 93116, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    124                 break", "sentSegmented": ["124", "break"], "sentSegmentedWithoutStops": ["124"], "sentSegmentedWithoutStopsStemmed": ["124"]}, {"number": 93117, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    125             level += 1", "sentSegmented": ["125", "level", "1"], "sentSegmentedWithoutStops": ["125", "level", "1"], "sentSegmentedWithoutStopsStemmed": ["125", "level", "1"]}, {"number": 93118, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "--> 126     return _bootstrap._gcd_import(name[level:], package, level)", "sentSegmented": ["126", "return", "_bootstrap._gcd_import", "name", "level", "package", "level"], "sentSegmentedWithoutStops": ["126", "_bootstrap._gcd_import", "name", "level", "level"], "sentSegmentedWithoutStopsStemmed": ["126", "_bootstrap._gcd_import", "name", "level", "level"]}, {"number": 93119, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    127 ", "sentSegmented": ["127"], "sentSegmentedWithoutStops": ["127"], "sentSegmentedWithoutStopsStemmed": ["127"]}, {"number": 93120, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    128 ", "sentSegmented": ["128"], "sentSegmentedWithoutStops": ["128"], "sentSegmentedWithoutStopsStemmed": ["128"]}, {"number": 93121, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/__init__.py in ()", "sentSegmented": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/__init__.py", "in"], "sentSegmentedWithoutStops": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/__init__.py"], "sentSegmentedWithoutStopsStemmed": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/__init__.pi"]}, {"number": 93122, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      6 from __future__ import print_function as _print_function", "sentSegmented": ["6", "from", "__future__", "import", "print_function", "as", "_print_function"], "sentSegmentedWithoutStops": ["6", "__future__", "print_function", "_print_function"], "sentSegmentedWithoutStopsStemmed": ["6", "__future__", "print_funct", "_print_funct"]}, {"number": 93123, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      7 ", "sentSegmented": ["7"], "sentSegmentedWithoutStops": ["7"], "sentSegmentedWithoutStopsStemmed": ["7"]}, {"number": 93124, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "----> 8 from tensorflow_estimator._api.v1 import estimator", "sentSegmented": ["8", "from", "tensorflow_estimator._api.v1", "import", "estimator"], "sentSegmentedWithoutStops": ["8", "tensorflow_estimator._api.v1", "estimator"], "sentSegmentedWithoutStopsStemmed": ["8", "tensorflow_estimator._api.v1", "estim"]}, {"number": 93125, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      9 _names_with_underscore = []", "sentSegmented": ["9", "_names_with_underscore"], "sentSegmentedWithoutStops": ["9", "_names_with_underscore"], "sentSegmentedWithoutStopsStemmed": ["9", "_names_with_underscor"]}, {"number": 93126, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     10 __all__ = [_s for _s in dir() if not _s.startswith('_')]", "sentSegmented": ["10", "__all__", "_s", "for", "_s", "in", "dir", "if", "not", "_s.startswith", "_"], "sentSegmentedWithoutStops": ["10", "__all__", "_s", "_s", "_s.startswith"], "sentSegmentedWithoutStopsStemmed": ["10", "__all__", "_s", "_s", "_s.startswith"]}, {"number": 93127, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/__init__.py in ()", "sentSegmented": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/__init__.py", "in"], "sentSegmentedWithoutStops": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/__init__.py"], "sentSegmentedWithoutStopsStemmed": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/__init__.pi"]}, {"number": 93128, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      6 from __future__ import print_function as _print_function", "sentSegmented": ["6", "from", "__future__", "import", "print_function", "as", "_print_function"], "sentSegmentedWithoutStops": ["6", "__future__", "print_function", "_print_function"], "sentSegmentedWithoutStopsStemmed": ["6", "__future__", "print_funct", "_print_funct"]}, {"number": 93129, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      7 ", "sentSegmented": ["7"], "sentSegmentedWithoutStops": ["7"], "sentSegmentedWithoutStopsStemmed": ["7"]}, {"number": 93130, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "----> 8 from tensorflow_estimator._api.v1.estimator import experimental", "sentSegmented": ["8", "from", "tensorflow_estimator._api.v1.estimator", "import", "experimental"], "sentSegmentedWithoutStops": ["8", "tensorflow_estimator._api.v1.estimator", "experimental"], "sentSegmentedWithoutStopsStemmed": ["8", "tensorflow_estimator._api.v1.estim", "experiment"]}, {"number": 93131, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      9 from tensorflow_estimator._api.v1.estimator import export", "sentSegmented": ["9", "from", "tensorflow_estimator._api.v1.estimator", "import", "export"], "sentSegmentedWithoutStops": ["9", "tensorflow_estimator._api.v1.estimator"], "sentSegmentedWithoutStopsStemmed": ["9", "tensorflow_estimator._api.v1.estim"]}, {"number": 93132, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     10 from tensorflow_estimator._api.v1.estimator import inputs", "sentSegmented": ["10", "from", "tensorflow_estimator._api.v1.estimator", "import", "inputs"], "sentSegmentedWithoutStops": ["10", "tensorflow_estimator._api.v1.estimator", "inputs"], "sentSegmentedWithoutStopsStemmed": ["10", "tensorflow_estimator._api.v1.estim", "input"]}, {"number": 93133, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/experimental/__init__.py in ()", "sentSegmented": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/experimental/__init__.py", "in"], "sentSegmentedWithoutStops": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/experimental/__init__.py"], "sentSegmentedWithoutStopsStemmed": ["/usr/local/lib/python3.6/dist-packages/tensorflow_estimator/_api/v1/estimator/experimental/__init__.pi"]}, {"number": 93134, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     33 if not isinstance(_sys.modules[__name__], _deprecation_wrapper.DeprecationWrapper):", "sentSegmented": ["33", "if", "not", "isinstance", "_sys.modules", "__name__", "_deprecation_wrapper.deprecationwrapper"], "sentSegmentedWithoutStops": ["33", "isinstance", "_sys.modules", "__name__", "_deprecation_wrapper.deprecationwrapper"], "sentSegmentedWithoutStopsStemmed": ["33", "isinst", "_sys.modul", "__name__", "_deprecation_wrapper.deprecationwrapp"]}, {"number": 93135, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     34   _sys.modules[__name__] = _deprecation_wrapper.DeprecationWrapper(", "sentSegmented": ["34", "_sys.modules", "__name__", "_deprecation_wrapper.deprecationwrapper"], "sentSegmentedWithoutStops": ["34", "_sys.modules", "__name__", "_deprecation_wrapper.deprecationwrapper"], "sentSegmentedWithoutStopsStemmed": ["34", "_sys.modul", "__name__", "_deprecation_wrapper.deprecationwrapp"]}, {"number": 93136, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "---> 35       _sys.modules[__name__], \"estimator.experimental\", _DEPRECATED_TO_CANONICAL)", "sentSegmented": ["35", "_sys.modules", "__name__", "estimator.experimental", "_deprecated_to_canonical"], "sentSegmentedWithoutStops": ["35", "_sys.modules", "__name__", "estimator.experimental", "_deprecated_to_canonical"], "sentSegmentedWithoutStopsStemmed": ["35", "_sys.modul", "__name__", "estimator.experiment", "_deprecated_to_canon"]}, {"number": 93137, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "TypeError: __init__() takes 3 positional arguments but 4 were given", "sentSegmented": ["typeerror", "__init__", "takes", "3", "positional", "arguments", "but", "4", "were", "given"], "sentSegmentedWithoutStops": ["typeerror", "__init__", "takes", "3", "positional", "arguments", "4", "given"], "sentSegmentedWithoutStopsStemmed": ["typeerror", "__init__", "take", "3", "posit", "argument", "4", "given"]}]}