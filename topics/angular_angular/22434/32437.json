{"repository": {"owner": {"login": "angular"}, "name": "angular", "forkCount": 18738, "stargazerCount": 71573, "createdAt": "2014-09-18T16:12:01Z", "updatedAt": "2021-03-11T02:49:52Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "angular"}}}, {"node": {"topic": {"name": "typescript"}}}, {"node": {"topic": {"name": "web"}}}, {"node": {"topic": {"name": "javascript"}}}, {"node": {"topic": {"name": "pwa"}}}, {"node": {"topic": {"name": "web-framework"}}}, {"node": {"topic": {"name": "web-performance"}}}]}, "languages": {"edges": [{"node": {"name": "JavaScript"}}, {"node": {"name": "HTML"}}, {"node": {"name": "CSS"}}, {"node": {"name": "Shell"}}, {"node": {"name": "TypeScript"}}, {"node": {"name": "PHP"}}, {"node": {"name": "Dockerfile"}}, {"node": {"name": "JSONiq"}}, {"node": {"name": "PowerShell"}}, {"node": {"name": "Starlark"}}, {"node": {"name": "SCSS"}}, {"node": {"name": "Less"}}]}, "primaryLanguage": {"name": "TypeScript"}}, "id": "MDU6SXNzdWU0ODc4OTQwODE=", "number": 32437, "author": {"login": "nickbullock"}, "title": "No way to pass custom typescript transformers through angular.json to AngularCompilerPlugin", "body": "<!--\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\r\n\r\nOh hi there! \ud83d\ude04\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05\ud83d\udd05-->\r\n\r\n\r\n# \ud83d\udc1e bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- \u270d\ufe0fedit: --> The issue is caused by package @angular/cli\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- \u270d\ufe0f--> No\r\n\r\n\r\n### Description\r\n\r\n<!-- \u270d\ufe0f-->\r\nI want to pass platformTransformers property to AngularCompilerPlugin through angular.json, but i can't find any option for it.\r\nI can only pass it directly to private property _transformers now using \"customWebpackConfig\"\r\n```\r\nconst { AngularCompilerPlugin } = require('@ngtools/webpack');\r\nconst { MyTransformer } = require('./transformers');\r\n\r\nmodule.exports = function (baseConfig, opts) {\r\n  const AngularCompilerPluginInstance = baseConfig.plugins.find(plugin => plugin instanceof AngularCompilerPlugin);\r\n\r\n  const defaultsTransformers = AngularCompilerPluginInstance._transformers;\r\n  AngularCompilerPluginInstance._transformers = [MyTransformer, ...defaultsTransformers];\r\n\r\n  return baseConfig;\r\n}\r\n\r\n```\r\nSo i think we need something like platformTransformers property (like we can use it with lazyModules property and pass it to AngularCompiler additionalLazyModules) in angular.json, and it will contains path to the file with transformers\r\n```\r\n\"platformTransformers:\" \"./transformers.ts\"\r\n```\r\n\r\nand transformers.ts is\r\n```\r\nmodule.exports = [MyTransformer1, MyTransformer2, ...]\r\n```\r\n\r\nI can make a PR.\r\n\r\n\r\n## \ud83c\udf0d  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\nAngular CLI: 8.3.0\r\nNode: 10.15.3\r\nOS: darwin x64\r\nAngular: 8.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.803.0\r\n@angular-devkit/build-angular     0.803.0\r\n@angular-devkit/build-optimizer   0.803.0\r\n@angular-devkit/build-webpack     0.803.0\r\n@angular-devkit/core              8.3.0\r\n@angular-devkit/schematics        8.3.0\r\n@angular/cli                      8.3.0\r\n@ngtools/webpack                  8.3.0\r\n@schematics/angular               8.3.0\r\n@schematics/update                0.803.0\r\nrxjs                              6.5.2\r\ntypescript                        3.5.3\r\nwebpack                           4.39.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- \u270d\ufe0fIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- \u270d\ufe0fDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n", "bodyHTML": "\n<h1><g-emoji class=\"g-emoji\" alias=\"beetle\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png\">\ud83d\udc1e</g-emoji> bug report</h1>\n<h3>Affected Package</h3>\n\n The issue is caused by package @angular/cli\n<h3>Is this a regression?</h3>\n\n No\n<h3>Description</h3>\n\n<p>I want to pass platformTransformers property to AngularCompilerPlugin through angular.json, but i can't find any option for it.<br>\nI can only pass it directly to private property _transformers now using \"customWebpackConfig\"</p>\n<pre><code>const { AngularCompilerPlugin } = require('@ngtools/webpack');\nconst { MyTransformer } = require('./transformers');\n\nmodule.exports = function (baseConfig, opts) {\n  const AngularCompilerPluginInstance = baseConfig.plugins.find(plugin =&gt; plugin instanceof AngularCompilerPlugin);\n\n  const defaultsTransformers = AngularCompilerPluginInstance._transformers;\n  AngularCompilerPluginInstance._transformers = [MyTransformer, ...defaultsTransformers];\n\n  return baseConfig;\n}\n\n</code></pre>\n<p>So i think we need something like platformTransformers property (like we can use it with lazyModules property and pass it to AngularCompiler additionalLazyModules) in angular.json, and it will contains path to the file with transformers</p>\n<pre><code>\"platformTransformers:\" \"./transformers.ts\"\n</code></pre>\n<p>and transformers.ts is</p>\n<pre><code>module.exports = [MyTransformer1, MyTransformer2, ...]\n</code></pre>\n<p>I can make a PR.</p>\n<h2><g-emoji class=\"g-emoji\" alias=\"earth_africa\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f30d.png\">\ud83c\udf0d</g-emoji>  Your Environment</h2>\n<p><strong>Angular Version:</strong></p>\n<pre><code>\n\nAngular CLI: 8.3.0\nNode: 10.15.3\nOS: darwin x64\nAngular: 8.2.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.803.0\n@angular-devkit/build-angular     0.803.0\n@angular-devkit/build-optimizer   0.803.0\n@angular-devkit/build-webpack     0.803.0\n@angular-devkit/core              8.3.0\n@angular-devkit/schematics        8.3.0\n@angular/cli                      8.3.0\n@ngtools/webpack                  8.3.0\n@schematics/angular               8.3.0\n@schematics/update                0.803.0\nrxjs                              6.5.2\ntypescript                        3.5.3\nwebpack                           4.39.2\n\n</code></pre>\n<p><strong>Anything else relevant?</strong></p>\n\n", "bodyText": "\ud83d\udc1e bug report\nAffected Package\n\n The issue is caused by package @angular/cli\nIs this a regression?\n\n No\nDescription\n\nI want to pass platformTransformers property to AngularCompilerPlugin through angular.json, but i can't find any option for it.\nI can only pass it directly to private property _transformers now using \"customWebpackConfig\"\nconst { AngularCompilerPlugin } = require('@ngtools/webpack');\nconst { MyTransformer } = require('./transformers');\n\nmodule.exports = function (baseConfig, opts) {\n  const AngularCompilerPluginInstance = baseConfig.plugins.find(plugin => plugin instanceof AngularCompilerPlugin);\n\n  const defaultsTransformers = AngularCompilerPluginInstance._transformers;\n  AngularCompilerPluginInstance._transformers = [MyTransformer, ...defaultsTransformers];\n\n  return baseConfig;\n}\n\n\nSo i think we need something like platformTransformers property (like we can use it with lazyModules property and pass it to AngularCompiler additionalLazyModules) in angular.json, and it will contains path to the file with transformers\n\"platformTransformers:\" \"./transformers.ts\"\n\nand transformers.ts is\nmodule.exports = [MyTransformer1, MyTransformer2, ...]\n\nI can make a PR.\n\ud83c\udf0d  Your Environment\nAngular Version:\n\n\nAngular CLI: 8.3.0\nNode: 10.15.3\nOS: darwin x64\nAngular: 8.2.3\n... animations, common, compiler, compiler-cli, core, forms\n... language-service, platform-browser, platform-browser-dynamic\n... router\n\nPackage                           Version\n-----------------------------------------------------------\n@angular-devkit/architect         0.803.0\n@angular-devkit/build-angular     0.803.0\n@angular-devkit/build-optimizer   0.803.0\n@angular-devkit/build-webpack     0.803.0\n@angular-devkit/core              8.3.0\n@angular-devkit/schematics        8.3.0\n@angular/cli                      8.3.0\n@ngtools/webpack                  8.3.0\n@schematics/angular               8.3.0\n@schematics/update                0.803.0\nrxjs                              6.5.2\ntypescript                        3.5.3\nwebpack                           4.39.2\n\n\nAnything else relevant?", "assignees": {"edges": []}, "createdAt": "2019-09-01T14:44:11Z", "closed": true, "closedAt": "2019-09-03T22:34:21Z", "lastEditedAt": "2019-09-02T06:09:23Z", "publishedAt": "2019-09-01T14:44:11Z", "comments": {"totalCount": 4, "edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDUyNjkzODYzMg==", "author": {"login": "sharikovvladislav"}, "body": "Probably, for somebody it would be intersting to specify where to add transformer: before internal transformers or after.\r\nSo probably it can be done like this. 3 options, for example:\r\n\r\nDefault (internal then custom):\r\n```\r\nmodule.exports = [MyTransformer1, MyTransformer2, ...]\r\n```\r\n\r\nPre:\r\n\r\n```\r\nmodule.exports = {\r\n  transformers: [MyTransformer1, MyTransformer2],\r\n  enforce: 'pre'\r\n}\r\n```\r\nPost (same as default):\r\n\r\n```\r\nmodule.exports = {\r\n  transformers: [MyTransformer1, MyTransformer2],\r\n  enforce: 'post'\r\n}\r\n```\r\n\r\nPre post could be done as `enum`. Like: \r\n\r\n```\r\nenum TransformAddStrategy {\r\n  Pre,\r\n  Post\r\n}\r\n```\r\n\r\n\r\n\r\n", "bodyText": "Probably, for somebody it would be intersting to specify where to add transformer: before internal transformers or after.\nSo probably it can be done like this. 3 options, for example:\nDefault (internal then custom):\nmodule.exports = [MyTransformer1, MyTransformer2, ...]\n\nPre:\nmodule.exports = {\n  transformers: [MyTransformer1, MyTransformer2],\n  enforce: 'pre'\n}\n\nPost (same as default):\nmodule.exports = {\n  transformers: [MyTransformer1, MyTransformer2],\n  enforce: 'post'\n}\n\nPre post could be done as enum. Like:\nenum TransformAddStrategy {\n  Pre,\n  Post\n}", "bodyHTML": "<p>Probably, for somebody it would be intersting to specify where to add transformer: before internal transformers or after.<br>\nSo probably it can be done like this. 3 options, for example:</p>\n<p>Default (internal then custom):</p>\n<pre><code>module.exports = [MyTransformer1, MyTransformer2, ...]\n</code></pre>\n<p>Pre:</p>\n<pre><code>module.exports = {\n  transformers: [MyTransformer1, MyTransformer2],\n  enforce: 'pre'\n}\n</code></pre>\n<p>Post (same as default):</p>\n<pre><code>module.exports = {\n  transformers: [MyTransformer1, MyTransformer2],\n  enforce: 'post'\n}\n</code></pre>\n<p>Pre post could be done as <code>enum</code>. Like:</p>\n<pre><code>enum TransformAddStrategy {\n  Pre,\n  Post\n}\n</code></pre>", "createdAt": "2019-09-01T17:33:39Z", "publishedAt": "2019-09-01T17:33:39Z", "lastEditedAt": null, "updatedAt": "2019-09-01T17:33:39Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 88947, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Probably, for somebody it would be intersting to specify where to add transformer: before internal transformers or after.", "sentSegmented": ["probably", "for", "somebody", "it", "would", "be", "intersting", "to", "specify", "where", "to", "add", "transformer", "before", "internal", "transformers", "or", "after"], "sentSegmentedWithoutStops": ["probably", "somebody", "would", "intersting", "specify", "add", "transformer", "internal", "transformers"], "sentSegmentedWithoutStopsStemmed": ["probabl", "somebodi", "would", "interst", "specifi", "add", "transform", "intern", "transform"]}, {"number": 88948, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So probably it can be done like this.", "sentSegmented": ["so", "probably", "it", "can", "be", "done", "like", "this"], "sentSegmentedWithoutStops": ["probably", "done", "like"], "sentSegmentedWithoutStopsStemmed": ["probabl", "done", "like"]}, {"number": 88949, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "3 options, for example:", "sentSegmented": ["3", "options", "for", "example"], "sentSegmentedWithoutStops": ["3", "options", "example"], "sentSegmentedWithoutStopsStemmed": ["3", "option", "exampl"]}, {"number": 88950, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Default (internal then custom):", "sentSegmented": ["default", "internal", "then", "custom"], "sentSegmentedWithoutStops": ["default", "internal", "custom"], "sentSegmentedWithoutStopsStemmed": ["default", "intern", "custom"]}, {"number": 88951, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "module.exports = [MyTransformer1, MyTransformer2, ...]", "sentSegmented": ["module.exports", "mytransformer1", "mytransformer2"], "sentSegmentedWithoutStops": ["module.exports", "mytransformer1", "mytransformer2"], "sentSegmentedWithoutStopsStemmed": ["module.export", "mytransformer1", "mytransformer2"]}, {"number": 88952, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Pre:", "sentSegmented": ["pre"], "sentSegmentedWithoutStops": ["pre"], "sentSegmentedWithoutStopsStemmed": ["pre"]}, {"number": 88953, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "module.exports = {", "sentSegmented": ["module.exports"], "sentSegmentedWithoutStops": ["module.exports"], "sentSegmentedWithoutStopsStemmed": ["module.export"]}, {"number": 88954, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  transformers: [MyTransformer1, MyTransformer2],", "sentSegmented": ["transformers", "mytransformer1", "mytransformer2"], "sentSegmentedWithoutStops": ["transformers", "mytransformer1", "mytransformer2"], "sentSegmentedWithoutStopsStemmed": ["transform", "mytransformer1", "mytransformer2"]}, {"number": 88955, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  enforce: 'pre'", "sentSegmented": ["enforce", "'pre"], "sentSegmentedWithoutStops": ["enforce", "'pre"], "sentSegmentedWithoutStopsStemmed": ["enforc", "'pre"]}, {"number": 88956, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "}", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 88957, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Post (same as default):", "sentSegmented": ["post", "same", "as", "default"], "sentSegmentedWithoutStops": ["post", "default"], "sentSegmentedWithoutStopsStemmed": ["post", "default"]}, {"number": 88958, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "module.exports = {", "sentSegmented": ["module.exports"], "sentSegmentedWithoutStops": ["module.exports"], "sentSegmentedWithoutStopsStemmed": ["module.export"]}, {"number": 88959, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  transformers: [MyTransformer1, MyTransformer2],", "sentSegmented": ["transformers", "mytransformer1", "mytransformer2"], "sentSegmentedWithoutStops": ["transformers", "mytransformer1", "mytransformer2"], "sentSegmentedWithoutStopsStemmed": ["transform", "mytransformer1", "mytransformer2"]}, {"number": 88960, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  enforce: 'post'", "sentSegmented": ["enforce", "'post"], "sentSegmentedWithoutStops": ["enforce", "'post"], "sentSegmentedWithoutStopsStemmed": ["enforc", "'post"]}, {"number": 88961, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "}", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 88962, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Pre post could be done as enum.", "sentSegmented": ["pre", "post", "could", "be", "done", "as", "enum"], "sentSegmentedWithoutStops": ["pre", "post", "could", "done", "enum"], "sentSegmentedWithoutStopsStemmed": ["pre", "post", "could", "done", "enum"]}, {"number": 88963, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Like:", "sentSegmented": ["like"], "sentSegmentedWithoutStops": ["like"], "sentSegmentedWithoutStopsStemmed": ["like"]}, {"number": 88964, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "enum TransformAddStrategy {", "sentSegmented": ["enum", "transformaddstrategy"], "sentSegmentedWithoutStops": ["transformaddstrategy"], "sentSegmentedWithoutStopsStemmed": ["transformaddstrategi"]}, {"number": 88965, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  Pre,", "sentSegmented": ["pre"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 88966, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  Post", "sentSegmented": ["post"], "sentSegmentedWithoutStops": ["post"], "sentSegmentedWithoutStopsStemmed": ["post"]}, {"number": 88967, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "}", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUyNzA0Mzk4Nw==", "author": {"login": "trotyl"}, "body": "Duplicate of https://github.com/angular/angular/issues/22434", "bodyText": "Duplicate of #22434", "bodyHTML": "<p><span aria-label=\"This issue is a duplicate of #22434\" class=\"issue-keyword tooltipped tooltipped-se\">Duplicate of</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"299971979\" data-permission-text=\"Title is private\" data-url=\"https://github.com/angular/angular/issues/22434\" data-hovercard-type=\"issue\" data-hovercard-url=\"/angular/angular/issues/22434/hovercard\" href=\"https://github.com/angular/angular/issues/22434\">#22434</a></p>", "createdAt": "2019-09-02T07:56:54Z", "publishedAt": "2019-09-02T07:56:54Z", "lastEditedAt": null, "updatedAt": "2019-09-02T07:56:54Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 88968, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Duplicate of #22434", "sentSegmented": ["duplicate", "of", "22434"], "sentSegmentedWithoutStops": ["duplicate", "22434"], "sentSegmentedWithoutStopsStemmed": ["duplic", "22434"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUyNzY2NjYxNg==", "author": {"login": "mhevery"}, "body": "closing as dup", "bodyText": "closing as dup", "bodyHTML": "<p>closing as dup</p>", "createdAt": "2019-09-03T22:34:21Z", "publishedAt": "2019-09-03T22:34:21Z", "lastEditedAt": null, "updatedAt": "2019-09-03T22:34:21Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 88969, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "closing as dup", "sentSegmented": ["closing", "as", "dup"], "sentSegmentedWithoutStops": ["closing", "dup"], "sentSegmentedWithoutStopsStemmed": ["close", "dup"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUzODQ2MTMxNg==", "author": {"login": "angular-automatic-lock-bot"}, "body": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\n\nRead more about our [automatic conversation locking policy](https://github.com/angular/angular/blob/67d80f/docs/GITHUB_PROCESS.md#conversation-locking).\n\n<sub>_This action has been performed automatically by a bot._</sub>", "bodyText": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\nRead more about our automatic conversation locking policy.\nThis action has been performed automatically by a bot.", "bodyHTML": "<p>This issue has been automatically locked due to inactivity.<br>\nPlease file a new issue if you are encountering a similar or related problem.</p>\n<p>Read more about our <a href=\"https://github.com/angular/angular/blob/67d80f/docs/GITHUB_PROCESS.md#conversation-locking\">automatic conversation locking policy</a>.</p>\n<p><sub><em>This action has been performed automatically by a bot.</em></sub></p>", "createdAt": "2019-10-04T16:07:00Z", "publishedAt": "2019-10-04T16:07:00Z", "lastEditedAt": null, "updatedAt": "2019-10-04T16:07:00Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 88970, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This issue has been automatically locked due to inactivity.", "sentSegmented": ["this", "issue", "has", "been", "automatically", "locked", "due", "to", "inactivity"], "sentSegmentedWithoutStops": ["issue", "automatically", "locked", "due", "inactivity"], "sentSegmentedWithoutStopsStemmed": ["issu", "automat", "lock", "due", "inact"]}, {"number": 88971, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Please file a new issue if you are encountering a similar or related problem.", "sentSegmented": ["please", "file", "a", "new", "issue", "if", "you", "are", "encountering", "a", "similar", "or", "related", "problem"], "sentSegmentedWithoutStops": ["please", "file", "new", "issue", "encountering", "similar", "related", "problem"], "sentSegmentedWithoutStopsStemmed": ["pleas", "file", "new", "issu", "encount", "similar", "relat", "problem"]}, {"number": 88972, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Read more about our automatic conversation locking policy.", "sentSegmented": ["read", "more", "about", "our", "automatic", "conversation", "locking", "policy"], "sentSegmentedWithoutStops": ["read", "automatic", "conversation", "locking", "policy"], "sentSegmentedWithoutStopsStemmed": ["read", "automat", "convers", "lock", "polici"]}, {"number": 88973, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This action has been performed automatically by a bot.", "sentSegmented": ["this", "action", "has", "been", "performed", "automatically", "by", "a", "bot"], "sentSegmentedWithoutStops": ["action", "performed", "automatically", "bot"], "sentSegmentedWithoutStopsStemmed": ["action", "perform", "automat", "bot"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOIBhEhA==", "hasNextPage": false}}, "labels": {"edges": []}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-09-01T17:28:52Z"}}, {"node": {"content": "EYES", "createdAt": "2019-09-01T17:28:56Z"}}]}, "state": "CLOSED", "titleSegmented": ["no", "way", "to", "pass", "custom", "typescript", "transformers", "through", "angular.json", "to", "angularcompilerplugin"], "titleSegmentedWithoutStops": ["way", "pass", "custom", "typescript", "transformers", "angular.json", "angularcompilerplugin"], "titleSegmentedWithoutStopsStemmed": ["way", "pass", "custom", "typescript", "transform", "angular.json", "angularcompilerplugin"], "bodyParsed": [{"number": 88903, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\ud83d\udc1e bug report", "sentSegmented": ["bug", "report"], "sentSegmentedWithoutStops": ["bug", "report"], "sentSegmentedWithoutStopsStemmed": ["bug", "report"]}, {"number": 88904, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Affected Package", "sentSegmented": ["affected", "package"], "sentSegmentedWithoutStops": ["affected", "package"], "sentSegmentedWithoutStopsStemmed": ["affect", "packag"]}, {"number": 88905, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Is this a regression?", "sentSegmented": ["is", "this", "a", "regression"], "sentSegmentedWithoutStops": ["regression"], "sentSegmentedWithoutStopsStemmed": ["regress"]}, {"number": 88906, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Description", "sentSegmented": ["description"], "sentSegmentedWithoutStops": ["description"], "sentSegmentedWithoutStopsStemmed": ["descript"]}, {"number": 88907, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I want to pass platformTransformers property to AngularCompilerPlugin through angular.json, but i can't find any option for it.", "sentSegmented": ["i", "want", "to", "pass", "platformtransformers", "property", "to", "angularcompilerplugin", "through", "angular.json", "but", "i", "ca", "n't", "find", "any", "option", "for", "it"], "sentSegmentedWithoutStops": ["want", "pass", "platformtransformers", "property", "angularcompilerplugin", "angular.json", "ca", "n't", "find", "option"], "sentSegmentedWithoutStopsStemmed": ["want", "pass", "platformtransform", "properti", "angularcompilerplugin", "angular.json", "ca", "n't", "find", "option"]}, {"number": 88908, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I can only pass it directly to private property _transformers now using \"customWebpackConfig\"", "sentSegmented": ["i", "can", "only", "pass", "it", "directly", "to", "private", "property", "_transformers", "now", "using", "customwebpackconfig"], "sentSegmentedWithoutStops": ["pass", "directly", "private", "property", "_transformers", "using", "customwebpackconfig"], "sentSegmentedWithoutStopsStemmed": ["pass", "directli", "privat", "properti", "_transform", "use", "customwebpackconfig"]}, {"number": 88909, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "const { AngularCompilerPlugin } = require('@ngtools/webpack');", "sentSegmented": ["const", "angularcompilerplugin", "require", "ngtools/webpack"], "sentSegmentedWithoutStops": ["angularcompilerplugin", "ngtools/webpack"], "sentSegmentedWithoutStopsStemmed": ["angularcompilerplugin", "ngtools/webpack"]}, {"number": 88910, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "const { MyTransformer } = require('./transformers');", "sentSegmented": ["const", "mytransformer", "require", "'./transformers"], "sentSegmentedWithoutStops": ["mytransformer", "'./transformers"], "sentSegmentedWithoutStopsStemmed": ["mytransform", "'./transform"]}, {"number": 88911, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "module.exports = function (baseConfig, opts) {", "sentSegmented": ["module.exports", "function", "baseconfig", "opts"], "sentSegmentedWithoutStops": ["module.exports", "baseconfig", "opts"], "sentSegmentedWithoutStopsStemmed": ["module.export", "baseconfig", "opt"]}, {"number": 88912, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  const AngularCompilerPluginInstance = baseConfig.plugins.find(plugin => plugin instanceof AngularCompilerPlugin);", "sentSegmented": ["const", "angularcompilerplugininstance", "baseconfig.plugins.find", "plugin", "plugin", "instanceof", "angularcompilerplugin"], "sentSegmentedWithoutStops": ["angularcompilerplugininstance", "baseconfig.plugins.find", "plugin", "plugin", "angularcompilerplugin"], "sentSegmentedWithoutStopsStemmed": ["angularcompilerplugininst", "baseconfig.plugins.find", "plugin", "plugin", "angularcompilerplugin"]}, {"number": 88913, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  const defaultsTransformers = AngularCompilerPluginInstance._transformers;", "sentSegmented": ["const", "defaultstransformers", "angularcompilerplugininstance._transformers"], "sentSegmentedWithoutStops": ["defaultstransformers", "angularcompilerplugininstance._transformers"], "sentSegmentedWithoutStopsStemmed": ["defaultstransform", "angularcompilerplugininstance._transform"]}, {"number": 88914, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  AngularCompilerPluginInstance._transformers = [MyTransformer, ...defaultsTransformers];", "sentSegmented": ["angularcompilerplugininstance._transformers", "mytransformer", "defaultstransformers"], "sentSegmentedWithoutStops": ["angularcompilerplugininstance._transformers", "mytransformer", "defaultstransformers"], "sentSegmentedWithoutStopsStemmed": ["angularcompilerplugininstance._transform", "mytransform", "defaultstransform"]}, {"number": 88915, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  return baseConfig;", "sentSegmented": ["return", "baseconfig"], "sentSegmentedWithoutStops": ["baseconfig"], "sentSegmentedWithoutStopsStemmed": ["baseconfig"]}, {"number": 88916, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "}", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 88917, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So i think we need something like platformTransformers property (like we can use it with lazyModules property and pass it to AngularCompiler additionalLazyModules) in angular.json, and it will contains path to the file with transformers", "sentSegmented": ["so", "i", "think", "we", "need", "something", "like", "platformtransformers", "property", "like", "we", "can", "use", "it", "with", "lazymodules", "property", "and", "pass", "it", "to", "angularcompiler", "additionallazymodules", "in", "angular.json", "and", "it", "will", "contains", "path", "to", "the", "file", "with", "transformers"], "sentSegmentedWithoutStops": ["think", "need", "something", "like", "platformtransformers", "property", "like", "use", "lazymodules", "property", "pass", "angularcompiler", "additionallazymodules", "angular.json", "contains", "path", "file", "transformers"], "sentSegmentedWithoutStopsStemmed": ["think", "need", "someth", "like", "platformtransform", "properti", "like", "use", "lazymodul", "properti", "pass", "angularcompil", "additionallazymodul", "angular.json", "contain", "path", "file", "transform"]}, {"number": 88918, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\"platformTransformers:\" \"./transformers.ts\"", "sentSegmented": ["platformtransformers", "./transformers.ts"], "sentSegmentedWithoutStops": ["platformtransformers", "./transformers.ts"], "sentSegmentedWithoutStopsStemmed": ["platformtransform", "./transformers.t"]}, {"number": 88919, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "and transformers.ts is", "sentSegmented": ["and", "transformers.ts", "is"], "sentSegmentedWithoutStops": ["transformers.ts"], "sentSegmentedWithoutStopsStemmed": ["transformers.t"]}, {"number": 88920, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "module.exports = [MyTransformer1, MyTransformer2, ...]", "sentSegmented": ["module.exports", "mytransformer1", "mytransformer2"], "sentSegmentedWithoutStops": ["module.exports", "mytransformer1", "mytransformer2"], "sentSegmentedWithoutStopsStemmed": ["module.export", "mytransformer1", "mytransformer2"]}, {"number": 88921, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I can make a PR.", "sentSegmented": ["i", "can", "make", "a", "pr"], "sentSegmentedWithoutStops": ["make", "pr"], "sentSegmentedWithoutStopsStemmed": ["make", "pr"]}, {"number": 88922, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\ud83c\udf0d  Your Environment", "sentSegmented": ["your", "environment"], "sentSegmentedWithoutStops": ["environment"], "sentSegmentedWithoutStopsStemmed": ["environ"]}, {"number": 88923, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Angular Version:", "sentSegmented": ["angular", "version"], "sentSegmentedWithoutStops": ["angular", "version"], "sentSegmentedWithoutStopsStemmed": ["angular", "version"]}, {"number": 88924, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Angular CLI: 8.3.0", "sentSegmented": ["angular", "cli", "8.3.0"], "sentSegmentedWithoutStops": ["angular", "cli", "8.3.0"], "sentSegmentedWithoutStopsStemmed": ["angular", "cli", "8.3.0"]}, {"number": 88925, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Node: 10.15.3", "sentSegmented": ["node", "10.15.3"], "sentSegmentedWithoutStops": ["node", "10.15.3"], "sentSegmentedWithoutStopsStemmed": ["node", "10.15.3"]}, {"number": 88926, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "OS: darwin x64", "sentSegmented": ["os", "darwin", "x64"], "sentSegmentedWithoutStops": ["os", "darwin", "x64"], "sentSegmentedWithoutStopsStemmed": ["os", "darwin", "x64"]}, {"number": 88927, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Angular: 8.2.3", "sentSegmented": ["angular", "8.2.3"], "sentSegmentedWithoutStops": ["angular", "8.2.3"], "sentSegmentedWithoutStopsStemmed": ["angular", "8.2.3"]}, {"number": 88928, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "... animations, common, compiler, compiler-cli, core, forms", "sentSegmented": ["animations", "common", "compiler", "compiler-cli", "core", "forms"], "sentSegmentedWithoutStops": ["animations", "common", "compiler", "compiler-cli", "core", "forms"], "sentSegmentedWithoutStopsStemmed": ["anim", "common", "compil", "compiler-cli", "core", "form"]}, {"number": 88929, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "... language-service, platform-browser, platform-browser-dynamic", "sentSegmented": ["language-service", "platform-browser", "platform-browser-dynamic"], "sentSegmentedWithoutStops": ["language-service", "platform-browser", "platform-browser-dynamic"], "sentSegmentedWithoutStopsStemmed": ["language-servic", "platform-brows", "platform-browser-dynam"]}, {"number": 88930, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "... router", "sentSegmented": ["router"], "sentSegmentedWithoutStops": ["router"], "sentSegmentedWithoutStopsStemmed": ["router"]}, {"number": 88931, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Package                           Version", "sentSegmented": ["package", "version"], "sentSegmentedWithoutStops": ["version"], "sentSegmentedWithoutStopsStemmed": ["version"]}, {"number": 88932, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "-----------------------------------------------------------", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 88933, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@angular-devkit/architect         0.803.0", "sentSegmented": ["angular-devkit/architect", "0.803.0"], "sentSegmentedWithoutStops": ["angular-devkit/architect", "0.803.0"], "sentSegmentedWithoutStopsStemmed": ["angular-devkit/architect", "0.803.0"]}, {"number": 88934, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@angular-devkit/build-angular     0.803.0", "sentSegmented": ["angular-devkit/build-angular", "0.803.0"], "sentSegmentedWithoutStops": ["angular-devkit/build-angular", "0.803.0"], "sentSegmentedWithoutStopsStemmed": ["angular-devkit/build-angular", "0.803.0"]}, {"number": 88935, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@angular-devkit/build-optimizer   0.803.0", "sentSegmented": ["angular-devkit/build-optimizer", "0.803.0"], "sentSegmentedWithoutStops": ["angular-devkit/build-optimizer", "0.803.0"], "sentSegmentedWithoutStopsStemmed": ["angular-devkit/build-optim", "0.803.0"]}, {"number": 88936, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@angular-devkit/build-webpack     0.803.0", "sentSegmented": ["angular-devkit/build-webpack", "0.803.0"], "sentSegmentedWithoutStops": ["angular-devkit/build-webpack", "0.803.0"], "sentSegmentedWithoutStopsStemmed": ["angular-devkit/build-webpack", "0.803.0"]}, {"number": 88937, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@angular-devkit/core              8.3.0", "sentSegmented": ["angular-devkit/core", "8.3.0"], "sentSegmentedWithoutStops": ["angular-devkit/core", "8.3.0"], "sentSegmentedWithoutStopsStemmed": ["angular-devkit/cor", "8.3.0"]}, {"number": 88938, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@angular-devkit/schematics        8.3.0", "sentSegmented": ["angular-devkit/schematics", "8.3.0"], "sentSegmentedWithoutStops": ["angular-devkit/schematics", "8.3.0"], "sentSegmentedWithoutStopsStemmed": ["angular-devkit/schemat", "8.3.0"]}, {"number": 88939, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@angular/cli                      8.3.0", "sentSegmented": ["angular/cli", "8.3.0"], "sentSegmentedWithoutStops": ["angular/cli", "8.3.0"], "sentSegmentedWithoutStopsStemmed": ["angular/cli", "8.3.0"]}, {"number": 88940, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@ngtools/webpack                  8.3.0", "sentSegmented": ["ngtools/webpack", "8.3.0"], "sentSegmentedWithoutStops": ["ngtools/webpack", "8.3.0"], "sentSegmentedWithoutStopsStemmed": ["ngtools/webpack", "8.3.0"]}, {"number": 88941, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@schematics/angular               8.3.0", "sentSegmented": ["schematics/angular", "8.3.0"], "sentSegmentedWithoutStops": ["schematics/angular", "8.3.0"], "sentSegmentedWithoutStopsStemmed": ["schematics/angular", "8.3.0"]}, {"number": 88942, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@schematics/update                0.803.0", "sentSegmented": ["schematics/update", "0.803.0"], "sentSegmentedWithoutStops": ["schematics/update", "0.803.0"], "sentSegmentedWithoutStopsStemmed": ["schematics/upd", "0.803.0"]}, {"number": 88943, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "rxjs                              6.5.2", "sentSegmented": ["rxjs", "6.5.2"], "sentSegmentedWithoutStops": ["rxjs", "6.5.2"], "sentSegmentedWithoutStopsStemmed": ["rxj", "6.5.2"]}, {"number": 88944, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "typescript                        3.5.3", "sentSegmented": ["typescript", "3.5.3"], "sentSegmentedWithoutStops": ["typescript", "3.5.3"], "sentSegmentedWithoutStopsStemmed": ["typescript", "3.5.3"]}, {"number": 88945, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "webpack                           4.39.2", "sentSegmented": ["webpack", "4.39.2"], "sentSegmentedWithoutStops": ["webpack", "4.39.2"], "sentSegmentedWithoutStopsStemmed": ["webpack", "4.39.2"]}, {"number": 88946, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Anything else relevant?", "sentSegmented": ["anything", "else", "relevant"], "sentSegmentedWithoutStops": ["anything", "else", "relevant"], "sentSegmentedWithoutStopsStemmed": ["anyth", "els", "relev"]}]}