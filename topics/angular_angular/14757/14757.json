{"repository": {"owner": {"login": "angular"}, "name": "angular", "forkCount": 18738, "stargazerCount": 71573, "createdAt": "2014-09-18T16:12:01Z", "updatedAt": "2021-03-11T02:49:52Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "angular"}}}, {"node": {"topic": {"name": "typescript"}}}, {"node": {"topic": {"name": "web"}}}, {"node": {"topic": {"name": "javascript"}}}, {"node": {"topic": {"name": "pwa"}}}, {"node": {"topic": {"name": "web-framework"}}}, {"node": {"topic": {"name": "web-performance"}}}]}, "languages": {"edges": [{"node": {"name": "JavaScript"}}, {"node": {"name": "HTML"}}, {"node": {"name": "CSS"}}, {"node": {"name": "Shell"}}, {"node": {"name": "TypeScript"}}, {"node": {"name": "PHP"}}, {"node": {"name": "Dockerfile"}}, {"node": {"name": "JSONiq"}}, {"node": {"name": "PowerShell"}}, {"node": {"name": "Starlark"}}, {"node": {"name": "SCSS"}}, {"node": {"name": "Less"}}]}, "primaryLanguage": {"name": "TypeScript"}}, "id": "MDU6SXNzdWUyMTA0MjY1MDU=", "number": 14757, "author": {"login": "vytautas-pranskunas-"}, "title": "[class.foo-class] binding is not applied correctly", "body": "**Current behavior**\r\n\r\n<!-- Describe how the bug manifests. -->\r\nI have component with class bindings which look like:\r\n\r\n<foo class=\"class1 {{classFromProp1}}\" [class.foo-class]=\"classFromProp2\"></foo>\r\nclassFromProp2= true\r\nwhen resizing screen classFromProp1 changes and foo-class gets lost.\r\n\r\nthis behavior works as expected if I use [ngClass]=\"{'foo-class': classFromProp2}\" \r\n\r\n**Expected behavior**\r\nshould merge classes correctly\r\n\r\n* **Angular version:** 2.0.X\r\n~2.4.0\r\n", "bodyHTML": "<p><strong>Current behavior</strong></p>\n\n<p>I have component with class bindings which look like:</p>\n<p>&lt;foo class=\"class1 {{classFromProp1}}\" [class.foo-class]=\"classFromProp2\"&gt;<br>\nclassFromProp2= true<br>\nwhen resizing screen classFromProp1 changes and foo-class gets lost.</p>\n<p>this behavior works as expected if I use [ngClass]=\"{'foo-class': classFromProp2}\"</p>\n<p><strong>Expected behavior</strong><br>\nshould merge classes correctly</p>\n<ul>\n<li><strong>Angular version:</strong> 2.0.X<br>\n~2.4.0</li>\n</ul>", "bodyText": "Current behavior\n\nI have component with class bindings which look like:\n<foo class=\"class1 {{classFromProp1}}\" [class.foo-class]=\"classFromProp2\">\nclassFromProp2= true\nwhen resizing screen classFromProp1 changes and foo-class gets lost.\nthis behavior works as expected if I use [ngClass]=\"{'foo-class': classFromProp2}\"\nExpected behavior\nshould merge classes correctly\n\nAngular version: 2.0.X\n~2.4.0", "assignees": {"edges": []}, "createdAt": "2017-02-27T09:15:16Z", "closed": true, "closedAt": "2017-07-24T15:33:39Z", "lastEditedAt": null, "publishedAt": "2017-02-27T09:15:16Z", "comments": {"totalCount": 7, "edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDI4MjY2NjUzMA==", "author": {"login": "DzmitryShylovich"}, "body": "please add a plunkr", "bodyText": "please add a plunkr", "bodyHTML": "<p>please add a plunkr</p>", "createdAt": "2017-02-27T09:16:28Z", "publishedAt": "2017-02-27T09:16:28Z", "lastEditedAt": null, "updatedAt": "2017-02-27T09:16:28Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 13025, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "please add a plunkr", "sentSegmented": ["please", "add", "a", "plunkr"], "sentSegmentedWithoutStops": ["please", "add", "plunkr"], "sentSegmentedWithoutStopsStemmed": ["pleas", "add", "plunkr"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI4MjY2OTIzMw==", "author": {"login": "vytautas-pranskunas-"}, "body": "Am this is something more serious, maybe i will try provide plunker later on because it it seams binding works correctly if i add it via method not via property like [class.foo-class]=\"shouldAddClass()\". So it comes out that during screen resize somehow that property lost its value.\r\n\r\nI figure it out that it is related with ng-content because i am adding those classes on component with \r\n template: `\r\n        <ng-content></ng-content>\r\n`\r\nhowever if i add that binding inside on content everything works fine\r\n\r\nso plunker would be not so stright forward to create also", "bodyText": "Am this is something more serious, maybe i will try provide plunker later on because it it seams binding works correctly if i add it via method not via property like [class.foo-class]=\"shouldAddClass()\". So it comes out that during screen resize somehow that property lost its value.\nI figure it out that it is related with ng-content because i am adding those classes on component with\ntemplate: <ng-content></ng-content>\nhowever if i add that binding inside on content everything works fine\nso plunker would be not so stright forward to create also", "bodyHTML": "<p>Am this is something more serious, maybe i will try provide plunker later on because it it seams binding works correctly if i add it via method not via property like [class.foo-class]=\"shouldAddClass()\". So it comes out that during screen resize somehow that property lost its value.</p>\n<p>I figure it out that it is related with ng-content because i am adding those classes on component with<br>\ntemplate: <code>&lt;ng-content&gt;&lt;/ng-content&gt;</code><br>\nhowever if i add that binding inside on content everything works fine</p>\n<p>so plunker would be not so stright forward to create also</p>", "createdAt": "2017-02-27T09:28:32Z", "publishedAt": "2017-02-27T09:28:32Z", "lastEditedAt": "2017-02-27T09:49:35Z", "updatedAt": "2017-02-27T09:49:35Z", "reactions": {"edges": [{"node": {"content": "THUMBS_DOWN", "createdAt": "2017-02-27T09:51:36Z"}}]}, "bodyParsed": [{"number": 13026, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Am this is something more serious, maybe i will try provide plunker later on because it it seams binding works correctly if i add it via method not via property like [class.foo-class]=\"shouldAddClass()\".", "sentSegmented": ["am", "this", "is", "something", "more", "serious", "maybe", "i", "will", "try", "provide", "plunker", "later", "on", "because", "it", "it", "seams", "binding", "works", "correctly", "if", "i", "add", "it", "via", "method", "not", "via", "property", "like", "class.foo-class", "shouldaddclass"], "sentSegmentedWithoutStops": ["something", "serious", "maybe", "try", "provide", "plunker", "later", "seams", "binding", "works", "correctly", "add", "via", "method", "via", "property", "like", "class.foo-class", "shouldaddclass"], "sentSegmentedWithoutStopsStemmed": ["someth", "seriou", "mayb", "tri", "provid", "plunker", "later", "seam", "bind", "work", "correctli", "add", "via", "method", "via", "properti", "like", "class.foo-class", "shouldaddclass"]}, {"number": 13027, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So it comes out that during screen resize somehow that property lost its value.", "sentSegmented": ["so", "it", "comes", "out", "that", "during", "screen", "resize", "somehow", "that", "property", "lost", "its", "value"], "sentSegmentedWithoutStops": ["comes", "screen", "resize", "somehow", "property", "lost", "value"], "sentSegmentedWithoutStopsStemmed": ["come", "screen", "resiz", "somehow", "properti", "lost", "valu"]}, {"number": 13028, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I figure it out that it is related with ng-content because i am adding those classes on component with", "sentSegmented": ["i", "figure", "it", "out", "that", "it", "is", "related", "with", "ng-content", "because", "i", "am", "adding", "those", "classes", "on", "component", "with"], "sentSegmentedWithoutStops": ["figure", "related", "ng-content", "adding", "classes", "component"], "sentSegmentedWithoutStopsStemmed": ["figur", "relat", "ng-content", "ad", "class", "compon"]}, {"number": 13029, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "template:", "sentSegmented": ["template"], "sentSegmentedWithoutStops": ["template"], "sentSegmentedWithoutStopsStemmed": ["templat"]}, {"number": 13030, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "however if i add that binding inside on content everything works fine", "sentSegmented": ["however", "if", "i", "add", "that", "binding", "inside", "on", "content", "everything", "works", "fine"], "sentSegmentedWithoutStops": ["however", "add", "binding", "inside", "content", "everything", "works", "fine"], "sentSegmentedWithoutStopsStemmed": ["howev", "add", "bind", "insid", "content", "everyth", "work", "fine"]}, {"number": 13031, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "so plunker would be not so stright forward to create also", "sentSegmented": ["so", "plunker", "would", "be", "not", "so", "stright", "forward", "to", "create", "also"], "sentSegmentedWithoutStops": ["plunker", "would", "stright", "forward", "create", "also"], "sentSegmentedWithoutStopsStemmed": ["plunker", "would", "stright", "forward", "creat", "also"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI4MjcxMTg4Mw==", "author": {"login": "vytautas-pranskunas-"}, "body": "here is the plunker: https://plnkr.co/edit/BNp0kgsJfOPqffrOQErU?p=preview\r\n\r\nif you inspect html before press the button you can notice that 'template-wrapper' element has class 'to-be-added', but once you press button class is gone. But please notice that 'addClass' variable never is false.", "bodyText": "here is the plunker: https://plnkr.co/edit/BNp0kgsJfOPqffrOQErU?p=preview\nif you inspect html before press the button you can notice that 'template-wrapper' element has class 'to-be-added', but once you press button class is gone. But please notice that 'addClass' variable never is false.", "bodyHTML": "<p>here is the plunker: <a rel=\"nofollow\" href=\"https://plnkr.co/edit/BNp0kgsJfOPqffrOQErU?p=preview\">https://plnkr.co/edit/BNp0kgsJfOPqffrOQErU?p=preview</a></p>\n<p>if you inspect html before press the button you can notice that 'template-wrapper' element has class 'to-be-added', but once you press button class is gone. But please notice that 'addClass' variable never is false.</p>", "createdAt": "2017-02-27T12:56:10Z", "publishedAt": "2017-02-27T12:56:10Z", "lastEditedAt": null, "updatedAt": "2017-02-27T12:56:10Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 13032, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "here is the plunker: https://plnkr.co/edit/BNp0kgsJfOPqffrOQErU?p=preview", "sentSegmented": ["here", "is", "the", "plunker", "https", "//plnkr.co/edit/bnp0kgsjfopqffroqeru", "p=preview"], "sentSegmentedWithoutStops": ["plunker", "https", "//plnkr.co/edit/bnp0kgsjfopqffroqeru", "p=preview"], "sentSegmentedWithoutStopsStemmed": ["plunker", "http", "//plnkr.co/edit/bnp0kgsjfopqffroqeru", "p=preview"]}, {"number": 13033, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "if you inspect html before press the button you can notice that 'template-wrapper' element has class 'to-be-added', but once you press button class is gone.", "sentSegmented": ["if", "you", "inspect", "html", "before", "press", "the", "button", "you", "can", "notice", "that", "'template-wrapper", "element", "has", "class", "'to-be-added", "but", "once", "you", "press", "button", "class", "is", "gone"], "sentSegmentedWithoutStops": ["inspect", "html", "press", "button", "notice", "'template-wrapper", "element", "class", "'to-be-added", "press", "button", "class", "gone"], "sentSegmentedWithoutStopsStemmed": ["inspect", "html", "press", "button", "notic", "'template-wrapp", "element", "class", "'to-be-ad", "press", "button", "class", "gone"]}, {"number": 13034, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But please notice that 'addClass' variable never is false.", "sentSegmented": ["but", "please", "notice", "that", "'addclass", "variable", "never", "is", "false"], "sentSegmentedWithoutStops": ["please", "notice", "'addclass", "variable", "never", "false"], "sentSegmentedWithoutStopsStemmed": ["pleas", "notic", "'addclass", "variabl", "never", "fals"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI4MjcxNzg0MQ==", "author": {"login": "DzmitryShylovich"}, "body": "yeah, looks like a bug, thanks.", "bodyText": "yeah, looks like a bug, thanks.", "bodyHTML": "<p>yeah, looks like a bug, thanks.</p>", "createdAt": "2017-02-27T13:20:23Z", "publishedAt": "2017-02-27T13:20:23Z", "lastEditedAt": null, "updatedAt": "2017-02-27T13:20:23Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 13035, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "yeah, looks like a bug, thanks.", "sentSegmented": ["yeah", "looks", "like", "a", "bug", "thanks"], "sentSegmentedWithoutStops": ["yeah", "looks", "like", "bug", "thanks"], "sentSegmentedWithoutStopsStemmed": ["yeah", "look", "like", "bug", "thank"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI4MjgxMzg3NA==", "author": {"login": "jsayol"}, "body": "It seems that when a change on `bar` is detected, only the interpolation is taken into account when updating the `class` attribute and the property binding is ignored.\r\n\r\nEdit: did some quick testing, it affects both 2.4.8 and 4.0.0-rc.1", "bodyText": "It seems that when a change on bar is detected, only the interpolation is taken into account when updating the class attribute and the property binding is ignored.\nEdit: did some quick testing, it affects both 2.4.8 and 4.0.0-rc.1", "bodyHTML": "<p>It seems that when a change on <code>bar</code> is detected, only the interpolation is taken into account when updating the <code>class</code> attribute and the property binding is ignored.</p>\n<p>Edit: did some quick testing, it affects both 2.4.8 and 4.0.0-rc.1</p>", "createdAt": "2017-02-27T18:54:34Z", "publishedAt": "2017-02-27T18:54:34Z", "lastEditedAt": "2017-02-27T19:09:05Z", "updatedAt": "2017-02-27T19:09:05Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 13036, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It seems that when a change on bar is detected, only the interpolation is taken into account when updating the class attribute and the property binding is ignored.", "sentSegmented": ["it", "seems", "that", "when", "a", "change", "on", "bar", "is", "detected", "only", "the", "interpolation", "is", "taken", "into", "account", "when", "updating", "the", "class", "attribute", "and", "the", "property", "binding", "is", "ignored"], "sentSegmentedWithoutStops": ["seems", "change", "bar", "detected", "interpolation", "taken", "account", "updating", "class", "attribute", "property", "binding", "ignored"], "sentSegmentedWithoutStopsStemmed": ["seem", "chang", "bar", "detect", "interpol", "taken", "account", "updat", "class", "attribut", "properti", "bind", "ignor"]}, {"number": 13037, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Edit: did some quick testing, it affects both 2.4.8 and 4.0.0-rc.1", "sentSegmented": ["edit", "did", "some", "quick", "testing", "it", "affects", "both", "2.4.8", "and", "4.0.0-rc.1"], "sentSegmentedWithoutStops": ["edit", "quick", "testing", "affects", "2.4.8", "4.0.0-rc.1"], "sentSegmentedWithoutStopsStemmed": ["edit", "quick", "test", "affect", "2.4.8", "4.0.0-rc.1"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMxNzQ2MTUzOA==", "author": {"login": "pkozlowski-opensource"}, "body": "This is the same as #15038. I'm going to close this one as a duplicate of #15038 since there is more discussion / info in #15038.", "bodyText": "This is the same as #15038. I'm going to close this one as a duplicate of #15038 since there is more discussion / info in #15038.", "bodyHTML": "<p>This is the same as <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"213099115\" data-permission-text=\"Title is private\" data-url=\"https://github.com/angular/angular/issues/15038\" data-hovercard-type=\"issue\" data-hovercard-url=\"/angular/angular/issues/15038/hovercard\" href=\"https://github.com/angular/angular/issues/15038\">#15038</a>. I'm going to close this one as a duplicate of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"213099115\" data-permission-text=\"Title is private\" data-url=\"https://github.com/angular/angular/issues/15038\" data-hovercard-type=\"issue\" data-hovercard-url=\"/angular/angular/issues/15038/hovercard\" href=\"https://github.com/angular/angular/issues/15038\">#15038</a> since there is more discussion / info in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"213099115\" data-permission-text=\"Title is private\" data-url=\"https://github.com/angular/angular/issues/15038\" data-hovercard-type=\"issue\" data-hovercard-url=\"/angular/angular/issues/15038/hovercard\" href=\"https://github.com/angular/angular/issues/15038\">#15038</a>.</p>", "createdAt": "2017-07-24T15:33:39Z", "publishedAt": "2017-07-24T15:33:39Z", "lastEditedAt": null, "updatedAt": "2017-07-24T15:33:39Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 13038, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This is the same as #15038.", "sentSegmented": ["this", "is", "the", "same", "as", "15038"], "sentSegmentedWithoutStops": ["15038"], "sentSegmentedWithoutStopsStemmed": ["15038"]}, {"number": 13039, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm going to close this one as a duplicate of #15038 since there is more discussion / info in #15038.", "sentSegmented": ["i", "'m", "going", "to", "close", "this", "one", "as", "a", "duplicate", "of", "15038", "since", "there", "is", "more", "discussion", "info", "in", "15038"], "sentSegmentedWithoutStops": ["'m", "going", "close", "one", "duplicate", "15038", "since", "discussion", "info", "15038"], "sentSegmentedWithoutStopsStemmed": ["'m", "go", "close", "one", "duplic", "15038", "sinc", "discuss", "info", "15038"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUzMDY1ODE3MA==", "author": {"login": "angular-automatic-lock-bot"}, "body": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\n\nRead more about our [automatic conversation locking policy](https://github.com/angular/angular/blob/67d80f/docs/GITHUB_PROCESS.md#conversation-locking).\n\n<sub>_This action has been performed automatically by a bot._</sub>", "bodyText": "This issue has been automatically locked due to inactivity.\nPlease file a new issue if you are encountering a similar or related problem.\nRead more about our automatic conversation locking policy.\nThis action has been performed automatically by a bot.", "bodyHTML": "<p>This issue has been automatically locked due to inactivity.<br>\nPlease file a new issue if you are encountering a similar or related problem.</p>\n<p>Read more about our <a href=\"https://github.com/angular/angular/blob/67d80f/docs/GITHUB_PROCESS.md#conversation-locking\">automatic conversation locking policy</a>.</p>\n<p><sub><em>This action has been performed automatically by a bot.</em></sub></p>", "createdAt": "2019-09-12T04:20:32Z", "publishedAt": "2019-09-12T04:20:32Z", "lastEditedAt": null, "updatedAt": "2019-09-12T04:20:32Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 13040, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This issue has been automatically locked due to inactivity.", "sentSegmented": ["this", "issue", "has", "been", "automatically", "locked", "due", "to", "inactivity"], "sentSegmentedWithoutStops": ["issue", "automatically", "locked", "due", "inactivity"], "sentSegmentedWithoutStopsStemmed": ["issu", "automat", "lock", "due", "inact"]}, {"number": 13041, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Please file a new issue if you are encountering a similar or related problem.", "sentSegmented": ["please", "file", "a", "new", "issue", "if", "you", "are", "encountering", "a", "similar", "or", "related", "problem"], "sentSegmentedWithoutStops": ["please", "file", "new", "issue", "encountering", "similar", "related", "problem"], "sentSegmentedWithoutStopsStemmed": ["pleas", "file", "new", "issu", "encount", "similar", "relat", "problem"]}, {"number": 13042, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Read more about our automatic conversation locking policy.", "sentSegmented": ["read", "more", "about", "our", "automatic", "conversation", "locking", "policy"], "sentSegmentedWithoutStops": ["read", "automatic", "conversation", "locking", "policy"], "sentSegmentedWithoutStopsStemmed": ["read", "automat", "convers", "lock", "polici"]}, {"number": 13043, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This action has been performed automatically by a bot.", "sentSegmented": ["this", "action", "has", "been", "performed", "automatically", "by", "a", "bot"], "sentSegmentedWithoutStops": ["action", "performed", "automatically", "bot"], "sentSegmentedWithoutStopsStemmed": ["action", "perform", "automat", "bot"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOH6Ezeg==", "hasNextPage": false}}, "labels": {"edges": [{"node": {"createdAt": "2016-05-13T04:35:11Z", "name": "comp: core"}}, {"node": {"createdAt": "2014-09-18T16:12:01Z", "name": "type: bug/fix"}}]}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_DOWN", "createdAt": "2017-02-27T09:51:30Z"}}]}, "state": "CLOSED", "titleSegmented": ["class.foo-class", "binding", "is", "not", "applied", "correctly"], "titleSegmentedWithoutStops": ["class.foo-class", "binding", "applied", "correctly"], "titleSegmentedWithoutStopsStemmed": ["class.foo-class", "bind", "appli", "correctli"], "bodyParsed": [{"number": 13016, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Current behavior", "sentSegmented": ["current", "behavior"], "sentSegmentedWithoutStops": ["current", "behavior"], "sentSegmentedWithoutStopsStemmed": ["current", "behavior"]}, {"number": 13017, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I have component with class bindings which look like:", "sentSegmented": ["i", "have", "component", "with", "class", "bindings", "which", "look", "like"], "sentSegmentedWithoutStops": ["component", "class", "bindings", "look", "like"], "sentSegmentedWithoutStopsStemmed": ["compon", "class", "bind", "look", "like"]}, {"number": 13018, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "classFromProp2= true", "sentSegmented": ["classfromprop2=", "true"], "sentSegmentedWithoutStops": ["classfromprop2=", "true"], "sentSegmentedWithoutStopsStemmed": ["classfromprop2=", "true"]}, {"number": 13019, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "when resizing screen classFromProp1 changes and foo-class gets lost.", "sentSegmented": ["when", "resizing", "screen", "classfromprop1", "changes", "and", "foo-class", "gets", "lost"], "sentSegmentedWithoutStops": ["resizing", "screen", "classfromprop1", "changes", "foo-class", "gets", "lost"], "sentSegmentedWithoutStopsStemmed": ["resiz", "screen", "classfromprop1", "chang", "foo-class", "get", "lost"]}, {"number": 13020, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "this behavior works as expected if I use [ngClass]=\"{'foo-class': classFromProp2}\"", "sentSegmented": ["this", "behavior", "works", "as", "expected", "if", "i", "use", "ngclass", "'foo-class", "classfromprop2"], "sentSegmentedWithoutStops": ["behavior", "works", "expected", "use", "ngclass", "'foo-class", "classfromprop2"], "sentSegmentedWithoutStopsStemmed": ["behavior", "work", "expect", "use", "ngclass", "'foo-class", "classfromprop2"]}, {"number": 13021, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Expected behavior", "sentSegmented": ["expected", "behavior"], "sentSegmentedWithoutStops": ["expected", "behavior"], "sentSegmentedWithoutStopsStemmed": ["expect", "behavior"]}, {"number": 13022, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "should merge classes correctly", "sentSegmented": ["should", "merge", "classes", "correctly"], "sentSegmentedWithoutStops": ["merge", "classes", "correctly"], "sentSegmentedWithoutStopsStemmed": ["merg", "class", "correctli"]}, {"number": 13023, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Angular version: 2.0.X", "sentSegmented": ["angular", "version", "2.0.x"], "sentSegmentedWithoutStops": ["angular", "version", "2.0.x"], "sentSegmentedWithoutStopsStemmed": ["angular", "version", "2.0.x"]}, {"number": 13024, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "~2.4.0", "sentSegmented": ["~2.4.0"], "sentSegmentedWithoutStops": ["~2.4.0"], "sentSegmentedWithoutStopsStemmed": ["~2.4.0"]}]}