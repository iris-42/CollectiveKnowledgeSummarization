{"repository": {"owner": {"login": "systemd"}, "name": "systemd", "forkCount": 2497, "stargazerCount": 7846, "createdAt": "2015-03-25T15:27:27Z", "updatedAt": "2021-03-17T05:30:46Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "systemd"}}}, {"node": {"topic": {"name": "c"}}}, {"node": {"topic": {"name": "linux"}}}, {"node": {"topic": {"name": "init"}}}, {"node": {"topic": {"name": "services"}}}, {"node": {"topic": {"name": "system"}}}]}, "languages": {"edges": [{"node": {"name": "Emacs Lisp"}}, {"node": {"name": "Vim script"}}, {"node": {"name": "Python"}}, {"node": {"name": "Makefile"}}, {"node": {"name": "Shell"}}, {"node": {"name": "Meson"}}, {"node": {"name": "M4"}}, {"node": {"name": "Perl"}}, {"node": {"name": "C"}}, {"node": {"name": "Awk"}}, {"node": {"name": "C++"}}, {"node": {"name": "Objective-C"}}, {"node": {"name": "HTML"}}, {"node": {"name": "sed"}}, {"node": {"name": "SmPL"}}, {"node": {"name": "CodeQL"}}]}, "primaryLanguage": {"name": "C"}}, "id": "MDU6SXNzdWU0NjQxODY0NjU=", "number": 12955, "author": {"login": "yadutaf"}, "title": "[241] \"No such process\" when starting user instance with hidepid=2 and cgroupv2", "body": "**systemd version the issue has been seen with**\r\n> 241\r\n\r\n<!-- **NOTE:** Do not submit bug reports about anything but the two most recently released systemd versions upstream! -->\r\n<!-- For older version please use distribution trackers (see https://github.com/systemd/systemd/blob/master/docs/CONTRIBUTING.md#filing-issues). -->\r\n\r\n**Used distribution**\r\n > Yocto, with an additional \"-Ddefault-hierarchy=unified\" build flag\r\n\r\n**Expected behaviour you didn't see**\r\n > user@xxxx.service should start\r\n\r\n**Unexpected behaviour you saw**\r\n > user@xxxx.service is in state failed with the following logs\r\n\r\n```\r\nroot@machine:~# systemctl status user@xxxx.service\r\n\u25cf user@xxxx.service - User Manager for UID xxxx\r\n   Loaded: loaded (/lib/systemd/system/user@.service; static; vendor preset: enabled)\r\n   Active: failed (Result: protocol) since Thu 2019-07-04 09:00:23 UTC; 2min 28s ago\r\n     Docs: man:user@.service(5)\r\n  Process: 1433 ExecStart=/lib/systemd/systemd --user (code=exited, status=1/FAILURE)\r\n Main PID: 1433 (code=exited, status=1/FAILURE)\r\n      CPU: 5ms\r\n\r\nJul 04 09:00:23 machine systemd[1]: Starting User Manager for UID xxxx...\r\nJul 04 09:00:23 machine systemd[1433]: Failed to determine supported controllers: No such process\r\nJul 04 09:00:23 machine systemd[1433]: Failed to allocate manager object: No such process\r\nJul 04 09:00:23 machine systemd[1]: user@xxxx.service: Failed with result 'protocol'.\r\nJul 04 09:00:23 machine systemd[1]: Failed to start User Manager for UID xxxx.\r\nJul 04 09:00:23 machine systemd[1]: user@xxxx.service: Consumed 5ms CPU time.\r\n```\r\n\r\n**Steps to reproduce the problem**\r\n\r\n1. mount -oremount,gid=4,hidepid=2 /proc\r\n2. /bin/loginctl enable-linger user-xxxx\r\n\r\nWe are using the \"unified\" hierarchy, not sure whether it makes any difference\r\n\r\n**Workaround**\r\n\r\nThis can be worked-around by adding `SupplementaryGroups=4` to\r\n* user@.service\r\n* systemd-logind.service\r\n\r\n(Original hint from https://github.com/pld-linux/systemd/blob/master/proc-hidepid.patch)\r\n\r\nBut, in this case, all user processes created by systemd user instance have the supplementary group 4, which reduces the usefulness of the 'hidepid=2' feature. It does not however affect sessions opened via SSH so that there is still some benefit :)\r\n\r\nIs there any way to avoid propagating the supplementary group to the child processes or, is there a way to avoid needing the patch at least on the user@.service (which I believe, would 'fix' the 'leak') ? I'd naively imagine that the user instance could query the system instance for the info it needs :)\r\n\r\nThanks,", "bodyHTML": "<p><strong>systemd version the issue has been seen with</strong></p>\n<blockquote>\n<p>241</p>\n</blockquote>\n\n\n<p><strong>Used distribution</strong></p>\n<blockquote>\n<p>Yocto, with an additional \"-Ddefault-hierarchy=unified\" build flag</p>\n</blockquote>\n<p><strong>Expected behaviour you didn't see</strong></p>\n<blockquote>\n<p><a href=\"mailto:user@xxxx.service\">user@xxxx.service</a> should start</p>\n</blockquote>\n<p><strong>Unexpected behaviour you saw</strong></p>\n<blockquote>\n<p><a href=\"mailto:user@xxxx.service\">user@xxxx.service</a> is in state failed with the following logs</p>\n</blockquote>\n<pre><code>root@machine:~# systemctl status user@xxxx.service\n\u25cf user@xxxx.service - User Manager for UID xxxx\n   Loaded: loaded (/lib/systemd/system/user@.service; static; vendor preset: enabled)\n   Active: failed (Result: protocol) since Thu 2019-07-04 09:00:23 UTC; 2min 28s ago\n     Docs: man:user@.service(5)\n  Process: 1433 ExecStart=/lib/systemd/systemd --user (code=exited, status=1/FAILURE)\n Main PID: 1433 (code=exited, status=1/FAILURE)\n      CPU: 5ms\n\nJul 04 09:00:23 machine systemd[1]: Starting User Manager for UID xxxx...\nJul 04 09:00:23 machine systemd[1433]: Failed to determine supported controllers: No such process\nJul 04 09:00:23 machine systemd[1433]: Failed to allocate manager object: No such process\nJul 04 09:00:23 machine systemd[1]: user@xxxx.service: Failed with result 'protocol'.\nJul 04 09:00:23 machine systemd[1]: Failed to start User Manager for UID xxxx.\nJul 04 09:00:23 machine systemd[1]: user@xxxx.service: Consumed 5ms CPU time.\n</code></pre>\n<p><strong>Steps to reproduce the problem</strong></p>\n<ol>\n<li>mount -oremount,gid=4,hidepid=2 /proc</li>\n<li>/bin/loginctl enable-linger user-xxxx</li>\n</ol>\n<p>We are using the \"unified\" hierarchy, not sure whether it makes any difference</p>\n<p><strong>Workaround</strong></p>\n<p>This can be worked-around by adding <code>SupplementaryGroups=4</code> to</p>\n<ul>\n<li><a href=\"mailto:user@.service\">user@.service</a></li>\n<li>systemd-logind.service</li>\n</ul>\n<p>(Original hint from <a href=\"https://github.com/pld-linux/systemd/blob/master/proc-hidepid.patch\">https://github.com/pld-linux/systemd/blob/master/proc-hidepid.patch</a>)</p>\n<p>But, in this case, all user processes created by systemd user instance have the supplementary group 4, which reduces the usefulness of the 'hidepid=2' feature. It does not however affect sessions opened via SSH so that there is still some benefit :)</p>\n<p>Is there any way to avoid propagating the supplementary group to the child processes or, is there a way to avoid needing the patch at least on the <a href=\"mailto:user@.service\">user@.service</a> (which I believe, would 'fix' the 'leak') ? I'd naively imagine that the user instance could query the system instance for the info it needs :)</p>\n<p>Thanks,</p>", "bodyText": "systemd version the issue has been seen with\n\n241\n\n\n\nUsed distribution\n\nYocto, with an additional \"-Ddefault-hierarchy=unified\" build flag\n\nExpected behaviour you didn't see\n\nuser@xxxx.service should start\n\nUnexpected behaviour you saw\n\nuser@xxxx.service is in state failed with the following logs\n\nroot@machine:~# systemctl status user@xxxx.service\n\u25cf user@xxxx.service - User Manager for UID xxxx\n   Loaded: loaded (/lib/systemd/system/user@.service; static; vendor preset: enabled)\n   Active: failed (Result: protocol) since Thu 2019-07-04 09:00:23 UTC; 2min 28s ago\n     Docs: man:user@.service(5)\n  Process: 1433 ExecStart=/lib/systemd/systemd --user (code=exited, status=1/FAILURE)\n Main PID: 1433 (code=exited, status=1/FAILURE)\n      CPU: 5ms\n\nJul 04 09:00:23 machine systemd[1]: Starting User Manager for UID xxxx...\nJul 04 09:00:23 machine systemd[1433]: Failed to determine supported controllers: No such process\nJul 04 09:00:23 machine systemd[1433]: Failed to allocate manager object: No such process\nJul 04 09:00:23 machine systemd[1]: user@xxxx.service: Failed with result 'protocol'.\nJul 04 09:00:23 machine systemd[1]: Failed to start User Manager for UID xxxx.\nJul 04 09:00:23 machine systemd[1]: user@xxxx.service: Consumed 5ms CPU time.\n\nSteps to reproduce the problem\n\nmount -oremount,gid=4,hidepid=2 /proc\n/bin/loginctl enable-linger user-xxxx\n\nWe are using the \"unified\" hierarchy, not sure whether it makes any difference\nWorkaround\nThis can be worked-around by adding SupplementaryGroups=4 to\n\nuser@.service\nsystemd-logind.service\n\n(Original hint from https://github.com/pld-linux/systemd/blob/master/proc-hidepid.patch)\nBut, in this case, all user processes created by systemd user instance have the supplementary group 4, which reduces the usefulness of the 'hidepid=2' feature. It does not however affect sessions opened via SSH so that there is still some benefit :)\nIs there any way to avoid propagating the supplementary group to the child processes or, is there a way to avoid needing the patch at least on the user@.service (which I believe, would 'fix' the 'leak') ? I'd naively imagine that the user instance could query the system instance for the info it needs :)\nThanks,", "assignees": {"edges": []}, "createdAt": "2019-07-04T10:17:49Z", "closed": true, "closedAt": "2019-07-04T13:54:29Z", "lastEditedAt": null, "publishedAt": "2019-07-04T10:17:49Z", "comments": {"edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDUwODQ5MDg5Mw==", "author": {"login": "poettering"}, "body": "Sorry, but hidepid= is simply not supported on systemd instances. we require the ability to identify remote processes and most of our services run at minimal privileges, and this means this cannot work. Sorry.\r\n\r\nThere has been work on making hidepid= a true mount option (i.e. an option of the mount itself instead of the pidns), but it stalled. If we ever get that we could have a per-service hidepid= which would make things a lot more useful.\r\n\r\nBut anyway, sorry. hidepid= the way it is is not compatible with systemd, and that's not going to change.", "bodyText": "Sorry, but hidepid= is simply not supported on systemd instances. we require the ability to identify remote processes and most of our services run at minimal privileges, and this means this cannot work. Sorry.\nThere has been work on making hidepid= a true mount option (i.e. an option of the mount itself instead of the pidns), but it stalled. If we ever get that we could have a per-service hidepid= which would make things a lot more useful.\nBut anyway, sorry. hidepid= the way it is is not compatible with systemd, and that's not going to change.", "bodyHTML": "<p>Sorry, but hidepid= is simply not supported on systemd instances. we require the ability to identify remote processes and most of our services run at minimal privileges, and this means this cannot work. Sorry.</p>\n<p>There has been work on making hidepid= a true mount option (i.e. an option of the mount itself instead of the pidns), but it stalled. If we ever get that we could have a per-service hidepid= which would make things a lot more useful.</p>\n<p>But anyway, sorry. hidepid= the way it is is not compatible with systemd, and that's not going to change.</p>", "createdAt": "2019-07-04T13:54:28Z", "publishedAt": "2019-07-04T13:54:28Z", "lastEditedAt": null, "updatedAt": "2019-07-04T13:54:28Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 31993, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Sorry, but hidepid= is simply not supported on systemd instances.", "sentSegmented": ["sorry", "but", "hidepid=", "is", "simply", "not", "supported", "on", "systemd", "instances"], "sentSegmentedWithoutStops": ["sorry", "hidepid=", "simply", "supported", "systemd", "instances"], "sentSegmentedWithoutStopsStemmed": ["sorri", "hidepid=", "simpli", "support", "systemd", "instanc"]}, {"number": 31994, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "we require the ability to identify remote processes and most of our services run at minimal privileges, and this means this cannot work.", "sentSegmented": ["we", "require", "the", "ability", "to", "identify", "remote", "processes", "and", "most", "of", "our", "services", "run", "at", "minimal", "privileges", "and", "this", "means", "this", "can", "not", "work"], "sentSegmentedWithoutStops": ["require", "ability", "identify", "remote", "processes", "services", "run", "minimal", "privileges", "means", "work"], "sentSegmentedWithoutStopsStemmed": ["requir", "abil", "identifi", "remot", "process", "servic", "run", "minim", "privileg", "mean", "work"]}, {"number": 31995, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Sorry.", "sentSegmented": ["sorry"], "sentSegmentedWithoutStops": ["sorry"], "sentSegmentedWithoutStopsStemmed": ["sorri"]}, {"number": 31996, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "There has been work on making hidepid= a true mount option (i.e.", "sentSegmented": ["there", "has", "been", "work", "on", "making", "hidepid=", "a", "true", "mount", "option", "i.e"], "sentSegmentedWithoutStops": ["work", "making", "hidepid=", "true", "mount", "option", "i.e"], "sentSegmentedWithoutStopsStemmed": ["work", "make", "hidepid=", "true", "mount", "option", "i.e"]}, {"number": 31997, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "an option of the mount itself instead of the pidns), but it stalled.", "sentSegmented": ["an", "option", "of", "the", "mount", "itself", "instead", "of", "the", "pidns", "but", "it", "stalled"], "sentSegmentedWithoutStops": ["option", "mount", "instead", "pidns", "stalled"], "sentSegmentedWithoutStopsStemmed": ["option", "mount", "instead", "pidn", "stall"]}, {"number": 31998, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If we ever get that we could have a per-service hidepid= which would make things a lot more useful.", "sentSegmented": ["if", "we", "ever", "get", "that", "we", "could", "have", "a", "per-service", "hidepid=", "which", "would", "make", "things", "a", "lot", "more", "useful"], "sentSegmentedWithoutStops": ["ever", "get", "could", "per-service", "hidepid=", "would", "make", "things", "lot", "useful"], "sentSegmentedWithoutStopsStemmed": ["ever", "get", "could", "per-servic", "hidepid=", "would", "make", "thing", "lot", "use"]}, {"number": 31999, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But anyway, sorry.", "sentSegmented": ["but", "anyway", "sorry"], "sentSegmentedWithoutStops": ["anyway", "sorry"], "sentSegmentedWithoutStopsStemmed": ["anyway", "sorri"]}, {"number": 32000, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "hidepid= the way it is is not compatible with systemd, and that's not going to change.", "sentSegmented": ["hidepid=", "the", "way", "it", "is", "is", "not", "compatible", "with", "systemd", "and", "that", "'s", "not", "going", "to", "change"], "sentSegmentedWithoutStops": ["hidepid=", "way", "compatible", "systemd", "'s", "going", "change"], "sentSegmentedWithoutStopsStemmed": ["hidepid=", "way", "compat", "systemd", "'s", "go", "chang"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUwODQ5MTI3OA==", "author": {"login": "poettering"}, "body": "The patch set I was talking of is this:\r\n\r\nhttps://lwn.net/Articles/738597/\r\n\r\nIf you are interested in this, please work with the kernel folks, resurrect the patch set, and try to make it work.", "bodyText": "The patch set I was talking of is this:\nhttps://lwn.net/Articles/738597/\nIf you are interested in this, please work with the kernel folks, resurrect the patch set, and try to make it work.", "bodyHTML": "<p>The patch set I was talking of is this:</p>\n<p><a rel=\"nofollow\" href=\"https://lwn.net/Articles/738597/\">https://lwn.net/Articles/738597/</a></p>\n<p>If you are interested in this, please work with the kernel folks, resurrect the patch set, and try to make it work.</p>", "createdAt": "2019-07-04T13:55:41Z", "publishedAt": "2019-07-04T13:55:41Z", "lastEditedAt": null, "updatedAt": "2019-07-04T13:55:41Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32001, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The patch set I was talking of is this:", "sentSegmented": ["the", "patch", "set", "i", "was", "talking", "of", "is", "this"], "sentSegmentedWithoutStops": ["patch", "set", "talking"], "sentSegmentedWithoutStopsStemmed": ["patch", "set", "talk"]}, {"number": 32002, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "https://lwn.net/Articles/738597/", "sentSegmented": ["https", "//lwn.net/articles/738597/"], "sentSegmentedWithoutStops": ["https", "//lwn.net/articles/738597/"], "sentSegmentedWithoutStopsStemmed": ["http", "//lwn.net/articles/738597/"]}, {"number": 32003, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If you are interested in this, please work with the kernel folks, resurrect the patch set, and try to make it work.", "sentSegmented": ["if", "you", "are", "interested", "in", "this", "please", "work", "with", "the", "kernel", "folks", "resurrect", "the", "patch", "set", "and", "try", "to", "make", "it", "work"], "sentSegmentedWithoutStops": ["interested", "please", "work", "kernel", "folks", "resurrect", "patch", "set", "try", "make", "work"], "sentSegmentedWithoutStopsStemmed": ["interest", "pleas", "work", "kernel", "folk", "resurrect", "patch", "set", "tri", "make", "work"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUwODcwOTc5Nw==", "author": {"login": "yadutaf"}, "body": "Thanks for your quick reply !\r\n\r\nI understand Systemd requires to see all PIDs on the system and it's fine. Maybe there could be a way to start the systemd user instance with CAP_SET_GID and instruct it to drop the additional group (4 in my case) either when it no longer needs it (if this time exists), either before exec-ing a non-systemd binary.\r\n\r\nWould it make sense ?", "bodyText": "Thanks for your quick reply !\nI understand Systemd requires to see all PIDs on the system and it's fine. Maybe there could be a way to start the systemd user instance with CAP_SET_GID and instruct it to drop the additional group (4 in my case) either when it no longer needs it (if this time exists), either before exec-ing a non-systemd binary.\nWould it make sense ?", "bodyHTML": "<p>Thanks for your quick reply !</p>\n<p>I understand Systemd requires to see all PIDs on the system and it's fine. Maybe there could be a way to start the systemd user instance with CAP_SET_GID and instruct it to drop the additional group (4 in my case) either when it no longer needs it (if this time exists), either before exec-ing a non-systemd binary.</p>\n<p>Would it make sense ?</p>", "createdAt": "2019-07-05T10:15:44Z", "publishedAt": "2019-07-05T10:15:44Z", "lastEditedAt": null, "updatedAt": "2019-07-05T10:15:44Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32004, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks for your quick reply !", "sentSegmented": ["thanks", "for", "your", "quick", "reply"], "sentSegmentedWithoutStops": ["thanks", "quick", "reply"], "sentSegmentedWithoutStopsStemmed": ["thank", "quick", "repli"]}, {"number": 32005, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I understand Systemd requires to see all PIDs on the system and it's fine.", "sentSegmented": ["i", "understand", "systemd", "requires", "to", "see", "all", "pids", "on", "the", "system", "and", "it", "'s", "fine"], "sentSegmentedWithoutStops": ["understand", "systemd", "requires", "see", "pids", "system", "'s", "fine"], "sentSegmentedWithoutStopsStemmed": ["understand", "systemd", "requir", "see", "pid", "system", "'s", "fine"]}, {"number": 32006, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Maybe there could be a way to start the systemd user instance with CAP_SET_GID and instruct it to drop the additional group (4 in my case) either when it no longer needs it (if this time exists), either before exec-ing a non-systemd binary.", "sentSegmented": ["maybe", "there", "could", "be", "a", "way", "to", "start", "the", "systemd", "user", "instance", "with", "cap_set_gid", "and", "instruct", "it", "to", "drop", "the", "additional", "group", "4", "in", "my", "case", "either", "when", "it", "no", "longer", "needs", "it", "if", "this", "time", "exists", "either", "before", "exec-ing", "a", "non-systemd", "binary"], "sentSegmentedWithoutStops": ["maybe", "could", "way", "start", "systemd", "user", "instance", "cap_set_gid", "instruct", "drop", "additional", "group", "4", "case", "either", "longer", "needs", "time", "exists", "either", "exec-ing", "non-systemd", "binary"], "sentSegmentedWithoutStopsStemmed": ["mayb", "could", "way", "start", "systemd", "user", "instanc", "cap_set_gid", "instruct", "drop", "addit", "group", "4", "case", "either", "longer", "need", "time", "exist", "either", "exec-", "non-systemd", "binari"]}, {"number": 32007, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Would it make sense ?", "sentSegmented": ["would", "it", "make", "sense"], "sentSegmentedWithoutStops": ["would", "make", "sense"], "sentSegmentedWithoutStopsStemmed": ["would", "make", "sens"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUwODgwMjI5OQ==", "author": {"login": "poettering"}, "body": "It's not just systemd, it's a lot of other stuff we require. Polkit/dbus for example and so on...\r\n\r\nI think the clean fix would be to fix the kernel to make hidepid not a system-wide setting, see above. Instead of patching around in systemd, just fix this properly by patching around in the kernel.", "bodyText": "It's not just systemd, it's a lot of other stuff we require. Polkit/dbus for example and so on...\nI think the clean fix would be to fix the kernel to make hidepid not a system-wide setting, see above. Instead of patching around in systemd, just fix this properly by patching around in the kernel.", "bodyHTML": "<p>It's not just systemd, it's a lot of other stuff we require. Polkit/dbus for example and so on...</p>\n<p>I think the clean fix would be to fix the kernel to make hidepid not a system-wide setting, see above. Instead of patching around in systemd, just fix this properly by patching around in the kernel.</p>", "createdAt": "2019-07-05T15:57:29Z", "publishedAt": "2019-07-05T15:57:29Z", "lastEditedAt": null, "updatedAt": "2019-07-05T15:57:29Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32008, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's not just systemd, it's a lot of other stuff we require.", "sentSegmented": ["it", "'s", "not", "just", "systemd", "it", "'s", "a", "lot", "of", "other", "stuff", "we", "require"], "sentSegmentedWithoutStops": ["'s", "systemd", "'s", "lot", "stuff", "require"], "sentSegmentedWithoutStopsStemmed": ["'s", "systemd", "'s", "lot", "stuff", "requir"]}, {"number": 32009, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Polkit/dbus for example and so on...", "sentSegmented": ["polkit/dbus", "for", "example", "and", "so", "on"], "sentSegmentedWithoutStops": ["polkit/dbus", "example"], "sentSegmentedWithoutStopsStemmed": ["polkit/dbu", "exampl"]}, {"number": 32010, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I think the clean fix would be to fix the kernel to make hidepid not a system-wide setting, see above.", "sentSegmented": ["i", "think", "the", "clean", "fix", "would", "be", "to", "fix", "the", "kernel", "to", "make", "hidepid", "not", "a", "system-wide", "setting", "see", "above"], "sentSegmentedWithoutStops": ["think", "clean", "fix", "would", "fix", "kernel", "make", "hidepid", "system-wide", "setting", "see"], "sentSegmentedWithoutStopsStemmed": ["think", "clean", "fix", "would", "fix", "kernel", "make", "hidepid", "system-wid", "set", "see"]}, {"number": 32011, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Instead of patching around in systemd, just fix this properly by patching around in the kernel.", "sentSegmented": ["instead", "of", "patching", "around", "in", "systemd", "just", "fix", "this", "properly", "by", "patching", "around", "in", "the", "kernel"], "sentSegmentedWithoutStops": ["instead", "patching", "around", "systemd", "fix", "properly", "patching", "around", "kernel"], "sentSegmentedWithoutStopsStemmed": ["instead", "patch", "around", "systemd", "fix", "properli", "patch", "around", "kernel"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUxMjgxNTc0NQ==", "author": {"login": "yadutaf"}, "body": "I was able to hack something which works in my use case with:\r\n\r\n1. A hackish patch on the kernel (4.9)\r\n```diff\r\ndiff --git a/fs/proc/base.c b/fs/proc/base.c\r\nindex ae6d4aa65c8f..11163b7bbe4d 100644\r\n--- a/fs/proc/base.c\r\n+++ b/fs/proc/base.c\r\n@@ -675,11 +675,14 @@ int proc_setattr(struct dentry *dentry, struct iattr *attr)\r\n /*\r\n  * May current process learn task's sched/cmdline info (for hide_pid_min=1)\r\n  * or euid/egid (for hide_pid_min=2)?\r\n+ * jean-tiare: Hack for systemd user instance: Always allow PID 1.\r\n  */\r\n static bool has_pid_permissions(struct pid_namespace *pid,\r\n \t\t\t\t struct task_struct *task,\r\n \t\t\t\t int hide_pid_min)\r\n {\r\n+\tif (task->pid == 1)\r\n+\t\treturn true;\r\n \tif (pid->hide_pid < hide_pid_min)\r\n \t\treturn true;\r\n \tif (in_group_p(pid->pid_gid))\r\n```\r\n\r\n2. A drop in for systemd-logind.service\r\n\r\n```ini\r\n# Grant full access to all PIDs to systemd-logind\r\n[Service]\r\nSupplementaryGroups=4\r\n```\r\n\r\nWith both patches, the full test suite passes on my side. Systemd user instances are working fine and the started process have only access there own PIDs and PID 1. This may be missing a lot of (corner ?) cases but this suggests that 'hidepid' support in systemd is not very far and might not require a rework in /proc. Not sure if proposing a new mount flag like \"showpid1\" for procfs would be acceptable on the kernel side though.", "bodyText": "I was able to hack something which works in my use case with:\n\nA hackish patch on the kernel (4.9)\n\ndiff --git a/fs/proc/base.c b/fs/proc/base.c\nindex ae6d4aa65c8f..11163b7bbe4d 100644\n--- a/fs/proc/base.c\n+++ b/fs/proc/base.c\n@@ -675,11 +675,14 @@ int proc_setattr(struct dentry *dentry, struct iattr *attr)\n /*\n  * May current process learn task's sched/cmdline info (for hide_pid_min=1)\n  * or euid/egid (for hide_pid_min=2)?\n+ * jean-tiare: Hack for systemd user instance: Always allow PID 1.\n  */\n static bool has_pid_permissions(struct pid_namespace *pid,\n \t\t\t\t struct task_struct *task,\n \t\t\t\t int hide_pid_min)\n {\n+\tif (task->pid == 1)\n+\t\treturn true;\n \tif (pid->hide_pid < hide_pid_min)\n \t\treturn true;\n \tif (in_group_p(pid->pid_gid))\n\nA drop in for systemd-logind.service\n\n# Grant full access to all PIDs to systemd-logind\n[Service]\nSupplementaryGroups=4\nWith both patches, the full test suite passes on my side. Systemd user instances are working fine and the started process have only access there own PIDs and PID 1. This may be missing a lot of (corner ?) cases but this suggests that 'hidepid' support in systemd is not very far and might not require a rework in /proc. Not sure if proposing a new mount flag like \"showpid1\" for procfs would be acceptable on the kernel side though.", "bodyHTML": "<p>I was able to hack something which works in my use case with:</p>\n<ol>\n<li>A hackish patch on the kernel (4.9)</li>\n</ol>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff --git a/fs/proc/base.c b/fs/proc/base.c</span>\nindex ae6d4aa65c8f..11163b7bbe4d 100644\n<span class=\"pl-md\">--- a/fs/proc/base.c</span>\n<span class=\"pl-mi1\">+++ b/fs/proc/base.c</span>\n<span class=\"pl-mdr\">@@ -675,11 +675,14 @@</span> int proc_setattr(struct dentry *dentry, struct iattr *attr)\n /*\n  * May current process learn task's sched/cmdline info (for hide_pid_min=1)\n  * or euid/egid (for hide_pid_min=2)?\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> * jean-tiare: Hack for systemd user instance: Always allow PID 1.</span>\n  */\n static bool has_pid_permissions(struct pid_namespace *pid,\n \t\t\t\t struct task_struct *task,\n \t\t\t\t int hide_pid_min)\n {\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>\tif (task-&gt;pid == 1)</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>\t\treturn true;</span>\n \tif (pid-&gt;hide_pid &lt; hide_pid_min)\n \t\treturn true;\n \tif (in_group_p(pid-&gt;pid_gid))</pre></div>\n<ol start=\"2\">\n<li>A drop in for systemd-logind.service</li>\n</ol>\n<div class=\"highlight highlight-source-ini\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Grant full access to all PIDs to systemd-logind</span>\n<span class=\"pl-en\">[Service]</span>\n<span class=\"pl-k\">SupplementaryGroups</span>=4</pre></div>\n<p>With both patches, the full test suite passes on my side. Systemd user instances are working fine and the started process have only access there own PIDs and PID 1. This may be missing a lot of (corner ?) cases but this suggests that 'hidepid' support in systemd is not very far and might not require a rework in /proc. Not sure if proposing a new mount flag like \"showpid1\" for procfs would be acceptable on the kernel side though.</p>", "createdAt": "2019-07-18T13:28:47Z", "publishedAt": "2019-07-18T13:28:47Z", "lastEditedAt": null, "updatedAt": "2019-07-18T13:28:47Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-12-11T12:22:57Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-12-19T12:30:16Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-07T18:44:38Z"}}]}, "bodyParsed": [{"number": 32012, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I was able to hack something which works in my use case with:", "sentSegmented": ["i", "was", "able", "to", "hack", "something", "which", "works", "in", "my", "use", "case", "with"], "sentSegmentedWithoutStops": ["able", "hack", "something", "works", "use", "case"], "sentSegmentedWithoutStopsStemmed": ["abl", "hack", "someth", "work", "use", "case"]}, {"number": 32013, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "A hackish patch on the kernel (4.9)", "sentSegmented": ["a", "hackish", "patch", "on", "the", "kernel", "4.9"], "sentSegmentedWithoutStops": ["hackish", "patch", "kernel", "4.9"], "sentSegmentedWithoutStopsStemmed": ["hackish", "patch", "kernel", "4.9"]}, {"number": 32014, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "diff --git a/fs/proc/base.c b/fs/proc/base.c", "sentSegmented": ["diff", "git", "a/fs/proc/base.c", "b/fs/proc/base.c"], "sentSegmentedWithoutStops": ["diff", "git", "a/fs/proc/base.c", "b/fs/proc/base.c"], "sentSegmentedWithoutStopsStemmed": ["diff", "git", "a/fs/proc/base.c", "b/fs/proc/base.c"]}, {"number": 32015, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "index ae6d4aa65c8f..11163b7bbe4d 100644", "sentSegmented": ["index", "ae6d4aa65c8f", "11163b7bbe4d", "100644"], "sentSegmentedWithoutStops": ["index", "ae6d4aa65c8f", "11163b7bbe4d", "100644"], "sentSegmentedWithoutStopsStemmed": ["index", "ae6d4aa65c8f", "11163b7bbe4d", "100644"]}, {"number": 32016, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "--- a/fs/proc/base.c", "sentSegmented": ["a/fs/proc/base.c"], "sentSegmentedWithoutStops": ["a/fs/proc/base.c"], "sentSegmentedWithoutStopsStemmed": ["a/fs/proc/base.c"]}, {"number": 32017, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "+++ b/fs/proc/base.c", "sentSegmented": ["b/fs/proc/base.c"], "sentSegmentedWithoutStops": ["b/fs/proc/base.c"], "sentSegmentedWithoutStopsStemmed": ["b/fs/proc/base.c"]}, {"number": 32018, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@@ -675,11 +675,14 @@ int proc_setattr(struct dentry *dentry, struct iattr *attr)", "sentSegmented": ["-675,11", "+675,14", "int", "proc_setattr", "struct", "dentry", "dentry", "struct", "iattr", "attr"], "sentSegmentedWithoutStops": ["-675,11", "+675,14", "proc_setattr", "dentry", "dentry", "iattr", "attr"], "sentSegmentedWithoutStopsStemmed": ["-675,11", "+675,14", "proc_setattr", "dentri", "dentri", "iattr", "attr"]}, {"number": 32019, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " /*", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32020, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  * May current process learn task's sched/cmdline info (for hide_pid_min=1)", "sentSegmented": ["may", "current", "process", "learn", "task", "'s", "sched/cmdline", "info", "for", "hide_pid_min=1"], "sentSegmentedWithoutStops": ["may", "current", "process", "learn", "task", "'s", "sched/cmdline", "info", "hide_pid_min=1"], "sentSegmentedWithoutStopsStemmed": ["may", "current", "process", "learn", "task", "'s", "sched/cmdlin", "info", "hide_pid_min=1"]}, {"number": 32021, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  * or euid/egid (for hide_pid_min=2)?", "sentSegmented": ["or", "euid/egid", "for", "hide_pid_min=2"], "sentSegmentedWithoutStops": ["euid/egid", "hide_pid_min=2"], "sentSegmentedWithoutStopsStemmed": ["euid/egid", "hide_pid_min=2"]}, {"number": 32022, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "+ * jean-tiare: Hack for systemd user instance: Always allow PID 1.", "sentSegmented": ["jean-tiare", "hack", "for", "systemd", "user", "instance", "always", "allow", "pid", "1"], "sentSegmentedWithoutStops": ["jean-tiare", "hack", "systemd", "user", "instance", "always", "allow", "pid", "1"], "sentSegmentedWithoutStopsStemmed": ["jean-tiar", "hack", "systemd", "user", "instanc", "alway", "allow", "pid", "1"]}, {"number": 32023, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  */", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32024, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " static bool has_pid_permissions(struct pid_namespace *pid,", "sentSegmented": ["static", "bool", "has_pid_permissions", "struct", "pid_namespace", "pid"], "sentSegmentedWithoutStops": ["has_pid_permissions", "pid_namespace", "pid"], "sentSegmentedWithoutStopsStemmed": ["has_pid_permiss", "pid_namespac", "pid"]}, {"number": 32025, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " \t\t\t\t struct task_struct *task,", "sentSegmented": ["struct", "task_struct", "task"], "sentSegmentedWithoutStops": ["task_struct", "task"], "sentSegmentedWithoutStopsStemmed": ["task_struct", "task"]}, {"number": 32026, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " \t\t\t\t int hide_pid_min)", "sentSegmented": ["int", "hide_pid_min"], "sentSegmentedWithoutStops": ["hide_pid_min"], "sentSegmentedWithoutStopsStemmed": ["hide_pid_min"]}, {"number": 32027, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " {", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32028, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "+\tif (task->pid == 1)", "sentSegmented": ["if", "task-", "pid", "1"], "sentSegmentedWithoutStops": ["task-", "pid", "1"], "sentSegmentedWithoutStopsStemmed": ["task-", "pid", "1"]}, {"number": 32029, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "+\t\treturn true;", "sentSegmented": ["return", "true"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32030, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " \tif (pid->hide_pid < hide_pid_min)", "sentSegmented": ["if", "pid-", "hide_pid", "hide_pid_min"], "sentSegmentedWithoutStops": ["pid-", "hide_pid", "hide_pid_min"], "sentSegmentedWithoutStopsStemmed": ["pid-", "hide_pid", "hide_pid_min"]}, {"number": 32031, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " \t\treturn true;", "sentSegmented": ["return", "true"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32032, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " \tif (in_group_p(pid->pid_gid))", "sentSegmented": ["if", "in_group_p", "pid-", "pid_gid"], "sentSegmentedWithoutStops": ["in_group_p", "pid-", "pid_gid"], "sentSegmentedWithoutStopsStemmed": ["in_group_p", "pid-", "pid_gid"]}, {"number": 32033, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "A drop in for systemd-logind.service", "sentSegmented": ["a", "drop", "in", "for", "systemd-logind.service"], "sentSegmentedWithoutStops": ["drop", "systemd-logind.service"], "sentSegmentedWithoutStopsStemmed": ["drop", "systemd-logind.servic"]}, {"number": 32034, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# Grant full access to all PIDs to systemd-logind", "sentSegmented": ["grant", "full", "access", "to", "all", "pids", "to", "systemd-logind"], "sentSegmentedWithoutStops": ["grant", "full", "access", "pids", "systemd-logind"], "sentSegmentedWithoutStopsStemmed": ["grant", "full", "access", "pid", "systemd-logind"]}, {"number": 32035, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "[Service]", "sentSegmented": ["service"], "sentSegmentedWithoutStops": ["service"], "sentSegmentedWithoutStopsStemmed": ["servic"]}, {"number": 32036, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "SupplementaryGroups=4", "sentSegmented": ["supplementarygroups=4"], "sentSegmentedWithoutStops": ["supplementarygroups=4"], "sentSegmentedWithoutStopsStemmed": ["supplementarygroups=4"]}, {"number": 32037, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "With both patches, the full test suite passes on my side.", "sentSegmented": ["with", "both", "patches", "the", "full", "test", "suite", "passes", "on", "my", "side"], "sentSegmentedWithoutStops": ["patches", "full", "test", "suite", "passes", "side"], "sentSegmentedWithoutStopsStemmed": ["patch", "full", "test", "suit", "pass", "side"]}, {"number": 32038, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Systemd user instances are working fine and the started process have only access there own PIDs and PID 1.", "sentSegmented": ["systemd", "user", "instances", "are", "working", "fine", "and", "the", "started", "process", "have", "only", "access", "there", "own", "pids", "and", "pid", "1"], "sentSegmentedWithoutStops": ["systemd", "user", "instances", "working", "fine", "started", "process", "access", "pids", "pid", "1"], "sentSegmentedWithoutStopsStemmed": ["systemd", "user", "instanc", "work", "fine", "start", "process", "access", "pid", "pid", "1"]}, {"number": 32039, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This may be missing a lot of (corner ?)", "sentSegmented": ["this", "may", "be", "missing", "a", "lot", "of", "corner"], "sentSegmentedWithoutStops": ["may", "missing", "lot", "corner"], "sentSegmentedWithoutStopsStemmed": ["may", "miss", "lot", "corner"]}, {"number": 32040, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "cases but this suggests that 'hidepid' support in systemd is not very far and might not require a rework in /proc.", "sentSegmented": ["cases", "but", "this", "suggests", "that", "'hidepid", "support", "in", "systemd", "is", "not", "very", "far", "and", "might", "not", "require", "a", "rework", "in", "/proc"], "sentSegmentedWithoutStops": ["cases", "suggests", "'hidepid", "support", "systemd", "far", "might", "require", "rework", "/proc"], "sentSegmentedWithoutStopsStemmed": ["case", "suggest", "'hidepid", "support", "systemd", "far", "might", "requir", "rework", "/proc"]}, {"number": 32041, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Not sure if proposing a new mount flag like \"showpid1\" for procfs would be acceptable on the kernel side though.", "sentSegmented": ["not", "sure", "if", "proposing", "a", "new", "mount", "flag", "like", "showpid1", "for", "procfs", "would", "be", "acceptable", "on", "the", "kernel", "side", "though"], "sentSegmentedWithoutStops": ["sure", "proposing", "new", "mount", "flag", "like", "showpid1", "procfs", "would", "acceptable", "kernel", "side", "though"], "sentSegmentedWithoutStopsStemmed": ["sure", "propos", "new", "mount", "flag", "like", "showpid1", "procf", "would", "accept", "kernel", "side", "though"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDgwMDk2NTIyOA==", "author": {"login": "Zocker1999NET"}, "body": "I fixed it on Linux 5.10 without patching the kernel, only by creating a special group `proc`, which has access to all process information by using following configuration in `/etc/fstab` with `gid=proc`:\r\n```\r\nproc /proc proc nosuid,nodev,noexec,hidepid=2,gid=proc 0 0\r\n```\r\n\r\nThen, to allow systemd-logind to access all processes, add a drop-in config for `systemd-logind.service` adding the supplement group `proc` to systemd-logind:\r\n```ini\r\n[Service]\r\nSupplementaryGroups=proc\r\n```\r\n\r\nAfter restarting the computer (or restarting systemd-logind), everything worked fine like before enabling `hidepid=2` as I observed it.", "bodyText": "I fixed it on Linux 5.10 without patching the kernel, only by creating a special group proc, which has access to all process information by using following configuration in /etc/fstab with gid=proc:\nproc /proc proc nosuid,nodev,noexec,hidepid=2,gid=proc 0 0\n\nThen, to allow systemd-logind to access all processes, add a drop-in config for systemd-logind.service adding the supplement group proc to systemd-logind:\n[Service]\nSupplementaryGroups=proc\nAfter restarting the computer (or restarting systemd-logind), everything worked fine like before enabling hidepid=2 as I observed it.", "bodyHTML": "<p>I fixed it on Linux 5.10 without patching the kernel, only by creating a special group <code>proc</code>, which has access to all process information by using following configuration in <code>/etc/fstab</code> with <code>gid=proc</code>:</p>\n<pre><code>proc /proc proc nosuid,nodev,noexec,hidepid=2,gid=proc 0 0\n</code></pre>\n<p>Then, to allow systemd-logind to access all processes, add a drop-in config for <code>systemd-logind.service</code> adding the supplement group <code>proc</code> to systemd-logind:</p>\n<div class=\"highlight highlight-source-ini\"><pre><span class=\"pl-en\">[Service]</span>\n<span class=\"pl-k\">SupplementaryGroups</span>=proc</pre></div>\n<p>After restarting the computer (or restarting systemd-logind), everything worked fine like before enabling <code>hidepid=2</code> as I observed it.</p>", "createdAt": "2021-03-17T10:18:54Z", "publishedAt": "2021-03-17T10:18:54Z", "lastEditedAt": "2021-03-17T10:19:27Z", "updatedAt": "2021-03-17T10:19:27Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32042, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I fixed it on Linux 5.10 without patching the kernel, only by creating a special group proc, which has access to all process information by using following configuration in /etc/fstab with gid=proc:", "sentSegmented": ["i", "fixed", "it", "on", "linux", "5.10", "without", "patching", "the", "kernel", "only", "by", "creating", "a", "special", "group", "proc", "which", "has", "access", "to", "all", "process", "information", "by", "using", "following", "configuration", "in", "/etc/fstab", "with", "gid=proc"], "sentSegmentedWithoutStops": ["fixed", "linux", "5.10", "without", "patching", "kernel", "creating", "special", "group", "proc", "access", "process", "information", "using", "following", "configuration", "/etc/fstab", "gid=proc"], "sentSegmentedWithoutStopsStemmed": ["fix", "linux", "5.10", "without", "patch", "kernel", "creat", "special", "group", "proc", "access", "process", "inform", "use", "follow", "configur", "/etc/fstab", "gid=proc"]}, {"number": 32043, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "proc /proc proc nosuid,nodev,noexec,hidepid=2,gid=proc 0 0", "sentSegmented": ["proc", "/proc", "proc", "nosuid", "nodev", "noexec", "hidepid=2", "gid=proc", "0", "0"], "sentSegmentedWithoutStops": ["proc", "/proc", "proc", "nosuid", "nodev", "noexec", "hidepid=2", "gid=proc", "0", "0"], "sentSegmentedWithoutStopsStemmed": ["proc", "/proc", "proc", "nosuid", "nodev", "noexec", "hidepid=2", "gid=proc", "0", "0"]}, {"number": 32044, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Then, to allow systemd-logind to access all processes, add a drop-in config for systemd-logind.service adding the supplement group proc to systemd-logind:", "sentSegmented": ["then", "to", "allow", "systemd-logind", "to", "access", "all", "processes", "add", "a", "drop-in", "config", "for", "systemd-logind.service", "adding", "the", "supplement", "group", "proc", "to", "systemd-logind"], "sentSegmentedWithoutStops": ["allow", "systemd-logind", "access", "processes", "add", "drop-in", "config", "systemd-logind.service", "adding", "supplement", "group", "proc", "systemd-logind"], "sentSegmentedWithoutStopsStemmed": ["allow", "systemd-logind", "access", "process", "add", "drop-in", "config", "systemd-logind.servic", "ad", "supplement", "group", "proc", "systemd-logind"]}, {"number": 32045, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "[Service]", "sentSegmented": ["service"], "sentSegmentedWithoutStops": ["service"], "sentSegmentedWithoutStopsStemmed": ["servic"]}, {"number": 32046, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "SupplementaryGroups=proc", "sentSegmented": ["supplementarygroups=proc"], "sentSegmentedWithoutStops": ["supplementarygroups=proc"], "sentSegmentedWithoutStopsStemmed": ["supplementarygroups=proc"]}, {"number": 32047, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "After restarting the computer (or restarting systemd-logind), everything worked fine like before enabling hidepid=2 as I observed it.", "sentSegmented": ["after", "restarting", "the", "computer", "or", "restarting", "systemd-logind", "everything", "worked", "fine", "like", "before", "enabling", "hidepid=2", "as", "i", "observed", "it"], "sentSegmentedWithoutStops": ["restarting", "computer", "restarting", "systemd-logind", "everything", "worked", "fine", "like", "enabling", "hidepid=2", "observed"], "sentSegmentedWithoutStopsStemmed": ["restart", "comput", "restart", "systemd-logind", "everyth", "work", "fine", "like", "enabl", "hidepid=2", "observ"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOL73CbA==", "hasNextPage": false}, "totalCount": 6}, "labels": {"edges": [{"node": {"createdAt": "2015-08-26T15:17:59Z", "name": "not-supported"}}]}, "milestone": null, "reactions": {"edges": []}, "state": "CLOSED", "titleSegmented": ["241", "no", "such", "process", "when", "starting", "user", "instance", "with", "hidepid=2", "and", "cgroupv2"], "titleSegmentedWithoutStops": ["241", "process", "starting", "user", "instance", "hidepid=2", "cgroupv2"], "titleSegmentedWithoutStopsStemmed": ["241", "process", "start", "user", "instanc", "hidepid=2", "cgroupv2"], "bodyParsed": [{"number": 31957, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "systemd version the issue has been seen with", "sentSegmented": ["systemd", "version", "the", "issue", "has", "been", "seen", "with"], "sentSegmentedWithoutStops": ["systemd", "version", "issue", "seen"], "sentSegmentedWithoutStopsStemmed": ["systemd", "version", "issu", "seen"]}, {"number": 31958, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "241", "sentSegmented": ["241"], "sentSegmentedWithoutStops": ["241"], "sentSegmentedWithoutStopsStemmed": ["241"]}, {"number": 31959, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Used distribution", "sentSegmented": ["used", "distribution"], "sentSegmentedWithoutStops": ["used", "distribution"], "sentSegmentedWithoutStopsStemmed": ["use", "distribut"]}, {"number": 31960, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Yocto, with an additional \"-Ddefault-hierarchy=unified\" build flag", "sentSegmented": ["yocto", "with", "an", "additional", "-ddefault-hierarchy=unified", "build", "flag"], "sentSegmentedWithoutStops": ["yocto", "additional", "-ddefault-hierarchy=unified", "build", "flag"], "sentSegmentedWithoutStopsStemmed": ["yocto", "addit", "-ddefault-hierarchy=unifi", "build", "flag"]}, {"number": 31961, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Expected behaviour you didn't see", "sentSegmented": ["expected", "behaviour", "you", "did", "n't", "see"], "sentSegmentedWithoutStops": ["expected", "behaviour", "n't", "see"], "sentSegmentedWithoutStopsStemmed": ["expect", "behaviour", "n't", "see"]}, {"number": 31962, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "user@xxxx.service should start", "sentSegmented": ["user", "xxxx.service", "should", "start"], "sentSegmentedWithoutStops": ["user", "xxxx.service", "start"], "sentSegmentedWithoutStopsStemmed": ["user", "xxxx.servic", "start"]}, {"number": 31963, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Unexpected behaviour you saw", "sentSegmented": ["unexpected", "behaviour", "you", "saw"], "sentSegmentedWithoutStops": ["unexpected", "behaviour", "saw"], "sentSegmentedWithoutStopsStemmed": ["unexpect", "behaviour", "saw"]}, {"number": 31964, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "user@xxxx.service is in state failed with the following logs", "sentSegmented": ["user", "xxxx.service", "is", "in", "state", "failed", "with", "the", "following", "logs"], "sentSegmentedWithoutStops": ["user", "xxxx.service", "state", "failed", "following", "logs"], "sentSegmentedWithoutStopsStemmed": ["user", "xxxx.servic", "state", "fail", "follow", "log"]}, {"number": 31965, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "root@machine:~# systemctl status user@xxxx.service", "sentSegmented": ["root", "machine", "systemctl", "status", "user", "xxxx.service"], "sentSegmentedWithoutStops": ["root", "machine", "systemctl", "status", "user", "xxxx.service"], "sentSegmentedWithoutStopsStemmed": ["root", "machin", "systemctl", "statu", "user", "xxxx.servic"]}, {"number": 31966, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\u25cf user@xxxx.service - User Manager for UID xxxx", "sentSegmented": ["user", "xxxx.service", "user", "manager", "for", "uid", "xxxx"], "sentSegmentedWithoutStops": ["user", "xxxx.service", "user", "manager", "uid", "xxxx"], "sentSegmentedWithoutStopsStemmed": ["user", "xxxx.servic", "user", "manag", "uid", "xxxx"]}, {"number": 31967, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   Loaded: loaded (/lib/systemd/system/user@.service; static; vendor preset: enabled)", "sentSegmented": ["loaded", "loaded", "/lib/systemd/system/user", ".service", "static", "vendor", "preset", "enabled"], "sentSegmentedWithoutStops": ["loaded", "loaded", "/lib/systemd/system/user", ".service", "vendor", "preset", "enabled"], "sentSegmentedWithoutStopsStemmed": ["load", "load", "/lib/systemd/system/us", ".servic", "vendor", "preset", "enabl"]}, {"number": 31968, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   Active: failed (Result: protocol) since Thu 2019-07-04 09:00:23 UTC; 2min 28s ago", "sentSegmented": ["active", "failed", "result", "protocol", "since", "thu", "2019-07-04", "09:00:23", "utc", "2min", "28s", "ago"], "sentSegmentedWithoutStops": ["active", "failed", "result", "since", "thu", "2019-07-04", "09:00:23", "utc", "2min", "28s", "ago"], "sentSegmentedWithoutStopsStemmed": ["activ", "fail", "result", "sinc", "thu", "2019-07-04", "09:00:23", "utc", "2min", "28", "ago"]}, {"number": 31969, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     Docs: man:user@.service(5)", "sentSegmented": ["docs", "man", "user", ".service", "5"], "sentSegmentedWithoutStops": ["docs", "man", "user", ".service", "5"], "sentSegmentedWithoutStopsStemmed": ["doc", "man", "user", ".servic", "5"]}, {"number": 31970, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  Process: 1433 ExecStart=/lib/systemd/systemd --user (code=exited, status=1/FAILURE)", "sentSegmented": ["process", "1433", "execstart=/lib/systemd/systemd", "user", "code=exited", "status=1/failure"], "sentSegmentedWithoutStops": ["process", "1433", "execstart=/lib/systemd/systemd", "user", "code=exited", "status=1/failure"], "sentSegmentedWithoutStopsStemmed": ["process", "1433", "execstart=/lib/systemd/systemd", "user", "code=exit", "status=1/failur"]}, {"number": 31971, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " Main PID: 1433 (code=exited, status=1/FAILURE)", "sentSegmented": ["main", "pid", "1433", "code=exited", "status=1/failure"], "sentSegmentedWithoutStops": ["pid", "1433", "code=exited", "status=1/failure"], "sentSegmentedWithoutStopsStemmed": ["pid", "1433", "code=exit", "status=1/failur"]}, {"number": 31972, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      CPU: 5ms", "sentSegmented": ["cpu", "5ms"], "sentSegmentedWithoutStops": ["cpu", "5ms"], "sentSegmentedWithoutStopsStemmed": ["cpu", "5m"]}, {"number": 31973, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Jul 04 09:00:23 machine systemd[1]: Starting User Manager for UID xxxx...", "sentSegmented": ["jul", "04", "09:00:23", "machine", "systemd", "1", "starting", "user", "manager", "for", "uid", "xxxx"], "sentSegmentedWithoutStops": ["jul", "04", "09:00:23", "machine", "systemd", "1", "starting", "user", "manager", "uid", "xxxx"], "sentSegmentedWithoutStopsStemmed": ["jul", "04", "09:00:23", "machin", "systemd", "1", "start", "user", "manag", "uid", "xxxx"]}, {"number": 31974, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Jul 04 09:00:23 machine systemd[1433]: Failed to determine supported controllers: No such process", "sentSegmented": ["jul", "04", "09:00:23", "machine", "systemd", "1433", "failed", "to", "determine", "supported", "controllers", "no", "such", "process"], "sentSegmentedWithoutStops": ["jul", "04", "09:00:23", "machine", "systemd", "1433", "failed", "determine", "supported", "controllers", "process"], "sentSegmentedWithoutStopsStemmed": ["jul", "04", "09:00:23", "machin", "systemd", "1433", "fail", "determin", "support", "control", "process"]}, {"number": 31975, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Jul 04 09:00:23 machine systemd[1433]: Failed to allocate manager object: No such process", "sentSegmented": ["jul", "04", "09:00:23", "machine", "systemd", "1433", "failed", "to", "allocate", "manager", "object", "no", "such", "process"], "sentSegmentedWithoutStops": ["jul", "04", "09:00:23", "machine", "systemd", "1433", "failed", "allocate", "manager", "object", "process"], "sentSegmentedWithoutStopsStemmed": ["jul", "04", "09:00:23", "machin", "systemd", "1433", "fail", "alloc", "manag", "object", "process"]}, {"number": 31976, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Jul 04 09:00:23 machine systemd[1]: user@xxxx.service: Failed with result 'protocol'.", "sentSegmented": ["jul", "04", "09:00:23", "machine", "systemd", "1", "user", "xxxx.service", "failed", "with", "result", "'protocol"], "sentSegmentedWithoutStops": ["jul", "04", "09:00:23", "machine", "systemd", "1", "user", "xxxx.service", "failed", "result", "'protocol"], "sentSegmentedWithoutStopsStemmed": ["jul", "04", "09:00:23", "machin", "systemd", "1", "user", "xxxx.servic", "fail", "result", "'protocol"]}, {"number": 31977, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Jul 04 09:00:23 machine systemd[1]: Failed to start User Manager for UID xxxx.", "sentSegmented": ["jul", "04", "09:00:23", "machine", "systemd", "1", "failed", "to", "start", "user", "manager", "for", "uid", "xxxx"], "sentSegmentedWithoutStops": ["jul", "04", "09:00:23", "machine", "systemd", "1", "failed", "start", "user", "manager", "uid", "xxxx"], "sentSegmentedWithoutStopsStemmed": ["jul", "04", "09:00:23", "machin", "systemd", "1", "fail", "start", "user", "manag", "uid", "xxxx"]}, {"number": 31978, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Jul 04 09:00:23 machine systemd[1]: user@xxxx.service: Consumed 5ms CPU time.", "sentSegmented": ["jul", "04", "09:00:23", "machine", "systemd", "1", "user", "xxxx.service", "consumed", "5ms", "cpu", "time"], "sentSegmentedWithoutStops": ["jul", "04", "09:00:23", "machine", "systemd", "1", "user", "xxxx.service", "consumed", "5ms", "cpu"], "sentSegmentedWithoutStopsStemmed": ["jul", "04", "09:00:23", "machin", "systemd", "1", "user", "xxxx.servic", "consum", "5m", "cpu"]}, {"number": 31979, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Steps to reproduce the problem", "sentSegmented": ["steps", "to", "reproduce", "the", "problem"], "sentSegmentedWithoutStops": ["steps", "reproduce", "problem"], "sentSegmentedWithoutStopsStemmed": ["step", "reproduc", "problem"]}, {"number": 31980, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "mount -oremount,gid=4,hidepid=2 /proc", "sentSegmented": ["mount", "-oremount", "gid=4", "hidepid=2", "/proc"], "sentSegmentedWithoutStops": ["mount", "-oremount", "gid=4", "hidepid=2", "/proc"], "sentSegmentedWithoutStopsStemmed": ["mount", "-oremount", "gid=4", "hidepid=2", "/proc"]}, {"number": 31981, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/bin/loginctl enable-linger user-xxxx", "sentSegmented": ["/bin/loginctl", "enable-linger", "user-xxxx"], "sentSegmentedWithoutStops": ["/bin/loginctl", "enable-linger", "user-xxxx"], "sentSegmentedWithoutStopsStemmed": ["/bin/loginctl", "enable-ling", "user-xxxx"]}, {"number": 31982, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "We are using the \"unified\" hierarchy, not sure whether it makes any difference", "sentSegmented": ["we", "are", "using", "the", "unified", "hierarchy", "not", "sure", "whether", "it", "makes", "any", "difference"], "sentSegmentedWithoutStops": ["using", "unified", "hierarchy", "sure", "whether", "makes", "difference"], "sentSegmentedWithoutStopsStemmed": ["use", "unifi", "hierarchi", "sure", "whether", "make", "differ"]}, {"number": 31983, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Workaround", "sentSegmented": ["workaround"], "sentSegmentedWithoutStops": ["workaround"], "sentSegmentedWithoutStopsStemmed": ["workaround"]}, {"number": 31984, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This can be worked-around by adding SupplementaryGroups=4 to", "sentSegmented": ["this", "can", "be", "worked-around", "by", "adding", "supplementarygroups=4", "to"], "sentSegmentedWithoutStops": ["worked-around", "adding", "supplementarygroups=4"], "sentSegmentedWithoutStopsStemmed": ["worked-around", "ad", "supplementarygroups=4"]}, {"number": 31985, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "user@.service", "sentSegmented": ["user", ".service"], "sentSegmentedWithoutStops": ["user", ".service"], "sentSegmentedWithoutStopsStemmed": ["user", ".servic"]}, {"number": 31986, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "systemd-logind.service", "sentSegmented": ["systemd-logind.service"], "sentSegmentedWithoutStops": ["systemd-logind.service"], "sentSegmentedWithoutStopsStemmed": ["systemd-logind.servic"]}, {"number": 31987, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(Original hint from https://github.com/pld-linux/systemd/blob/master/proc-hidepid.patch)", "sentSegmented": ["original", "hint", "from", "https", "//github.com/pld-linux/systemd/blob/master/proc-hidepid.patch"], "sentSegmentedWithoutStops": ["original", "hint", "https", "//github.com/pld-linux/systemd/blob/master/proc-hidepid.patch"], "sentSegmentedWithoutStopsStemmed": ["origin", "hint", "http", "//github.com/pld-linux/systemd/blob/master/proc-hidepid.patch"]}, {"number": 31988, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But, in this case, all user processes created by systemd user instance have the supplementary group 4, which reduces the usefulness of the 'hidepid=2' feature.", "sentSegmented": ["but", "in", "this", "case", "all", "user", "processes", "created", "by", "systemd", "user", "instance", "have", "the", "supplementary", "group", "4", "which", "reduces", "the", "usefulness", "of", "the", "'hidepid=2", "feature"], "sentSegmentedWithoutStops": ["case", "user", "processes", "created", "systemd", "user", "instance", "supplementary", "group", "4", "reduces", "usefulness", "'hidepid=2", "feature"], "sentSegmentedWithoutStopsStemmed": ["case", "user", "process", "creat", "systemd", "user", "instanc", "supplementari", "group", "4", "reduc", "use", "'hidepid=2", "featur"]}, {"number": 31989, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It does not however affect sessions opened via SSH so that there is still some benefit :)", "sentSegmented": ["it", "does", "not", "however", "affect", "sessions", "opened", "via", "ssh", "so", "that", "there", "is", "still", "some", "benefit"], "sentSegmentedWithoutStops": ["however", "affect", "sessions", "opened", "via", "ssh", "still", "benefit"], "sentSegmentedWithoutStopsStemmed": ["howev", "affect", "session", "open", "via", "ssh", "still", "benefit"]}, {"number": 31990, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Is there any way to avoid propagating the supplementary group to the child processes or, is there a way to avoid needing the patch at least on the user@.service (which I believe, would 'fix' the 'leak') ?", "sentSegmented": ["is", "there", "any", "way", "to", "avoid", "propagating", "the", "supplementary", "group", "to", "the", "child", "processes", "or", "is", "there", "a", "way", "to", "avoid", "needing", "the", "patch", "at", "least", "on", "the", "user", ".service", "which", "i", "believe", "would", "'fix", "the", "'leak"], "sentSegmentedWithoutStops": ["way", "avoid", "propagating", "supplementary", "group", "child", "processes", "way", "avoid", "needing", "patch", "least", "user", ".service", "believe", "would", "'fix", "'leak"], "sentSegmentedWithoutStopsStemmed": ["way", "avoid", "propag", "supplementari", "group", "child", "process", "way", "avoid", "need", "patch", "least", "user", ".servic", "believ", "would", "'fix", "'leak"]}, {"number": 31991, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'd naively imagine that the user instance could query the system instance for the info it needs :)", "sentSegmented": ["i", "'d", "naively", "imagine", "that", "the", "user", "instance", "could", "query", "the", "system", "instance", "for", "the", "info", "it", "needs"], "sentSegmentedWithoutStops": ["'d", "naively", "imagine", "user", "instance", "could", "query", "system", "instance", "info", "needs"], "sentSegmentedWithoutStopsStemmed": ["'d", "naiv", "imagin", "user", "instanc", "could", "queri", "system", "instanc", "info", "need"]}, {"number": 31992, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks,", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}]}