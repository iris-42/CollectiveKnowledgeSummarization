{"repository": {"owner": {"login": "systemd"}, "name": "systemd", "forkCount": 2494, "stargazerCount": 7830, "createdAt": "2015-03-25T15:27:27Z", "updatedAt": "2021-03-10T22:55:53Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "systemd"}}}, {"node": {"topic": {"name": "c"}}}, {"node": {"topic": {"name": "linux"}}}, {"node": {"topic": {"name": "init"}}}, {"node": {"topic": {"name": "services"}}}, {"node": {"topic": {"name": "system"}}}]}, "languages": {"edges": [{"node": {"name": "Emacs Lisp"}}, {"node": {"name": "Vim script"}}, {"node": {"name": "Python"}}, {"node": {"name": "Makefile"}}, {"node": {"name": "Shell"}}, {"node": {"name": "Meson"}}, {"node": {"name": "M4"}}, {"node": {"name": "Perl"}}, {"node": {"name": "C"}}, {"node": {"name": "Awk"}}, {"node": {"name": "C++"}}, {"node": {"name": "Objective-C"}}, {"node": {"name": "HTML"}}, {"node": {"name": "sed"}}, {"node": {"name": "SmPL"}}, {"node": {"name": "CodeQL"}}]}, "primaryLanguage": {"name": "C"}}, "id": "MDU6SXNzdWU0ODE3NDI5NzY=", "number": 13333, "author": {"login": "teran-mckinney"}, "title": "Ability to hide systemd processes from users (like hidepid=2 for /proc)", "body": "Hi Poettering and all,\r\n\r\nI already run my systems with /proc mounted with hidepid=2 so that any intentional or accidental passwords on the command line don't show up in the process table, among other reasons. Each user can only see their own process table which makes sense.\r\n\r\nNow, I'd like to get [rqlited](https://github.com/rqlite/rqlite/blob/master/DOC/SECURITY.md#secure-cluster-example) going with authentication while running under systemd. It's partly in vain if every user on the system can see the password through `systemd status`.\r\n\r\nThis is largely related to: \"Configuration file %s is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.\"\r\nhttps://github.com/systemd/systemd/blob/6fd79cca68a170c88e87b5d95cd7a44953df94e2/src/basic/fs-util.c#L319\r\n\r\nIt seems like this is because of how /sys/fs/cgroup/systemd is mounted. If it was mounted with mode=0700, only root would be able to see it.\r\n\r\nIs it possible to adjust that? That and to set my service files to 0600 so users can't read them?\r\n\r\nEven if I made a script that then executes a command requiring a password on the command line, that still shows up in `systemd service`. But being able to have 0600 .service files without warnings and /sys/fs/cgroupd/systemd mounted 0700 would be nice. I guess it might impact systemd user services? In my case not immediately a big deal.\r\n\r\nIf this isn't a good solution, could you give me another recommendation?\r\n\r\nThis seems related: https://github.com/systemd/systemd/issues/12955\r\n\r\nHere @poettering is saying that hidepid=2 doesn't work with systemd. Obviously that isn't true in every case (at least with the version on Debian 9) as I've been using it with hidepid=2 for ages.\r\n\r\nAlso related: https://github.com/systemd/systemd/pull/11670\r\n\r\nWhat is PrivatePIDS? I can't find information about it.\r\n\r\nThank you for your time.\r\n\r\n-Teran", "bodyHTML": "<p>Hi Poettering and all,</p>\n<p>I already run my systems with /proc mounted with hidepid=2 so that any intentional or accidental passwords on the command line don't show up in the process table, among other reasons. Each user can only see their own process table which makes sense.</p>\n<p>Now, I'd like to get <a href=\"https://github.com/rqlite/rqlite/blob/master/DOC/SECURITY.md#secure-cluster-example\">rqlited</a> going with authentication while running under systemd. It's partly in vain if every user on the system can see the password through <code>systemd status</code>.</p>\n<p>This is largely related to: \"Configuration file %s is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.\"<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-secondary\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/systemd/systemd/blob/6fd79cca68a170c88e87b5d95cd7a44953df94e2/src/basic/fs-util.c#L319\">systemd/src/basic/fs-util.c</a>\n    </p>\n    <p class=\"mb-0 color-text-tertiary\">\n         Line 319\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/systemd/systemd/commit/6fd79cca68a170c88e87b5d95cd7a44953df94e2\">6fd79cc</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L319\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"319\"></td>\n          <td id=\"LC319\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\"> <span class=\"pl-c1\">log_warning</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Configuration file <span class=\"pl-c1\">%s</span> is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.<span class=\"pl-pds\">\"</span></span>, path); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>It seems like this is because of how /sys/fs/cgroup/systemd is mounted. If it was mounted with mode=0700, only root would be able to see it.</p>\n<p>Is it possible to adjust that? That and to set my service files to 0600 so users can't read them?</p>\n<p>Even if I made a script that then executes a command requiring a password on the command line, that still shows up in <code>systemd service</code>. But being able to have 0600 .service files without warnings and /sys/fs/cgroupd/systemd mounted 0700 would be nice. I guess it might impact systemd user services? In my case not immediately a big deal.</p>\n<p>If this isn't a good solution, could you give me another recommendation?</p>\n<p>This seems related: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"464186465\" data-permission-text=\"Title is private\" data-url=\"https://github.com/systemd/systemd/issues/12955\" data-hovercard-type=\"issue\" data-hovercard-url=\"/systemd/systemd/issues/12955/hovercard\" href=\"https://github.com/systemd/systemd/issues/12955\">#12955</a></p>\n<p>Here <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/poettering/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/poettering\">@poettering</a> is saying that hidepid=2 doesn't work with systemd. Obviously that isn't true in every case (at least with the version on Debian 9) as I've been using it with hidepid=2 for ages.</p>\n<p>Also related: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"407919263\" data-permission-text=\"Title is private\" data-url=\"https://github.com/systemd/systemd/issues/11670\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/systemd/systemd/pull/11670/hovercard\" href=\"https://github.com/systemd/systemd/pull/11670\">#11670</a></p>\n<p>What is PrivatePIDS? I can't find information about it.</p>\n<p>Thank you for your time.</p>\n<p>-Teran</p>", "bodyText": "Hi Poettering and all,\nI already run my systems with /proc mounted with hidepid=2 so that any intentional or accidental passwords on the command line don't show up in the process table, among other reasons. Each user can only see their own process table which makes sense.\nNow, I'd like to get rqlited going with authentication while running under systemd. It's partly in vain if every user on the system can see the password through systemd status.\nThis is largely related to: \"Configuration file %s is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.\"\n\n  \n    \n      systemd/src/basic/fs-util.c\n    \n    \n         Line 319\n      in\n      6fd79cc\n    \n    \n    \n    \n\n        \n          \n           log_warning(\"Configuration file %s is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.\", path); \n        \n    \n  \n\n\nIt seems like this is because of how /sys/fs/cgroup/systemd is mounted. If it was mounted with mode=0700, only root would be able to see it.\nIs it possible to adjust that? That and to set my service files to 0600 so users can't read them?\nEven if I made a script that then executes a command requiring a password on the command line, that still shows up in systemd service. But being able to have 0600 .service files without warnings and /sys/fs/cgroupd/systemd mounted 0700 would be nice. I guess it might impact systemd user services? In my case not immediately a big deal.\nIf this isn't a good solution, could you give me another recommendation?\nThis seems related: #12955\nHere @poettering is saying that hidepid=2 doesn't work with systemd. Obviously that isn't true in every case (at least with the version on Debian 9) as I've been using it with hidepid=2 for ages.\nAlso related: #11670\nWhat is PrivatePIDS? I can't find information about it.\nThank you for your time.\n-Teran", "assignees": {"edges": []}, "createdAt": "2019-08-16T19:01:13Z", "closed": true, "closedAt": "2019-08-17T07:58:54Z", "lastEditedAt": null, "publishedAt": "2019-08-16T19:01:13Z", "comments": {"totalCount": 1, "edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDUyMjIxNTA0MQ==", "author": {"login": "topimiettinen"}, "body": "Using command line for secrets has been a bad idea forever. But I think rqlite does not require or promote that. In the example the password is in  `/etc/rqlited/config.json`, which should not be world readable. There's no need to restrict the permissions of other files.\r\n\r\nI proposed PrivatePIDS as a new feature in #11670, based on PID namespaces. However, the preferred approach is to wait for @tixxdz's `/proc` patches for kernel to be finalized (@legionus?), which allows `/proc` mount options (like hidepid=2) to be changed per task.\r\n\r\nI think this issue is a duplicate of #12955, closing.", "bodyText": "Using command line for secrets has been a bad idea forever. But I think rqlite does not require or promote that. In the example the password is in  /etc/rqlited/config.json, which should not be world readable. There's no need to restrict the permissions of other files.\nI proposed PrivatePIDS as a new feature in #11670, based on PID namespaces. However, the preferred approach is to wait for @tixxdz's /proc patches for kernel to be finalized (@legionus?), which allows /proc mount options (like hidepid=2) to be changed per task.\nI think this issue is a duplicate of #12955, closing.", "bodyHTML": "<p>Using command line for secrets has been a bad idea forever. But I think rqlite does not require or promote that. In the example the password is in  <code>/etc/rqlited/config.json</code>, which should not be world readable. There's no need to restrict the permissions of other files.</p>\n<p>I proposed PrivatePIDS as a new feature in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"407919263\" data-permission-text=\"Title is private\" data-url=\"https://github.com/systemd/systemd/issues/11670\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/systemd/systemd/pull/11670/hovercard\" href=\"https://github.com/systemd/systemd/pull/11670\">#11670</a>, based on PID namespaces. However, the preferred approach is to wait for <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/tixxdz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tixxdz\">@tixxdz</a>'s <code>/proc</code> patches for kernel to be finalized (<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/legionus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/legionus\">@legionus</a>?), which allows <code>/proc</code> mount options (like hidepid=2) to be changed per task.</p>\n<p>I think this issue is a duplicate of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"464186465\" data-permission-text=\"Title is private\" data-url=\"https://github.com/systemd/systemd/issues/12955\" data-hovercard-type=\"issue\" data-hovercard-url=\"/systemd/systemd/issues/12955/hovercard\" href=\"https://github.com/systemd/systemd/issues/12955\">#12955</a>, closing.</p>", "createdAt": "2019-08-17T07:58:54Z", "publishedAt": "2019-08-17T07:58:54Z", "lastEditedAt": null, "updatedAt": "2019-08-17T07:58:54Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32081, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Using command line for secrets has been a bad idea forever.", "sentSegmented": ["using", "command", "line", "for", "secrets", "has", "been", "a", "bad", "idea", "forever"], "sentSegmentedWithoutStops": ["using", "command", "line", "secrets", "bad", "idea", "forever"], "sentSegmentedWithoutStopsStemmed": ["use", "command", "line", "secret", "bad", "idea", "forev"]}, {"number": 32082, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But I think rqlite does not require or promote that.", "sentSegmented": ["but", "i", "think", "rqlite", "does", "not", "require", "or", "promote", "that"], "sentSegmentedWithoutStops": ["think", "rqlite", "require", "promote"], "sentSegmentedWithoutStopsStemmed": ["think", "rqlite", "requir", "promot"]}, {"number": 32083, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In the example the password is in  /etc/rqlited/config.json, which should not be world readable.", "sentSegmented": ["in", "the", "example", "the", "password", "is", "in", "/etc/rqlited/config.json", "which", "should", "not", "be", "world", "readable"], "sentSegmentedWithoutStops": ["example", "password", "/etc/rqlited/config.json", "world", "readable"], "sentSegmentedWithoutStopsStemmed": ["exampl", "password", "/etc/rqlited/config.json", "world", "readabl"]}, {"number": 32084, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "There's no need to restrict the permissions of other files.", "sentSegmented": ["there", "'s", "no", "need", "to", "restrict", "the", "permissions", "of", "other", "files"], "sentSegmentedWithoutStops": ["'s", "need", "restrict", "permissions", "files"], "sentSegmentedWithoutStopsStemmed": ["'s", "need", "restrict", "permiss", "file"]}, {"number": 32085, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I proposed PrivatePIDS as a new feature in #11670, based on PID namespaces.", "sentSegmented": ["i", "proposed", "privatepids", "as", "a", "new", "feature", "in", "11670", "based", "on", "pid", "namespaces"], "sentSegmentedWithoutStops": ["proposed", "privatepids", "new", "feature", "11670", "based", "pid", "namespaces"], "sentSegmentedWithoutStopsStemmed": ["propos", "privatepid", "new", "featur", "11670", "base", "pid", "namespac"]}, {"number": 32086, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "However, the preferred approach is to wait for @tixxdz's /proc patches for kernel to be finalized (@legionus?", "sentSegmented": ["however", "the", "preferred", "approach", "is", "to", "wait", "for", "tixxdz", "'s", "/proc", "patches", "for", "kernel", "to", "be", "finalized", "legionus"], "sentSegmentedWithoutStops": ["however", "preferred", "approach", "wait", "tixxdz", "'s", "/proc", "patches", "kernel", "finalized", "legionus"], "sentSegmentedWithoutStopsStemmed": ["howev", "prefer", "approach", "wait", "tixxdz", "'s", "/proc", "patch", "kernel", "final", "legionu"]}, {"number": 32087, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "), which allows /proc mount options (like hidepid=2) to be changed per task.", "sentSegmented": ["which", "allows", "/proc", "mount", "options", "like", "hidepid=2", "to", "be", "changed", "per", "task"], "sentSegmentedWithoutStops": ["allows", "/proc", "mount", "options", "like", "hidepid=2", "changed", "per", "task"], "sentSegmentedWithoutStopsStemmed": ["allow", "/proc", "mount", "option", "like", "hidepid=2", "chang", "per", "task"]}, {"number": 32088, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I think this issue is a duplicate of #12955, closing.", "sentSegmented": ["i", "think", "this", "issue", "is", "a", "duplicate", "of", "12955", "closing"], "sentSegmentedWithoutStops": ["think", "issue", "duplicate", "12955", "closing"], "sentSegmentedWithoutStopsStemmed": ["think", "issu", "duplic", "12955", "close"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOHyBegQ==", "hasNextPage": false}}, "labels": {"edges": [{"node": {"createdAt": "2015-08-30T12:53:59Z", "name": "duplicate"}}, {"node": {"createdAt": "2015-08-26T15:17:59Z", "name": "not-supported"}}]}, "milestone": null, "reactions": {"edges": []}, "state": "CLOSED", "titleSegmented": ["ability", "to", "hide", "systemd", "processes", "from", "users", "like", "hidepid=2", "for", "/proc"], "titleSegmentedWithoutStops": ["ability", "hide", "systemd", "processes", "users", "like", "hidepid=2", "/proc"], "titleSegmentedWithoutStopsStemmed": ["abil", "hide", "systemd", "process", "user", "like", "hidepid=2", "/proc"], "bodyParsed": [{"number": 32048, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hi Poettering and all,", "sentSegmented": ["hi", "poettering", "and", "all"], "sentSegmentedWithoutStops": ["hi", "poettering"], "sentSegmentedWithoutStopsStemmed": ["hi", "poetter"]}, {"number": 32049, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I already run my systems with /proc mounted with hidepid=2 so that any intentional or accidental passwords on the command line don't show up in the process table, among other reasons.", "sentSegmented": ["i", "already", "run", "my", "systems", "with", "/proc", "mounted", "with", "hidepid=2", "so", "that", "any", "intentional", "or", "accidental", "passwords", "on", "the", "command", "line", "do", "n't", "show", "up", "in", "the", "process", "table", "among", "other", "reasons"], "sentSegmentedWithoutStops": ["already", "run", "systems", "/proc", "mounted", "hidepid=2", "intentional", "accidental", "passwords", "command", "line", "n't", "show", "process", "table", "among", "reasons"], "sentSegmentedWithoutStopsStemmed": ["alreadi", "run", "system", "/proc", "mount", "hidepid=2", "intent", "accident", "password", "command", "line", "n't", "show", "process", "tabl", "among", "reason"]}, {"number": 32050, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Each user can only see their own process table which makes sense.", "sentSegmented": ["each", "user", "can", "only", "see", "their", "own", "process", "table", "which", "makes", "sense"], "sentSegmentedWithoutStops": ["user", "see", "process", "table", "makes", "sense"], "sentSegmentedWithoutStopsStemmed": ["user", "see", "process", "tabl", "make", "sens"]}, {"number": 32051, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Now, I'd like to get rqlited going with authentication while running under systemd.", "sentSegmented": ["now", "i", "'d", "like", "to", "get", "rqlited", "going", "with", "authentication", "while", "running", "under", "systemd"], "sentSegmentedWithoutStops": ["'d", "like", "get", "rqlited", "going", "authentication", "running", "systemd"], "sentSegmentedWithoutStopsStemmed": ["'d", "like", "get", "rqlite", "go", "authent", "run", "systemd"]}, {"number": 32052, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's partly in vain if every user on the system can see the password through systemd status.", "sentSegmented": ["it", "'s", "partly", "in", "vain", "if", "every", "user", "on", "the", "system", "can", "see", "the", "password", "through", "systemd", "status"], "sentSegmentedWithoutStops": ["'s", "partly", "vain", "every", "user", "system", "see", "password", "systemd", "status"], "sentSegmentedWithoutStopsStemmed": ["'s", "partli", "vain", "everi", "user", "system", "see", "password", "systemd", "statu"]}, {"number": 32053, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This is largely related to: \"Configuration file %s is marked world-inaccessible.", "sentSegmented": ["this", "is", "largely", "related", "to", "configuration", "file", "s", "is", "marked", "world-inaccessible"], "sentSegmentedWithoutStops": ["largely", "related", "configuration", "file", "marked", "world-inaccessible"], "sentSegmentedWithoutStopsStemmed": ["larg", "relat", "configur", "file", "mark", "world-inaccess"]}, {"number": 32054, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This has no effect as configuration data is accessible via APIs without restrictions.", "sentSegmented": ["this", "has", "no", "effect", "as", "configuration", "data", "is", "accessible", "via", "apis", "without", "restrictions"], "sentSegmentedWithoutStops": ["effect", "configuration", "data", "accessible", "via", "apis", "without", "restrictions"], "sentSegmentedWithoutStopsStemmed": ["effect", "configur", "data", "access", "via", "api", "without", "restrict"]}, {"number": 32055, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Proceeding anyway.\"", "sentSegmented": ["proceeding", "anyway"], "sentSegmentedWithoutStops": ["proceeding", "anyway"], "sentSegmentedWithoutStopsStemmed": ["proceed", "anyway"]}, {"number": 32056, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "systemd/src/basic/fs-util.c", "sentSegmented": ["systemd/src/basic/fs-util.c"], "sentSegmentedWithoutStops": ["systemd/src/basic/fs-util.c"], "sentSegmentedWithoutStopsStemmed": ["systemd/src/basic/fs-util.c"]}, {"number": 32057, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "         Line 319", "sentSegmented": ["line", "319"], "sentSegmentedWithoutStops": ["line", "319"], "sentSegmentedWithoutStopsStemmed": ["line", "319"]}, {"number": 32058, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      in", "sentSegmented": ["in"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32059, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      6fd79cc", "sentSegmented": ["6fd79cc"], "sentSegmentedWithoutStops": ["6fd79cc"], "sentSegmentedWithoutStopsStemmed": ["6fd79cc"]}, {"number": 32060, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " log_warning(\"Configuration file %s is marked world-inaccessible.", "sentSegmented": ["log_warning", "configuration", "file", "s", "is", "marked", "world-inaccessible"], "sentSegmentedWithoutStops": ["log_warning", "configuration", "file", "marked", "world-inaccessible"], "sentSegmentedWithoutStopsStemmed": ["log_warn", "configur", "file", "mark", "world-inaccess"]}, {"number": 32061, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This has no effect as configuration data is accessible via APIs without restrictions.", "sentSegmented": ["this", "has", "no", "effect", "as", "configuration", "data", "is", "accessible", "via", "apis", "without", "restrictions"], "sentSegmentedWithoutStops": ["effect", "configuration", "data", "accessible", "via", "apis", "without", "restrictions"], "sentSegmentedWithoutStopsStemmed": ["effect", "configur", "data", "access", "via", "api", "without", "restrict"]}, {"number": 32062, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Proceeding anyway.", "sentSegmented": ["proceeding", "anyway"], "sentSegmentedWithoutStops": ["proceeding", "anyway"], "sentSegmentedWithoutStopsStemmed": ["proceed", "anyway"]}, {"number": 32063, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\", path);", "sentSegmented": ["path"], "sentSegmentedWithoutStops": ["path"], "sentSegmentedWithoutStopsStemmed": ["path"]}, {"number": 32064, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It seems like this is because of how /sys/fs/cgroup/systemd is mounted.", "sentSegmented": ["it", "seems", "like", "this", "is", "because", "of", "how", "/sys/fs/cgroup/systemd", "is", "mounted"], "sentSegmentedWithoutStops": ["seems", "like", "/sys/fs/cgroup/systemd", "mounted"], "sentSegmentedWithoutStopsStemmed": ["seem", "like", "/sys/fs/cgroup/systemd", "mount"]}, {"number": 32065, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If it was mounted with mode=0700, only root would be able to see it.", "sentSegmented": ["if", "it", "was", "mounted", "with", "mode=0700", "only", "root", "would", "be", "able", "to", "see", "it"], "sentSegmentedWithoutStops": ["mounted", "mode=0700", "root", "would", "able", "see"], "sentSegmentedWithoutStopsStemmed": ["mount", "mode=0700", "root", "would", "abl", "see"]}, {"number": 32066, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Is it possible to adjust that?", "sentSegmented": ["is", "it", "possible", "to", "adjust", "that"], "sentSegmentedWithoutStops": ["possible", "adjust"], "sentSegmentedWithoutStopsStemmed": ["possibl", "adjust"]}, {"number": 32067, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "That and to set my service files to 0600 so users can't read them?", "sentSegmented": ["that", "and", "to", "set", "my", "service", "files", "to", "0600", "so", "users", "ca", "n't", "read", "them"], "sentSegmentedWithoutStops": ["set", "service", "files", "0600", "users", "ca", "n't", "read"], "sentSegmentedWithoutStopsStemmed": ["set", "servic", "file", "0600", "user", "ca", "n't", "read"]}, {"number": 32068, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Even if I made a script that then executes a command requiring a password on the command line, that still shows up in systemd service.", "sentSegmented": ["even", "if", "i", "made", "a", "script", "that", "then", "executes", "a", "command", "requiring", "a", "password", "on", "the", "command", "line", "that", "still", "shows", "up", "in", "systemd", "service"], "sentSegmentedWithoutStops": ["even", "made", "script", "executes", "command", "requiring", "password", "command", "line", "still", "shows", "systemd", "service"], "sentSegmentedWithoutStopsStemmed": ["even", "made", "script", "execut", "command", "requir", "password", "command", "line", "still", "show", "systemd", "servic"]}, {"number": 32069, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But being able to have 0600 .service files without warnings and /sys/fs/cgroupd/systemd mounted 0700 would be nice.", "sentSegmented": ["but", "being", "able", "to", "have", "0600", ".service", "files", "without", "warnings", "and", "/sys/fs/cgroupd/systemd", "mounted", "0700", "would", "be", "nice"], "sentSegmentedWithoutStops": ["able", "0600", ".service", "files", "without", "warnings", "/sys/fs/cgroupd/systemd", "mounted", "0700", "would", "nice"], "sentSegmentedWithoutStopsStemmed": ["abl", "0600", ".servic", "file", "without", "warn", "/sys/fs/cgroupd/systemd", "mount", "0700", "would", "nice"]}, {"number": 32070, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I guess it might impact systemd user services?", "sentSegmented": ["i", "guess", "it", "might", "impact", "systemd", "user", "services"], "sentSegmentedWithoutStops": ["guess", "might", "impact", "systemd", "user", "services"], "sentSegmentedWithoutStopsStemmed": ["guess", "might", "impact", "systemd", "user", "servic"]}, {"number": 32071, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In my case not immediately a big deal.", "sentSegmented": ["in", "my", "case", "not", "immediately", "a", "big", "deal"], "sentSegmentedWithoutStops": ["case", "immediately", "big", "deal"], "sentSegmentedWithoutStopsStemmed": ["case", "immedi", "big", "deal"]}, {"number": 32072, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If this isn't a good solution, could you give me another recommendation?", "sentSegmented": ["if", "this", "is", "n't", "a", "good", "solution", "could", "you", "give", "me", "another", "recommendation"], "sentSegmentedWithoutStops": ["n't", "good", "solution", "could", "give", "another", "recommendation"], "sentSegmentedWithoutStopsStemmed": ["n't", "good", "solut", "could", "give", "anoth", "recommend"]}, {"number": 32073, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This seems related: #12955", "sentSegmented": ["this", "seems", "related", "12955"], "sentSegmentedWithoutStops": ["seems", "related", "12955"], "sentSegmentedWithoutStopsStemmed": ["seem", "relat", "12955"]}, {"number": 32074, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Here @poettering is saying that hidepid=2 doesn't work with systemd.", "sentSegmented": ["here", "poettering", "is", "saying", "that", "hidepid=2", "does", "n't", "work", "with", "systemd"], "sentSegmentedWithoutStops": ["poettering", "saying", "hidepid=2", "n't", "work", "systemd"], "sentSegmentedWithoutStopsStemmed": ["poetter", "say", "hidepid=2", "n't", "work", "systemd"]}, {"number": 32075, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Obviously that isn't true in every case (at least with the version on Debian 9) as I've been using it with hidepid=2 for ages.", "sentSegmented": ["obviously", "that", "is", "n't", "true", "in", "every", "case", "at", "least", "with", "the", "version", "on", "debian", "9", "as", "i", "'ve", "been", "using", "it", "with", "hidepid=2", "for", "ages"], "sentSegmentedWithoutStops": ["obviously", "n't", "true", "every", "case", "least", "version", "debian", "9", "'ve", "using", "hidepid=2", "ages"], "sentSegmentedWithoutStopsStemmed": ["obvious", "n't", "true", "everi", "case", "least", "version", "debian", "9", "'ve", "use", "hidepid=2", "age"]}, {"number": 32076, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Also related: #11670", "sentSegmented": ["also", "related", "11670"], "sentSegmentedWithoutStops": ["also", "related", "11670"], "sentSegmentedWithoutStopsStemmed": ["also", "relat", "11670"]}, {"number": 32077, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "What is PrivatePIDS?", "sentSegmented": ["what", "is", "privatepids"], "sentSegmentedWithoutStops": ["privatepids"], "sentSegmentedWithoutStopsStemmed": ["privatepid"]}, {"number": 32078, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I can't find information about it.", "sentSegmented": ["i", "ca", "n't", "find", "information", "about", "it"], "sentSegmentedWithoutStops": ["ca", "n't", "find", "information"], "sentSegmentedWithoutStopsStemmed": ["ca", "n't", "find", "inform"]}, {"number": 32079, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thank you for your time.", "sentSegmented": ["thank", "you", "for", "your", "time"], "sentSegmentedWithoutStops": ["thank", "time"], "sentSegmentedWithoutStopsStemmed": ["thank", "time"]}, {"number": 32080, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "-Teran", "sentSegmented": ["-teran"], "sentSegmentedWithoutStops": ["-teran"], "sentSegmentedWithoutStopsStemmed": ["-teran"]}]}