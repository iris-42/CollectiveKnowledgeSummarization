{"repository": {"owner": {"login": "twbs"}, "name": "bootstrap", "forkCount": 72534, "stargazerCount": 148691, "createdAt": "2011-07-29T21:19:00Z", "updatedAt": "2021-03-10T02:36:06Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "css"}}}, {"node": {"topic": {"name": "bootstrap"}}}, {"node": {"topic": {"name": "javascript"}}}, {"node": {"topic": {"name": "html"}}}, {"node": {"topic": {"name": "scss"}}}, {"node": {"topic": {"name": "css-framework"}}}, {"node": {"topic": {"name": "sass"}}}]}, "languages": {"edges": [{"node": {"name": "JavaScript"}}, {"node": {"name": "HTML"}}, {"node": {"name": "CSS"}}, {"node": {"name": "PowerShell"}}, {"node": {"name": "Shell"}}, {"node": {"name": "SCSS"}}]}, "primaryLanguage": {"name": "JavaScript"}}, "id": "MDU6SXNzdWUzMzI5OTc4NTU=", "number": 26716, "author": {"login": "sts-ryan-holton"}, "title": "New 'Content' component feature", "body": "How many times have you come across a bunch of content within a `<div>` or an `<article`> tag with a bunch of `<p>`, `<ul>` and possibly even **headings** and thought to yourself if only there was a simple **classname** I can add to the div that would prevent me having to add specific classes to all of these elements?\r\n\r\nThis is an issue I've come across, and whilst I'm sure Bootstrap provides some base default styling, I'm not totally convinced that this is appropriate in most projects.\r\n\r\nI was thinking this...\r\n\r\nTo add a new component under the **'Components'** heading on the docs (https://getbootstrap.com/docs/4.1/getting-started/introduction/) called something like: **'Content'**\r\n\r\nThe purpose of this component is to provide a simple method for styling elements within a div or article element, all the user would need to do is add a class called `.content` to their parent element, and elements within would be styled. **I was thinking of adding support for the following HTML elements:**\r\n\r\n- `<p>` paragraphs\r\n- `<ul>`, `<ol>` and `<dl>` lists\r\n- `<h1>` to `<h6>` headings\r\n- `<blockquote>` quotes\r\n- `<em>`, `<b>` and `<strong>` tags\r\n- `<table>` with _relevant child elements of a table_\r\n\r\nWhat's people's opinion on this?", "bodyHTML": "<p>How many times have you come across a bunch of content within a <code>&lt;div&gt;</code> or an <code>&lt;article</code>&gt; tag with a bunch of <code>&lt;p&gt;</code>, <code>&lt;ul&gt;</code> and possibly even <strong>headings</strong> and thought to yourself if only there was a simple <strong>classname</strong> I can add to the div that would prevent me having to add specific classes to all of these elements?</p>\n<p>This is an issue I've come across, and whilst I'm sure Bootstrap provides some base default styling, I'm not totally convinced that this is appropriate in most projects.</p>\n<p>I was thinking this...</p>\n<p>To add a new component under the <strong>'Components'</strong> heading on the docs (<a rel=\"nofollow\" href=\"https://getbootstrap.com/docs/4.1/getting-started/introduction/\">https://getbootstrap.com/docs/4.1/getting-started/introduction/</a>) called something like: <strong>'Content'</strong></p>\n<p>The purpose of this component is to provide a simple method for styling elements within a div or article element, all the user would need to do is add a class called <code>.content</code> to their parent element, and elements within would be styled. <strong>I was thinking of adding support for the following HTML elements:</strong></p>\n<ul>\n<li><code>&lt;p&gt;</code> paragraphs</li>\n<li><code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code> and <code>&lt;dl&gt;</code> lists</li>\n<li><code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code> headings</li>\n<li><code>&lt;blockquote&gt;</code> quotes</li>\n<li><code>&lt;em&gt;</code>, <code>&lt;b&gt;</code> and <code>&lt;strong&gt;</code> tags</li>\n<li><code>&lt;table&gt;</code> with <em>relevant child elements of a table</em></li>\n</ul>\n<p>What's people's opinion on this?</p>", "bodyText": "How many times have you come across a bunch of content within a <div> or an <article> tag with a bunch of <p>, <ul> and possibly even headings and thought to yourself if only there was a simple classname I can add to the div that would prevent me having to add specific classes to all of these elements?\nThis is an issue I've come across, and whilst I'm sure Bootstrap provides some base default styling, I'm not totally convinced that this is appropriate in most projects.\nI was thinking this...\nTo add a new component under the 'Components' heading on the docs (https://getbootstrap.com/docs/4.1/getting-started/introduction/) called something like: 'Content'\nThe purpose of this component is to provide a simple method for styling elements within a div or article element, all the user would need to do is add a class called .content to their parent element, and elements within would be styled. I was thinking of adding support for the following HTML elements:\n\n<p> paragraphs\n<ul>, <ol> and <dl> lists\n<h1> to <h6> headings\n<blockquote> quotes\n<em>, <b> and <strong> tags\n<table> with relevant child elements of a table\n\nWhat's people's opinion on this?", "assignees": {"edges": []}, "createdAt": "2018-06-16T16:16:42Z", "closed": true, "closedAt": "2020-09-19T20:30:30Z", "lastEditedAt": null, "publishedAt": "2018-06-16T16:16:42Z", "comments": {"totalCount": 11, "edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDM5Nzg1NDE5MA==", "author": {"login": "herbalite"}, "body": "I've used jquery-ui before and am right now adapting a project to bootstrap. So much where I am coming from with my answer. jquery-ui does what you suggested.\r\n\r\nIf that component feature should be implemented, make it an entirely optional plug-in. \r\n\r\nIn short there is too much JS overhead involved, losing design flexibility as well. Also there are always CSS hacks needed to override certain features. Usually I change the component (often omit something, that a JS component would introduce) to accommodate the projects needs\r\n\r\nAnd if JS is off then things look worse, because nothing has the required CSS classes. A hard coded version still looks decent. And then is the issue if something changes.\r\n\r\nA better way IMO is to make code pieces of common Bootstrap HTML components in ones preferred editor. Copy the component in, and add the specifics. If things change, change the template. Everything else I found when maintaining projects is too messy.\r\n\r\n", "bodyText": "I've used jquery-ui before and am right now adapting a project to bootstrap. So much where I am coming from with my answer. jquery-ui does what you suggested.\nIf that component feature should be implemented, make it an entirely optional plug-in.\nIn short there is too much JS overhead involved, losing design flexibility as well. Also there are always CSS hacks needed to override certain features. Usually I change the component (often omit something, that a JS component would introduce) to accommodate the projects needs\nAnd if JS is off then things look worse, because nothing has the required CSS classes. A hard coded version still looks decent. And then is the issue if something changes.\nA better way IMO is to make code pieces of common Bootstrap HTML components in ones preferred editor. Copy the component in, and add the specifics. If things change, change the template. Everything else I found when maintaining projects is too messy.", "bodyHTML": "<p>I've used jquery-ui before and am right now adapting a project to bootstrap. So much where I am coming from with my answer. jquery-ui does what you suggested.</p>\n<p>If that component feature should be implemented, make it an entirely optional plug-in.</p>\n<p>In short there is too much JS overhead involved, losing design flexibility as well. Also there are always CSS hacks needed to override certain features. Usually I change the component (often omit something, that a JS component would introduce) to accommodate the projects needs</p>\n<p>And if JS is off then things look worse, because nothing has the required CSS classes. A hard coded version still looks decent. And then is the issue if something changes.</p>\n<p>A better way IMO is to make code pieces of common Bootstrap HTML components in ones preferred editor. Copy the component in, and add the specifics. If things change, change the template. Everything else I found when maintaining projects is too messy.</p>", "createdAt": "2018-06-17T04:39:07Z", "publishedAt": "2018-06-17T04:39:07Z", "lastEditedAt": null, "updatedAt": "2018-06-17T04:39:07Z", "reactions": {"edges": [{"node": {"content": "THUMBS_DOWN", "createdAt": "2018-06-17T07:58:48Z"}}]}, "bodyParsed": [{"number": 32225, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I've used jquery-ui before and am right now adapting a project to bootstrap.", "sentSegmented": ["i", "'ve", "used", "jquery-ui", "before", "and", "am", "right", "now", "adapting", "a", "project", "to", "bootstrap"], "sentSegmentedWithoutStops": ["'ve", "used", "jquery-ui", "right", "adapting", "project", "bootstrap"], "sentSegmentedWithoutStopsStemmed": ["'ve", "use", "jquery-ui", "right", "adapt", "project", "bootstrap"]}, {"number": 32226, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So much where I am coming from with my answer.", "sentSegmented": ["so", "much", "where", "i", "am", "coming", "from", "with", "my", "answer"], "sentSegmentedWithoutStops": ["much", "coming", "answer"], "sentSegmentedWithoutStopsStemmed": ["much", "come", "answer"]}, {"number": 32227, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "jquery-ui does what you suggested.", "sentSegmented": ["jquery-ui", "does", "what", "you", "suggested"], "sentSegmentedWithoutStops": ["jquery-ui", "suggested"], "sentSegmentedWithoutStopsStemmed": ["jquery-ui", "suggest"]}, {"number": 32228, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If that component feature should be implemented, make it an entirely optional plug-in.", "sentSegmented": ["if", "that", "component", "feature", "should", "be", "implemented", "make", "it", "an", "entirely", "optional", "plug-in"], "sentSegmentedWithoutStops": ["component", "feature", "implemented", "make", "entirely", "optional", "plug-in"], "sentSegmentedWithoutStopsStemmed": ["compon", "featur", "implement", "make", "entir", "option", "plug-in"]}, {"number": 32229, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In short there is too much JS overhead involved, losing design flexibility as well.", "sentSegmented": ["in", "short", "there", "is", "too", "much", "js", "overhead", "involved", "losing", "design", "flexibility", "as", "well"], "sentSegmentedWithoutStops": ["short", "much", "js", "overhead", "involved", "losing", "design", "flexibility", "well"], "sentSegmentedWithoutStopsStemmed": ["short", "much", "js", "overhead", "involv", "lose", "design", "flexibl", "well"]}, {"number": 32230, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Also there are always CSS hacks needed to override certain features.", "sentSegmented": ["also", "there", "are", "always", "css", "hacks", "needed", "to", "override", "certain", "features"], "sentSegmentedWithoutStops": ["also", "always", "css", "hacks", "needed", "override", "certain", "features"], "sentSegmentedWithoutStopsStemmed": ["also", "alway", "css", "hack", "need", "overrid", "certain", "featur"]}, {"number": 32231, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Usually I change the component (often omit something, that a JS component would introduce) to accommodate the projects needs", "sentSegmented": ["usually", "i", "change", "the", "component", "often", "omit", "something", "that", "a", "js", "component", "would", "introduce", "to", "accommodate", "the", "projects", "needs"], "sentSegmentedWithoutStops": ["usually", "change", "component", "often", "omit", "something", "js", "component", "would", "introduce", "accommodate", "projects", "needs"], "sentSegmentedWithoutStopsStemmed": ["usual", "chang", "compon", "often", "omit", "someth", "js", "compon", "would", "introduc", "accommod", "project", "need"]}, {"number": 32232, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "And if JS is off then things look worse, because nothing has the required CSS classes.", "sentSegmented": ["and", "if", "js", "is", "off", "then", "things", "look", "worse", "because", "nothing", "has", "the", "required", "css", "classes"], "sentSegmentedWithoutStops": ["js", "things", "look", "worse", "nothing", "required", "css", "classes"], "sentSegmentedWithoutStopsStemmed": ["js", "thing", "look", "wors", "noth", "requir", "css", "class"]}, {"number": 32233, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "A hard coded version still looks decent.", "sentSegmented": ["a", "hard", "coded", "version", "still", "looks", "decent"], "sentSegmentedWithoutStops": ["hard", "coded", "version", "still", "looks", "decent"], "sentSegmentedWithoutStopsStemmed": ["hard", "code", "version", "still", "look", "decent"]}, {"number": 32234, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "And then is the issue if something changes.", "sentSegmented": ["and", "then", "is", "the", "issue", "if", "something", "changes"], "sentSegmentedWithoutStops": ["issue", "something", "changes"], "sentSegmentedWithoutStopsStemmed": ["issu", "someth", "chang"]}, {"number": 32235, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "A better way IMO is to make code pieces of common Bootstrap HTML components in ones preferred editor.", "sentSegmented": ["a", "better", "way", "imo", "is", "to", "make", "code", "pieces", "of", "common", "bootstrap", "html", "components", "in", "ones", "preferred", "editor"], "sentSegmentedWithoutStops": ["better", "way", "imo", "make", "code", "pieces", "common", "bootstrap", "html", "components", "ones", "preferred", "editor"], "sentSegmentedWithoutStopsStemmed": ["better", "way", "imo", "make", "code", "piec", "common", "bootstrap", "html", "compon", "one", "prefer", "editor"]}, {"number": 32236, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Copy the component in, and add the specifics.", "sentSegmented": ["copy", "the", "component", "in", "and", "add", "the", "specifics"], "sentSegmentedWithoutStops": ["copy", "component", "add", "specifics"], "sentSegmentedWithoutStopsStemmed": ["copi", "compon", "add", "specif"]}, {"number": 32237, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If things change, change the template.", "sentSegmented": ["if", "things", "change", "change", "the", "template"], "sentSegmentedWithoutStops": ["things", "change", "change", "template"], "sentSegmentedWithoutStopsStemmed": ["thing", "chang", "chang", "templat"]}, {"number": 32238, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Everything else I found when maintaining projects is too messy.", "sentSegmented": ["everything", "else", "i", "found", "when", "maintaining", "projects", "is", "too", "messy"], "sentSegmentedWithoutStops": ["everything", "else", "found", "maintaining", "projects", "messy"], "sentSegmentedWithoutStopsStemmed": ["everyth", "els", "found", "maintain", "project", "messi"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM5Nzg2MTgzNg==", "author": {"login": "sts-ryan-holton"}, "body": "@herbalite I think you\u2019ve gotten a little confused with what I\u2019m suggesting here.\r\n\r\ncreating a CSS class for content wouldn\u2019t require any JS at all, not quite sure whether youve got confused with something else", "bodyText": "@herbalite I think you\u2019ve gotten a little confused with what I\u2019m suggesting here.\ncreating a CSS class for content wouldn\u2019t require any JS at all, not quite sure whether youve got confused with something else", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/herbalite/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/herbalite\">@herbalite</a> I think you\u2019ve gotten a little confused with what I\u2019m suggesting here.</p>\n<p>creating a CSS class for content wouldn\u2019t require any JS at all, not quite sure whether youve got confused with something else</p>", "createdAt": "2018-06-17T07:58:41Z", "publishedAt": "2018-06-17T07:58:41Z", "lastEditedAt": null, "updatedAt": "2018-06-17T07:58:41Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32239, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@herbalite I think you\u2019ve gotten a little confused with what I\u2019m suggesting here.", "sentSegmented": ["herbalite", "i", "think", "you", "ve", "gotten", "a", "little", "confused", "with", "what", "i", "m", "suggesting", "here"], "sentSegmentedWithoutStops": ["herbalite", "think", "gotten", "little", "confused", "suggesting"], "sentSegmentedWithoutStopsStemmed": ["herbalit", "think", "gotten", "littl", "confus", "suggest"]}, {"number": 32240, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "creating a CSS class for content wouldn\u2019t require any JS at all, not quite sure whether youve got confused with something else", "sentSegmented": ["creating", "a", "css", "class", "for", "content", "wouldn", "t", "require", "any", "js", "at", "all", "not", "quite", "sure", "whether", "youve", "got", "confused", "with", "something", "else"], "sentSegmentedWithoutStops": ["creating", "css", "class", "content", "require", "js", "quite", "sure", "whether", "youve", "got", "confused", "something", "else"], "sentSegmentedWithoutStopsStemmed": ["creat", "css", "class", "content", "requir", "js", "quit", "sure", "whether", "youv", "got", "confus", "someth", "els"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM5ODQ3MDYwNw==", "author": {"login": "MartijnCuppens"}, "body": "@sts-ryan-holton \"I think\" what you're suggesting is something like Bulma is doing here: https://bulma.io/documentation/elements/content/\r\n\r\nThe Bootstrap docs also use a `.bd-content` class to control spacing between headings:\r\nhttps://github.com/twbs/bootstrap/blob/7b2372f35319ce392cb3f6ddab7c2de879a8a354/assets/scss/_content.scss#L70-L95\r\n\r\nI personally also use a `.content` class to control spacings between headings, parargraphs, lists,...\r\n\r\nWould you also add additional theming or just use it to control spacing? ", "bodyText": "@sts-ryan-holton \"I think\" what you're suggesting is something like Bulma is doing here: https://bulma.io/documentation/elements/content/\nThe Bootstrap docs also use a .bd-content class to control spacing between headings:\n\n  \n    \n      bootstrap/assets/scss/_content.scss\n    \n    \n        Lines 70 to 95\n      in\n      7b2372f\n    \n    \n    \n    \n\n        \n          \n           // \n        \n\n        \n          \n           // Docs sections \n        \n\n        \n          \n           // \n        \n\n        \n          \n            \n        \n\n        \n          \n           .bd-content { \n        \n\n        \n          \n             > h2:not(:first-child) { \n        \n\n        \n          \n               margin-top: 3rem; \n        \n\n        \n          \n             } \n        \n\n        \n          \n            \n        \n\n        \n          \n             > h3 { \n        \n\n        \n          \n               margin-top: 1.5rem; \n        \n\n        \n          \n             } \n        \n\n        \n          \n            \n        \n\n        \n          \n             > ul li, \n        \n\n        \n          \n             > ol li { \n        \n\n        \n          \n               margin-bottom: .25rem; \n        \n\n        \n          \n             } \n        \n\n        \n          \n            \n        \n\n        \n          \n             @include media-breakpoint-up(lg) { \n        \n\n        \n          \n               > ul, \n        \n\n        \n          \n               > ol, \n        \n\n        \n          \n               > p { \n        \n\n        \n          \n                 max-width: 80%; \n        \n\n        \n          \n               } \n        \n\n        \n          \n             } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI personally also use a .content class to control spacings between headings, parargraphs, lists,...\nWould you also add additional theming or just use it to control spacing?", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sts-ryan-holton/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sts-ryan-holton\">@sts-ryan-holton</a> \"I think\" what you're suggesting is something like Bulma is doing here: <a rel=\"nofollow\" href=\"https://bulma.io/documentation/elements/content/\">https://bulma.io/documentation/elements/content/</a></p>\n<p>The Bootstrap docs also use a <code>.bd-content</code> class to control spacing between headings:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-secondary\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/twbs/bootstrap/blob/7b2372f35319ce392cb3f6ddab7c2de879a8a354/assets/scss/_content.scss#L70-L95\">bootstrap/assets/scss/_content.scss</a>\n    </p>\n    <p class=\"mb-0 color-text-tertiary\">\n        Lines 70 to 95\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/twbs/bootstrap/commit/7b2372f35319ce392cb3f6ddab7c2de879a8a354\">7b2372f</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L70\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"70\"></td>\n          <td id=\"LC70\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L71\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"71\"></td>\n          <td id=\"LC71\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> Docs sections</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L72\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"72\"></td>\n          <td id=\"LC72\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L73\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"73\"></td>\n          <td id=\"LC73\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L74\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"74\"></td>\n          <td id=\"LC74\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\"> <span class=\"pl-e\">.bd-content</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L75\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"75\"></td>\n          <td id=\"LC75\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   &gt; <span class=\"pl-ent\">h2</span><span class=\"pl-e\">:not</span>(<span class=\"pl-e\">:first-child</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L76\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"76\"></td>\n          <td id=\"LC76\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">     <span class=\"pl-c1\"><span class=\"pl-c1\">margin-top</span></span>: <span class=\"pl-c1\">3<span class=\"pl-k\">rem</span></span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L77\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"77\"></td>\n          <td id=\"LC77\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L78\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"78\"></td>\n          <td id=\"LC78\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L79\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"79\"></td>\n          <td id=\"LC79\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   &gt; <span class=\"pl-ent\">h3</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L80\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"80\"></td>\n          <td id=\"LC80\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">     <span class=\"pl-c1\"><span class=\"pl-c1\">margin-top</span></span>: <span class=\"pl-c1\">1.5<span class=\"pl-k\">rem</span></span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L81\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"81\"></td>\n          <td id=\"LC81\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L82\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"82\"></td>\n          <td id=\"LC82\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L83\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"83\"></td>\n          <td id=\"LC83\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   &gt; <span class=\"pl-ent\">ul</span> <span class=\"pl-ent\">li</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L84\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"84\"></td>\n          <td id=\"LC84\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   &gt; <span class=\"pl-ent\">ol</span> <span class=\"pl-ent\">li</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L85\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"85\"></td>\n          <td id=\"LC85\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">     <span class=\"pl-c1\"><span class=\"pl-c1\">margin-bottom</span></span>: <span class=\"pl-c1\">.25<span class=\"pl-k\">rem</span></span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L86\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"86\"></td>\n          <td id=\"LC86\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L87\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"87\"></td>\n          <td id=\"LC87\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L88\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"88\"></td>\n          <td id=\"LC88\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   <span class=\"pl-k\">@include</span> <span class=\"pl-en\">media-breakpoint-up</span>(lg) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L89\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"89\"></td>\n          <td id=\"LC89\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">     &gt; <span class=\"pl-ent\">ul</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L90\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"90\"></td>\n          <td id=\"LC90\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">     &gt; <span class=\"pl-ent\">ol</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L91\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"91\"></td>\n          <td id=\"LC91\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">     &gt; <span class=\"pl-ent\">p</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L92\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"92\"></td>\n          <td id=\"LC92\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">       <span class=\"pl-c1\"><span class=\"pl-c1\">max-width</span></span>: <span class=\"pl-c1\">80<span class=\"pl-k\">%</span></span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L93\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"93\"></td>\n          <td id=\"LC93\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L94\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"94\"></td>\n          <td id=\"LC94\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L95\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"95\"></td>\n          <td id=\"LC95\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>I personally also use a <code>.content</code> class to control spacings between headings, parargraphs, lists,...</p>\n<p>Would you also add additional theming or just use it to control spacing?</p>", "createdAt": "2018-06-19T16:56:53Z", "publishedAt": "2018-06-19T16:56:53Z", "lastEditedAt": null, "updatedAt": "2018-06-19T16:56:53Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-06-20T09:10:04Z"}}]}, "bodyParsed": [{"number": 32241, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@sts-ryan-holton \"I think\" what you're suggesting is something like Bulma is doing here: https://bulma.io/documentation/elements/content/", "sentSegmented": ["sts-ryan-holton", "i", "think", "what", "you", "'re", "suggesting", "is", "something", "like", "bulma", "is", "doing", "here", "https", "//bulma.io/documentation/elements/content/"], "sentSegmentedWithoutStops": ["sts-ryan-holton", "think", "'re", "suggesting", "something", "like", "bulma", "https", "//bulma.io/documentation/elements/content/"], "sentSegmentedWithoutStopsStemmed": ["sts-ryan-holton", "think", "'re", "suggest", "someth", "like", "bulma", "http", "//bulma.io/documentation/elements/content/"]}, {"number": 32242, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The Bootstrap docs also use a .bd-content class to control spacing between headings:", "sentSegmented": ["the", "bootstrap", "docs", "also", "use", "a", ".bd-content", "class", "to", "control", "spacing", "between", "headings"], "sentSegmentedWithoutStops": ["bootstrap", "docs", "also", "use", ".bd-content", "class", "control", "spacing", "headings"], "sentSegmentedWithoutStopsStemmed": ["bootstrap", "doc", "also", "use", ".bd-content", "class", "control", "space", "head"]}, {"number": 32243, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "bootstrap/assets/scss/_content.scss", "sentSegmented": ["bootstrap/assets/scss/_content.scss"], "sentSegmentedWithoutStops": ["bootstrap/assets/scss/_content.scss"], "sentSegmentedWithoutStopsStemmed": ["bootstrap/assets/scss/_content.scss"]}, {"number": 32244, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "        Lines 70 to 95", "sentSegmented": ["lines", "70", "to", "95"], "sentSegmentedWithoutStops": ["lines", "70", "95"], "sentSegmentedWithoutStopsStemmed": ["line", "70", "95"]}, {"number": 32245, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      in", "sentSegmented": ["in"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32246, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      7b2372f", "sentSegmented": ["7b2372f"], "sentSegmentedWithoutStops": ["7b2372f"], "sentSegmentedWithoutStopsStemmed": ["7b2372f"]}, {"number": 32247, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " //", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32248, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " // Docs sections", "sentSegmented": ["docs", "sections"], "sentSegmentedWithoutStops": ["docs", "sections"], "sentSegmentedWithoutStopsStemmed": ["doc", "section"]}, {"number": 32249, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " //", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32250, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " .bd-content {", "sentSegmented": [".bd-content"], "sentSegmentedWithoutStops": [".bd-content"], "sentSegmentedWithoutStopsStemmed": [".bd-content"]}, {"number": 32251, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   > h2:not(:first-child) {", "sentSegmented": ["h2", "not", "first-child"], "sentSegmentedWithoutStops": ["h2", "first-child"], "sentSegmentedWithoutStopsStemmed": ["h2", "first-child"]}, {"number": 32252, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " margin-top: 3rem;", "sentSegmented": ["margin-top", "3rem"], "sentSegmentedWithoutStops": ["margin-top", "3rem"], "sentSegmentedWithoutStopsStemmed": ["margin-top", "3rem"]}, {"number": 32253, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32254, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   > h3 {", "sentSegmented": ["h3"], "sentSegmentedWithoutStops": ["h3"], "sentSegmentedWithoutStopsStemmed": ["h3"]}, {"number": 32255, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " margin-top: 1.5rem;", "sentSegmented": ["margin-top", "1.5rem"], "sentSegmentedWithoutStops": ["margin-top", "1.5rem"], "sentSegmentedWithoutStopsStemmed": ["margin-top", "1.5rem"]}, {"number": 32256, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32257, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   > ul li,", "sentSegmented": ["ul", "li"], "sentSegmentedWithoutStops": ["ul", "li"], "sentSegmentedWithoutStopsStemmed": ["ul", "li"]}, {"number": 32258, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   > ol li {", "sentSegmented": ["ol", "li"], "sentSegmentedWithoutStops": ["ol", "li"], "sentSegmentedWithoutStopsStemmed": ["ol", "li"]}, {"number": 32259, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " margin-bottom: .25rem;", "sentSegmented": ["margin-bottom", ".25rem"], "sentSegmentedWithoutStops": ["margin-bottom", ".25rem"], "sentSegmentedWithoutStopsStemmed": ["margin-bottom", ".25rem"]}, {"number": 32260, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32261, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " @include media-breakpoint-up(lg) {", "sentSegmented": ["include", "media-breakpoint-up", "lg"], "sentSegmentedWithoutStops": ["include", "media-breakpoint-up", "lg"], "sentSegmentedWithoutStopsStemmed": ["includ", "media-breakpoint-up", "lg"]}, {"number": 32262, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     > ul,", "sentSegmented": ["ul"], "sentSegmentedWithoutStops": ["ul"], "sentSegmentedWithoutStopsStemmed": ["ul"]}, {"number": 32263, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     > ol,", "sentSegmented": ["ol"], "sentSegmentedWithoutStops": ["ol"], "sentSegmentedWithoutStopsStemmed": ["ol"]}, {"number": 32264, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     > p {", "sentSegmented": ["p"], "sentSegmentedWithoutStops": ["p"], "sentSegmentedWithoutStopsStemmed": ["p"]}, {"number": 32265, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " max-width: 80%;", "sentSegmented": ["max-width", "80"], "sentSegmentedWithoutStops": ["max-width", "80"], "sentSegmentedWithoutStopsStemmed": ["max-width", "80"]}, {"number": 32266, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "     }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32267, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "   }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32268, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32269, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I personally also use a .content class to control spacings between headings, parargraphs, lists,...", "sentSegmented": ["i", "personally", "also", "use", "a", ".content", "class", "to", "control", "spacings", "between", "headings", "parargraphs", "lists"], "sentSegmentedWithoutStops": ["personally", "also", "use", ".content", "class", "control", "spacings", "headings", "parargraphs", "lists"], "sentSegmentedWithoutStopsStemmed": ["person", "also", "use", ".content", "class", "control", "space", "head", "parargraph", "list"]}, {"number": 32270, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Would you also add additional theming or just use it to control spacing?", "sentSegmented": ["would", "you", "also", "add", "additional", "theming", "or", "just", "use", "it", "to", "control", "spacing"], "sentSegmentedWithoutStops": ["would", "also", "add", "additional", "theming", "use", "control", "spacing"], "sentSegmentedWithoutStopsStemmed": ["would", "also", "add", "addit", "theme", "use", "control", "space"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM5ODY4MDAwOQ==", "author": {"login": "sts-ryan-holton"}, "body": "@MartijnCuppens  We'd ideally it would mainly be for spacing and layout, e.g: lists, headings etc. I don't think we need to go as complex as say what Bulma has, but something similar would be useful for the user.", "bodyText": "@MartijnCuppens  We'd ideally it would mainly be for spacing and layout, e.g: lists, headings etc. I don't think we need to go as complex as say what Bulma has, but something similar would be useful for the user.", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MartijnCuppens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MartijnCuppens\">@MartijnCuppens</a>  We'd ideally it would mainly be for spacing and layout, e.g: lists, headings etc. I don't think we need to go as complex as say what Bulma has, but something similar would be useful for the user.</p>", "createdAt": "2018-06-20T09:09:58Z", "publishedAt": "2018-06-20T09:09:58Z", "lastEditedAt": null, "updatedAt": "2018-06-20T09:09:58Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32271, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@MartijnCuppens  We'd ideally it would mainly be for spacing and layout, e.g: lists, headings etc.", "sentSegmented": ["martijncuppens", "we", "'d", "ideally", "it", "would", "mainly", "be", "for", "spacing", "and", "layout", "e.g", "lists", "headings", "etc"], "sentSegmentedWithoutStops": ["martijncuppens", "'d", "ideally", "would", "mainly", "spacing", "layout", "e.g", "lists", "headings", "etc"], "sentSegmentedWithoutStopsStemmed": ["martijncuppen", "'d", "ideal", "would", "mainli", "space", "layout", "e.g", "list", "head", "etc"]}, {"number": 32272, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I don't think we need to go as complex as say what Bulma has, but something similar would be useful for the user.", "sentSegmented": ["i", "do", "n't", "think", "we", "need", "to", "go", "as", "complex", "as", "say", "what", "bulma", "has", "but", "something", "similar", "would", "be", "useful", "for", "the", "user"], "sentSegmentedWithoutStops": ["n't", "think", "need", "go", "complex", "say", "bulma", "something", "similar", "would", "useful", "user"], "sentSegmentedWithoutStopsStemmed": ["n't", "think", "need", "go", "complex", "say", "bulma", "someth", "similar", "would", "use", "user"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQwNjM4NzA0NA==", "author": {"login": "sts-ryan-holton"}, "body": "Any update on this? @Johann-S  @MartijnCuppens ", "bodyText": "Any update on this? @Johann-S  @MartijnCuppens", "bodyHTML": "<p>Any update on this? <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Johann-S/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Johann-S\">@Johann-S</a>  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MartijnCuppens/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MartijnCuppens\">@MartijnCuppens</a></p>", "createdAt": "2018-07-19T19:24:07Z", "publishedAt": "2018-07-19T19:24:07Z", "lastEditedAt": "2018-07-19T19:24:31Z", "updatedAt": "2018-07-19T19:24:31Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32273, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Any update on this?", "sentSegmented": ["any", "update", "on", "this"], "sentSegmentedWithoutStops": ["update"], "sentSegmentedWithoutStopsStemmed": ["updat"]}, {"number": 32274, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@Johann-S @MartijnCuppens", "sentSegmented": ["johann-s", "martijncuppens"], "sentSegmentedWithoutStops": ["johann-s", "martijncuppens"], "sentSegmentedWithoutStopsStemmed": ["johann-", "martijncuppen"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQwNjM5MzI3MQ==", "author": {"login": "MartijnCuppens"}, "body": "@sts-ryan-holton, maybe you can make a PR for this?", "bodyText": "@sts-ryan-holton, maybe you can make a PR for this?", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sts-ryan-holton/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sts-ryan-holton\">@sts-ryan-holton</a>, maybe you can make a PR for this?</p>", "createdAt": "2018-07-19T19:49:03Z", "publishedAt": "2018-07-19T19:49:03Z", "lastEditedAt": null, "updatedAt": "2018-07-19T19:49:03Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32275, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@sts-ryan-holton, maybe you can make a PR for this?", "sentSegmented": ["sts-ryan-holton", "maybe", "you", "can", "make", "a", "pr", "for", "this"], "sentSegmentedWithoutStops": ["sts-ryan-holton", "maybe", "make", "pr"], "sentSegmentedWithoutStopsStemmed": ["sts-ryan-holton", "mayb", "make", "pr"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQwNjYxMjc0OQ==", "author": {"login": "mdo"}, "body": "I'm intrigued by it for what it's worth. We do this for GitHub's Markdown styles: `.markdown-body` is on the parent and everything typographically gets adjusted. Bummer is you basically cannot reliably use components within this given the nesting (e.g., `<h2 class=\"h1\">Heading</h2>` would be overridden quite easily). We'd flat out not support anything by type, images, code, and tables I imagine.\r\n\r\nAn additional concern would be how much CSS it is, but I feel we could perhaps keep the styles reigned in.", "bodyText": "I'm intrigued by it for what it's worth. We do this for GitHub's Markdown styles: .markdown-body is on the parent and everything typographically gets adjusted. Bummer is you basically cannot reliably use components within this given the nesting (e.g., <h2 class=\"h1\">Heading</h2> would be overridden quite easily). We'd flat out not support anything by type, images, code, and tables I imagine.\nAn additional concern would be how much CSS it is, but I feel we could perhaps keep the styles reigned in.", "bodyHTML": "<p>I'm intrigued by it for what it's worth. We do this for GitHub's Markdown styles: <code>.markdown-body</code> is on the parent and everything typographically gets adjusted. Bummer is you basically cannot reliably use components within this given the nesting (e.g., <code>&lt;h2 class=\"h1\"&gt;Heading&lt;/h2&gt;</code> would be overridden quite easily). We'd flat out not support anything by type, images, code, and tables I imagine.</p>\n<p>An additional concern would be how much CSS it is, but I feel we could perhaps keep the styles reigned in.</p>", "createdAt": "2018-07-20T14:12:17Z", "publishedAt": "2018-07-20T14:12:17Z", "lastEditedAt": null, "updatedAt": "2018-07-20T14:12:17Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32276, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm intrigued by it for what it's worth.", "sentSegmented": ["i", "'m", "intrigued", "by", "it", "for", "what", "it", "'s", "worth"], "sentSegmentedWithoutStops": ["'m", "intrigued", "'s", "worth"], "sentSegmentedWithoutStopsStemmed": ["'m", "intrigu", "'s", "worth"]}, {"number": 32277, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "We do this for GitHub's Markdown styles: .markdown-body is on the parent and everything typographically gets adjusted.", "sentSegmented": ["we", "do", "this", "for", "github", "'s", "markdown", "styles", ".markdown-body", "is", "on", "the", "parent", "and", "everything", "typographically", "gets", "adjusted"], "sentSegmentedWithoutStops": ["github", "'s", "markdown", "styles", ".markdown-body", "parent", "everything", "typographically", "gets", "adjusted"], "sentSegmentedWithoutStopsStemmed": ["github", "'s", "markdown", "style", ".markdown-bodi", "parent", "everyth", "typograph", "get", "adjust"]}, {"number": 32278, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Bummer is you basically cannot reliably use components within this given the nesting (e.g., Heading would be overridden quite easily).", "sentSegmented": ["bummer", "is", "you", "basically", "can", "not", "reliably", "use", "components", "within", "this", "given", "the", "nesting", "e.g.", "heading", "would", "be", "overridden", "quite", "easily"], "sentSegmentedWithoutStops": ["bummer", "basically", "reliably", "use", "components", "within", "given", "nesting", "e.g.", "heading", "would", "overridden", "quite", "easily"], "sentSegmentedWithoutStopsStemmed": ["bummer", "basic", "reliabl", "use", "compon", "within", "given", "nest", "e.g.", "head", "would", "overridden", "quit", "easili"]}, {"number": 32279, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "We'd flat out not support anything by type, images, code, and tables I imagine.", "sentSegmented": ["we", "'d", "flat", "out", "not", "support", "anything", "by", "type", "images", "code", "and", "tables", "i", "imagine"], "sentSegmentedWithoutStops": ["'d", "flat", "support", "anything", "type", "images", "code", "tables", "imagine"], "sentSegmentedWithoutStopsStemmed": ["'d", "flat", "support", "anyth", "type", "imag", "code", "tabl", "imagin"]}, {"number": 32280, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "An additional concern would be how much CSS it is, but I feel we could perhaps keep the styles reigned in.", "sentSegmented": ["an", "additional", "concern", "would", "be", "how", "much", "css", "it", "is", "but", "i", "feel", "we", "could", "perhaps", "keep", "the", "styles", "reigned", "in"], "sentSegmentedWithoutStops": ["additional", "concern", "would", "much", "css", "feel", "could", "perhaps", "keep", "styles", "reigned"], "sentSegmentedWithoutStopsStemmed": ["addit", "concern", "would", "much", "css", "feel", "could", "perhap", "keep", "style", "reign"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQyNTY0MDk1Ng==", "author": {"login": "sts-ryan-holton"}, "body": "@mdo  I appreciate the response, but here's a small use case:\r\n\r\nLately I've been working on some projects related to properties. We have a custom CMS system where admins can go in and add new properties, and for the property information (description) it usually contains headings, paragraphs and some lists. The admin essentially has a simple WYSIWG editor where they can add their content.\r\n\r\nThe problem with this, is that it doesn't do a great job and clients tend to come back and ask why a heading has some wrong sizing, or fonts, or why this text is bold etc... and whilst the editor usually has options, clients don't really know how to use it and can't reliably create their own little layouts for displaying information.\r\n\r\nBy us creating a simply `.content` wrapper class, we can apply styling and utilise the SCSS variables.\r\n\r\ne.g: \r\n\r\n```\r\n.content {\r\n  ...\r\n  h1 {\r\n    font-weight: $font-weight-normal;\r\n  }\r\n  p {\r\n    font-weight: $font-weight-light;\r\n  }\r\n  ...\r\n}\r\n```\r\n\r\nOr something similar.", "bodyText": "@mdo  I appreciate the response, but here's a small use case:\nLately I've been working on some projects related to properties. We have a custom CMS system where admins can go in and add new properties, and for the property information (description) it usually contains headings, paragraphs and some lists. The admin essentially has a simple WYSIWG editor where they can add their content.\nThe problem with this, is that it doesn't do a great job and clients tend to come back and ask why a heading has some wrong sizing, or fonts, or why this text is bold etc... and whilst the editor usually has options, clients don't really know how to use it and can't reliably create their own little layouts for displaying information.\nBy us creating a simply .content wrapper class, we can apply styling and utilise the SCSS variables.\ne.g:\n.content {\n  ...\n  h1 {\n    font-weight: $font-weight-normal;\n  }\n  p {\n    font-weight: $font-weight-light;\n  }\n  ...\n}\n\nOr something similar.", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mdo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mdo\">@mdo</a>  I appreciate the response, but here's a small use case:</p>\n<p>Lately I've been working on some projects related to properties. We have a custom CMS system where admins can go in and add new properties, and for the property information (description) it usually contains headings, paragraphs and some lists. The admin essentially has a simple WYSIWG editor where they can add their content.</p>\n<p>The problem with this, is that it doesn't do a great job and clients tend to come back and ask why a heading has some wrong sizing, or fonts, or why this text is bold etc... and whilst the editor usually has options, clients don't really know how to use it and can't reliably create their own little layouts for displaying information.</p>\n<p>By us creating a simply <code>.content</code> wrapper class, we can apply styling and utilise the SCSS variables.</p>\n<p>e.g:</p>\n<pre><code>.content {\n  ...\n  h1 {\n    font-weight: $font-weight-normal;\n  }\n  p {\n    font-weight: $font-weight-light;\n  }\n  ...\n}\n</code></pre>\n<p>Or something similar.</p>", "createdAt": "2018-09-29T12:23:31Z", "publishedAt": "2018-09-29T12:23:31Z", "lastEditedAt": "2018-09-29T12:23:54Z", "updatedAt": "2018-09-29T12:23:54Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32281, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@mdo  I appreciate the response, but here's a small use case:", "sentSegmented": ["mdo", "i", "appreciate", "the", "response", "but", "here", "'s", "a", "small", "use", "case"], "sentSegmentedWithoutStops": ["mdo", "appreciate", "response", "'s", "small", "use", "case"], "sentSegmentedWithoutStopsStemmed": ["mdo", "appreci", "respons", "'s", "small", "use", "case"]}, {"number": 32282, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Lately I've been working on some projects related to properties.", "sentSegmented": ["lately", "i", "'ve", "been", "working", "on", "some", "projects", "related", "to", "properties"], "sentSegmentedWithoutStops": ["lately", "'ve", "working", "projects", "related", "properties"], "sentSegmentedWithoutStopsStemmed": ["late", "'ve", "work", "project", "relat", "properti"]}, {"number": 32283, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "We have a custom CMS system where admins can go in and add new properties, and for the property information (description) it usually contains headings, paragraphs and some lists.", "sentSegmented": ["we", "have", "a", "custom", "cms", "system", "where", "admins", "can", "go", "in", "and", "add", "new", "properties", "and", "for", "the", "property", "information", "description", "it", "usually", "contains", "headings", "paragraphs", "and", "some", "lists"], "sentSegmentedWithoutStops": ["custom", "cms", "system", "admins", "go", "add", "new", "properties", "property", "information", "description", "usually", "contains", "headings", "paragraphs", "lists"], "sentSegmentedWithoutStopsStemmed": ["custom", "cm", "system", "admin", "go", "add", "new", "properti", "properti", "inform", "descript", "usual", "contain", "head", "paragraph", "list"]}, {"number": 32284, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The admin essentially has a simple WYSIWG editor where they can add their content.", "sentSegmented": ["the", "admin", "essentially", "has", "a", "simple", "wysiwg", "editor", "where", "they", "can", "add", "their", "content"], "sentSegmentedWithoutStops": ["admin", "essentially", "simple", "wysiwg", "editor", "add", "content"], "sentSegmentedWithoutStopsStemmed": ["admin", "essenti", "simpl", "wysiwg", "editor", "add", "content"]}, {"number": 32285, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The problem with this, is that it doesn't do a great job and clients tend to come back and ask why a heading has some wrong sizing, or fonts, or why this text is bold etc... and whilst the editor usually has options, clients don't really know how to use it and can't reliably create their own little layouts for displaying information.", "sentSegmented": ["the", "problem", "with", "this", "is", "that", "it", "does", "n't", "do", "a", "great", "job", "and", "clients", "tend", "to", "come", "back", "and", "ask", "why", "a", "heading", "has", "some", "wrong", "sizing", "or", "fonts", "or", "why", "this", "text", "is", "bold", "etc", "and", "whilst", "the", "editor", "usually", "has", "options", "clients", "do", "n't", "really", "know", "how", "to", "use", "it", "and", "ca", "n't", "reliably", "create", "their", "own", "little", "layouts", "for", "displaying", "information"], "sentSegmentedWithoutStops": ["problem", "n't", "great", "job", "clients", "tend", "come", "back", "ask", "heading", "wrong", "sizing", "fonts", "text", "bold", "etc", "whilst", "editor", "usually", "options", "clients", "n't", "really", "know", "use", "ca", "n't", "reliably", "create", "little", "layouts", "displaying", "information"], "sentSegmentedWithoutStopsStemmed": ["problem", "n't", "great", "job", "client", "tend", "come", "back", "ask", "head", "wrong", "size", "font", "text", "bold", "etc", "whilst", "editor", "usual", "option", "client", "n't", "realli", "know", "use", "ca", "n't", "reliabl", "creat", "littl", "layout", "display", "inform"]}, {"number": 32286, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "By us creating a simply .content wrapper class, we can apply styling and utilise the SCSS variables.", "sentSegmented": ["by", "us", "creating", "a", "simply", ".content", "wrapper", "class", "we", "can", "apply", "styling", "and", "utilise", "the", "scss", "variables"], "sentSegmentedWithoutStops": ["us", "creating", "simply", ".content", "wrapper", "class", "apply", "styling", "utilise", "scss", "variables"], "sentSegmentedWithoutStopsStemmed": ["us", "creat", "simpli", ".content", "wrapper", "class", "appli", "style", "utilis", "scss", "variabl"]}, {"number": 32287, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "e.g:", "sentSegmented": ["e.g"], "sentSegmentedWithoutStops": ["e.g"], "sentSegmentedWithoutStopsStemmed": ["e.g"]}, {"number": 32288, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": ".content {", "sentSegmented": [".content"], "sentSegmentedWithoutStops": [".content"], "sentSegmentedWithoutStopsStemmed": [".content"]}, {"number": 32289, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  ...", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32290, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  h1 {", "sentSegmented": ["h1"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32291, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    font-weight: $font-weight-normal;", "sentSegmented": ["font-weight", "font-weight-normal"], "sentSegmentedWithoutStops": ["font-weight", "font-weight-normal"], "sentSegmentedWithoutStopsStemmed": ["font-weight", "font-weight-norm"]}, {"number": 32292, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32293, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  p {", "sentSegmented": ["p"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32294, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "    font-weight: $font-weight-light;", "sentSegmented": ["font-weight", "font-weight-light"], "sentSegmentedWithoutStops": ["font-weight", "font-weight-light"], "sentSegmentedWithoutStopsStemmed": ["font-weight", "font-weight-light"]}, {"number": 32295, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  }", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32296, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "  ...", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32297, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "}", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 32298, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Or something similar.", "sentSegmented": ["or", "something", "similar"], "sentSegmentedWithoutStops": ["something", "similar"], "sentSegmentedWithoutStopsStemmed": ["someth", "similar"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQyNTY0NTkxNw==", "author": {"login": "MartijnCuppens"}, "body": "@sts-ryan-holton, I think the example you're presenting is quite specific for the type of projects you're working with.\r\n\r\nI frequently use a `.content` class myself for theming WYSIWG content but I must admit I always change the theming per project.\r\n\r\nThe idea is great, but implementing an universal solution is going to a lot harder.", "bodyText": "@sts-ryan-holton, I think the example you're presenting is quite specific for the type of projects you're working with.\nI frequently use a .content class myself for theming WYSIWG content but I must admit I always change the theming per project.\nThe idea is great, but implementing an universal solution is going to a lot harder.", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/sts-ryan-holton/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sts-ryan-holton\">@sts-ryan-holton</a>, I think the example you're presenting is quite specific for the type of projects you're working with.</p>\n<p>I frequently use a <code>.content</code> class myself for theming WYSIWG content but I must admit I always change the theming per project.</p>\n<p>The idea is great, but implementing an universal solution is going to a lot harder.</p>", "createdAt": "2018-09-29T13:37:40Z", "publishedAt": "2018-09-29T13:37:40Z", "lastEditedAt": null, "updatedAt": "2018-09-29T13:37:40Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32299, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@sts-ryan-holton, I think the example you're presenting is quite specific for the type of projects you're working with.", "sentSegmented": ["sts-ryan-holton", "i", "think", "the", "example", "you", "'re", "presenting", "is", "quite", "specific", "for", "the", "type", "of", "projects", "you", "'re", "working", "with"], "sentSegmentedWithoutStops": ["sts-ryan-holton", "think", "example", "'re", "presenting", "quite", "specific", "type", "projects", "'re", "working"], "sentSegmentedWithoutStopsStemmed": ["sts-ryan-holton", "think", "exampl", "'re", "present", "quit", "specif", "type", "project", "'re", "work"]}, {"number": 32300, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I frequently use a .content class myself for theming WYSIWG content but I must admit I always change the theming per project.", "sentSegmented": ["i", "frequently", "use", "a", ".content", "class", "myself", "for", "theming", "wysiwg", "content", "but", "i", "must", "admit", "i", "always", "change", "the", "theming", "per", "project"], "sentSegmentedWithoutStops": ["frequently", "use", ".content", "class", "theming", "wysiwg", "content", "must", "admit", "always", "change", "theming", "per", "project"], "sentSegmentedWithoutStopsStemmed": ["frequent", "use", ".content", "class", "theme", "wysiwg", "content", "must", "admit", "alway", "chang", "theme", "per", "project"]}, {"number": 32301, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The idea is great, but implementing an universal solution is going to a lot harder.", "sentSegmented": ["the", "idea", "is", "great", "but", "implementing", "an", "universal", "solution", "is", "going", "to", "a", "lot", "harder"], "sentSegmentedWithoutStops": ["idea", "great", "implementing", "universal", "solution", "going", "lot", "harder"], "sentSegmentedWithoutStopsStemmed": ["idea", "great", "implement", "univers", "solut", "go", "lot", "harder"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU4OTgyMjA5OQ==", "author": {"login": "jonathanhefner"}, "body": "I like this proposal.  I was trying to achieve something similar (though less specific to content / copy) in #29481.\r\n", "bodyText": "I like this proposal.  I was trying to achieve something similar (though less specific to content / copy) in #29481.", "bodyHTML": "<p>I like this proposal.  I was trying to achieve something similar (though less specific to content / copy) in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"501659696\" data-permission-text=\"Title is private\" data-url=\"https://github.com/twbs/bootstrap/issues/29481\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/twbs/bootstrap/pull/29481/hovercard\" href=\"https://github.com/twbs/bootstrap/pull/29481\">#29481</a>.</p>", "createdAt": "2020-02-21T20:27:38Z", "publishedAt": "2020-02-21T20:27:38Z", "lastEditedAt": null, "updatedAt": "2020-02-21T20:27:38Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2020-02-23T17:32:52Z"}}]}, "bodyParsed": [{"number": 32302, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I like this proposal.", "sentSegmented": ["i", "like", "this", "proposal"], "sentSegmentedWithoutStops": ["like", "proposal"], "sentSegmentedWithoutStopsStemmed": ["like", "propos"]}, {"number": 32303, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I was trying to achieve something similar (though less specific to content / copy) in #29481.", "sentSegmented": ["i", "was", "trying", "to", "achieve", "something", "similar", "though", "less", "specific", "to", "content", "copy", "in", "29481"], "sentSegmentedWithoutStops": ["trying", "achieve", "something", "similar", "though", "less", "specific", "content", "copy", "29481"], "sentSegmentedWithoutStopsStemmed": ["tri", "achiev", "someth", "similar", "though", "less", "specif", "content", "copi", "29481"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY5NTM1MzE0OA==", "author": {"login": "mdo"}, "body": "Duplicate of #30177", "bodyText": "Duplicate of #30177", "bodyHTML": "<p><span aria-label=\"This issue is a duplicate of #30177\" class=\"issue-keyword tooltipped tooltipped-se\">Duplicate of</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"565638450\" data-permission-text=\"Title is private\" data-url=\"https://github.com/twbs/bootstrap/issues/30177\" data-hovercard-type=\"issue\" data-hovercard-url=\"/twbs/bootstrap/issues/30177/hovercard\" href=\"https://github.com/twbs/bootstrap/issues/30177\">#30177</a></p>", "createdAt": "2020-09-19T20:30:27Z", "publishedAt": "2020-09-19T20:30:27Z", "lastEditedAt": null, "updatedAt": "2020-09-19T20:30:27Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 32304, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Duplicate of #30177", "sentSegmented": ["duplicate", "of", "30177"], "sentSegmentedWithoutStops": ["duplicate", "30177"], "sentSegmentedWithoutStopsStemmed": ["duplic", "30177"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOKXI_PA==", "hasNextPage": false}}, "labels": {"edges": [{"node": {"createdAt": "2007-10-20T11:24:19Z", "name": "css"}}, {"node": {"createdAt": "2007-10-20T11:24:19Z", "name": "feature"}}]}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-06-17T07:58:55Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-06-19T16:56:57Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-21T20:05:41Z"}}]}, "state": "CLOSED", "titleSegmented": ["new", "'content", "component", "feature"], "titleSegmentedWithoutStops": ["new", "'content", "component", "feature"], "titleSegmentedWithoutStopsStemmed": ["new", "'content", "compon", "featur"], "bodyParsed": [{"number": 32212, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "How many times have you come across a bunch of content within a  or an > tag with a bunch of ,  and possibly even headings and thought to yourself if only there was a simple classname I can add to the div that would prevent me having to add specific classes to all of these elements?", "sentSegmented": ["how", "many", "times", "have", "you", "come", "across", "a", "bunch", "of", "content", "within", "a", "or", "an", "tag", "with", "a", "bunch", "of", "and", "possibly", "even", "headings", "and", "thought", "to", "yourself", "if", "only", "there", "was", "a", "simple", "classname", "i", "can", "add", "to", "the", "div", "that", "would", "prevent", "me", "having", "to", "add", "specific", "classes", "to", "all", "of", "these", "elements"], "sentSegmentedWithoutStops": ["many", "times", "come", "across", "bunch", "content", "within", "tag", "bunch", "possibly", "even", "headings", "thought", "simple", "classname", "add", "div", "would", "prevent", "add", "specific", "classes", "elements"], "sentSegmentedWithoutStopsStemmed": ["mani", "time", "come", "across", "bunch", "content", "within", "tag", "bunch", "possibl", "even", "head", "thought", "simpl", "classnam", "add", "div", "would", "prevent", "add", "specif", "class", "element"]}, {"number": 32213, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This is an issue I've come across, and whilst I'm sure Bootstrap provides some base default styling, I'm not totally convinced that this is appropriate in most projects.", "sentSegmented": ["this", "is", "an", "issue", "i", "'ve", "come", "across", "and", "whilst", "i", "'m", "sure", "bootstrap", "provides", "some", "base", "default", "styling", "i", "'m", "not", "totally", "convinced", "that", "this", "is", "appropriate", "in", "most", "projects"], "sentSegmentedWithoutStops": ["issue", "'ve", "come", "across", "whilst", "'m", "sure", "bootstrap", "provides", "base", "default", "styling", "'m", "totally", "convinced", "appropriate", "projects"], "sentSegmentedWithoutStopsStemmed": ["issu", "'ve", "come", "across", "whilst", "'m", "sure", "bootstrap", "provid", "base", "default", "style", "'m", "total", "convinc", "appropri", "project"]}, {"number": 32214, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I was thinking this...", "sentSegmented": ["i", "was", "thinking", "this"], "sentSegmentedWithoutStops": ["thinking"], "sentSegmentedWithoutStopsStemmed": ["think"]}, {"number": 32215, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "To add a new component under the 'Components' heading on the docs (https://getbootstrap.com/docs/4.1/getting-started/introduction/) called something like: 'Content'", "sentSegmented": ["to", "add", "a", "new", "component", "under", "the", "'components", "heading", "on", "the", "docs", "https", "//getbootstrap.com/docs/4.1/getting-started/introduction/", "called", "something", "like", "'content"], "sentSegmentedWithoutStops": ["add", "new", "component", "'components", "heading", "docs", "https", "//getbootstrap.com/docs/4.1/getting-started/introduction/", "called", "something", "like", "'content"], "sentSegmentedWithoutStopsStemmed": ["add", "new", "compon", "'compon", "head", "doc", "http", "//getbootstrap.com/docs/4.1/getting-started/introduction/", "call", "someth", "like", "'content"]}, {"number": 32216, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The purpose of this component is to provide a simple method for styling elements within a div or article element, all the user would need to do is add a class called .content to their parent element, and elements within would be styled.", "sentSegmented": ["the", "purpose", "of", "this", "component", "is", "to", "provide", "a", "simple", "method", "for", "styling", "elements", "within", "a", "div", "or", "article", "element", "all", "the", "user", "would", "need", "to", "do", "is", "add", "a", "class", "called", ".content", "to", "their", "parent", "element", "and", "elements", "within", "would", "be", "styled"], "sentSegmentedWithoutStops": ["purpose", "component", "provide", "simple", "method", "styling", "elements", "within", "div", "article", "element", "user", "would", "need", "add", "class", "called", ".content", "parent", "element", "elements", "within", "would", "styled"], "sentSegmentedWithoutStopsStemmed": ["purpos", "compon", "provid", "simpl", "method", "style", "element", "within", "div", "articl", "element", "user", "would", "need", "add", "class", "call", ".content", "parent", "element", "element", "within", "would", "style"]}, {"number": 32217, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I was thinking of adding support for the following HTML elements:", "sentSegmented": ["i", "was", "thinking", "of", "adding", "support", "for", "the", "following", "html", "elements"], "sentSegmentedWithoutStops": ["thinking", "adding", "support", "following", "html", "elements"], "sentSegmentedWithoutStopsStemmed": ["think", "ad", "support", "follow", "html", "element"]}, {"number": 32218, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "paragraphs", "sentSegmented": ["paragraphs"], "sentSegmentedWithoutStops": ["paragraphs"], "sentSegmentedWithoutStopsStemmed": ["paragraph"]}, {"number": 32219, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": ",  and  lists", "sentSegmented": ["and", "lists"], "sentSegmentedWithoutStops": ["lists"], "sentSegmentedWithoutStopsStemmed": ["list"]}, {"number": 32220, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " to  headings", "sentSegmented": ["to", "headings"], "sentSegmentedWithoutStops": ["headings"], "sentSegmentedWithoutStopsStemmed": ["head"]}, {"number": 32221, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " quotes", "sentSegmented": ["quotes"], "sentSegmentedWithoutStops": ["quotes"], "sentSegmentedWithoutStopsStemmed": ["quot"]}, {"number": 32222, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": ",  and  tags", "sentSegmented": ["and", "tags"], "sentSegmentedWithoutStops": ["tags"], "sentSegmentedWithoutStopsStemmed": ["tag"]}, {"number": 32223, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " with relevant child elements of a table", "sentSegmented": ["with", "relevant", "child", "elements", "of", "a", "table"], "sentSegmentedWithoutStops": ["relevant", "child", "elements", "table"], "sentSegmentedWithoutStopsStemmed": ["relev", "child", "element", "tabl"]}, {"number": 32224, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "What's people's opinion on this?", "sentSegmented": ["what", "'s", "people", "'s", "opinion", "on", "this"], "sentSegmentedWithoutStops": ["'s", "people", "'s", "opinion"], "sentSegmentedWithoutStopsStemmed": ["'s", "peopl", "'s", "opinion"]}]}