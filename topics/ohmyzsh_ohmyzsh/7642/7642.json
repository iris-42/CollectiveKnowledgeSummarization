{"repository": {"owner": {"login": "ohmyzsh"}, "name": "ohmyzsh", "forkCount": 21698, "stargazerCount": 124848, "createdAt": "2009-08-28T18:15:37Z", "updatedAt": "2021-03-12T09:52:26Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "shell"}}}, {"node": {"topic": {"name": "zsh-configuration"}}}, {"node": {"topic": {"name": "theme"}}}, {"node": {"topic": {"name": "terminal"}}}, {"node": {"topic": {"name": "productivity"}}}, {"node": {"topic": {"name": "hacktoberfest"}}}]}, "languages": {"edges": [{"node": {"name": "Shell"}}, {"node": {"name": "Python"}}, {"node": {"name": "Makefile"}}, {"node": {"name": "Perl"}}, {"node": {"name": "Roff"}}, {"node": {"name": "Dockerfile"}}]}, "primaryLanguage": {"name": "Shell"}}, "id": "MDU6SXNzdWU0MTkwMTMyNjI=", "number": 7642, "author": {"login": "jkulak"}, "title": "After enabling a plugin, autocompletion requires manual rm of a .zcompdump file", "body": "Clean installation on macOS Mojave 10.14.3 (18D109). \r\n`git status` inside `~/.oh-my-zsh` shows clean.\r\n`git rev-parse HEAD` shows `52afbf77f63844abd719e565a15af2c34075de7f`\r\n\r\nNo changes to `.zshrc`.\r\n\r\nPlugin for git works fine\r\n\r\n```\r\n\u279c  ~ git [TAB]\r\nzsh: do you wish to see all 130 possibilities (130 lines)? \r\n```\r\n\r\nI add `docker` in `.zshrc`. `plugins=(git docker)`. I restart my Terminal (or run `zsh`) and get\r\n\r\n```\r\n\u279c  ~ docker [TAB]\r\nApplications/     Data/             Lota/             Public/         \r\nArchive/          Documents/        Movies/           bin/            \r\nDesktop/          Downloads/        Music/            \r\nDeveloper/        Library/          Pictures/                   \r\n```\r\n\r\nGit plugin still works. Adding some other plugins (not completion plugins I presume), like `emoji-clock` works fine.\r\n\r\nDebug log: https://pastebin.com/RikhtP3g", "bodyHTML": "<p>Clean installation on macOS Mojave 10.14.3 (18D109).<br>\n<code>git status</code> inside <code>~/.oh-my-zsh</code> shows clean.<br>\n<code>git rev-parse HEAD</code> shows <code>52afbf77f63844abd719e565a15af2c34075de7f</code></p>\n<p>No changes to <code>.zshrc</code>.</p>\n<p>Plugin for git works fine</p>\n<pre><code>\u279c  ~ git [TAB]\nzsh: do you wish to see all 130 possibilities (130 lines)? \n</code></pre>\n<p>I add <code>docker</code> in <code>.zshrc</code>. <code>plugins=(git docker)</code>. I restart my Terminal (or run <code>zsh</code>) and get</p>\n<pre><code>\u279c  ~ docker [TAB]\nApplications/     Data/             Lota/             Public/         \nArchive/          Documents/        Movies/           bin/            \nDesktop/          Downloads/        Music/            \nDeveloper/        Library/          Pictures/                   \n</code></pre>\n<p>Git plugin still works. Adding some other plugins (not completion plugins I presume), like <code>emoji-clock</code> works fine.</p>\n<p>Debug log: <a rel=\"nofollow\" href=\"https://pastebin.com/RikhtP3g\">https://pastebin.com/RikhtP3g</a></p>", "bodyText": "Clean installation on macOS Mojave 10.14.3 (18D109).\ngit status inside ~/.oh-my-zsh shows clean.\ngit rev-parse HEAD shows 52afbf77f63844abd719e565a15af2c34075de7f\nNo changes to .zshrc.\nPlugin for git works fine\n\u279c  ~ git [TAB]\nzsh: do you wish to see all 130 possibilities (130 lines)? \n\nI add docker in .zshrc. plugins=(git docker). I restart my Terminal (or run zsh) and get\n\u279c  ~ docker [TAB]\nApplications/     Data/             Lota/             Public/         \nArchive/          Documents/        Movies/           bin/            \nDesktop/          Downloads/        Music/            \nDeveloper/        Library/          Pictures/                   \n\nGit plugin still works. Adding some other plugins (not completion plugins I presume), like emoji-clock works fine.\nDebug log: https://pastebin.com/RikhtP3g", "assignees": {"edges": []}, "createdAt": "2019-03-09T00:56:13Z", "closed": true, "closedAt": "2020-05-04T14:51:17Z", "lastEditedAt": "2019-03-09T10:21:36Z", "publishedAt": "2019-03-09T00:56:13Z", "comments": {"edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ3MTE2NDY1OQ==", "author": {"login": "jkulak"}, "body": "It has something to do with the `~/.zcompdump-mycomp-5.3` file. After adding `docker` plugin in `~/.zshrc` I have to remove the mentioned file and restart the Terminal session to make `docker` plugin work.\r\n\r\nAfter, removing the `docker` plugin from `.zshrc` and restarting the session, I get\r\n\r\n```\r\n\u279c  ~ docker [TAB]\r\n(eval):1: _docker: function definition file not found\r\n(eval):1: _docker: function definition file not found\r\n(eval):1: _docker: function definition file not found\r\n```\r\n\r\nAftrer `rm ~/.zcompdump*` it comes back to normal, plugin is turned off and hitting TAB shows me the files.", "bodyText": "It has something to do with the ~/.zcompdump-mycomp-5.3 file. After adding docker plugin in ~/.zshrc I have to remove the mentioned file and restart the Terminal session to make docker plugin work.\nAfter, removing the docker plugin from .zshrc and restarting the session, I get\n\u279c  ~ docker [TAB]\n(eval):1: _docker: function definition file not found\n(eval):1: _docker: function definition file not found\n(eval):1: _docker: function definition file not found\n\nAftrer rm ~/.zcompdump* it comes back to normal, plugin is turned off and hitting TAB shows me the files.", "bodyHTML": "<p>It has something to do with the <code>~/.zcompdump-mycomp-5.3</code> file. After adding <code>docker</code> plugin in <code>~/.zshrc</code> I have to remove the mentioned file and restart the Terminal session to make <code>docker</code> plugin work.</p>\n<p>After, removing the <code>docker</code> plugin from <code>.zshrc</code> and restarting the session, I get</p>\n<pre><code>\u279c  ~ docker [TAB]\n(eval):1: _docker: function definition file not found\n(eval):1: _docker: function definition file not found\n(eval):1: _docker: function definition file not found\n</code></pre>\n<p>Aftrer <code>rm ~/.zcompdump*</code> it comes back to normal, plugin is turned off and hitting TAB shows me the files.</p>", "createdAt": "2019-03-09T10:20:06Z", "publishedAt": "2019-03-09T10:20:06Z", "lastEditedAt": "2019-06-13T18:33:43Z", "updatedAt": "2019-06-13T18:33:43Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-03-11T09:57:22Z"}}, {"node": {"content": "HOORAY", "createdAt": "2019-03-11T09:58:51Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-13T17:37:48Z"}}, {"node": {"content": "HOORAY", "createdAt": "2019-03-13T17:37:53Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-13T21:39:29Z"}}, {"node": {"content": "HOORAY", "createdAt": "2019-03-13T21:39:30Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-22T19:22:27Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-25T13:58:42Z"}}, {"node": {"content": "HOORAY", "createdAt": "2019-03-25T13:58:43Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-25T15:54:31Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-27T20:12:24Z"}}, {"node": {"content": "HOORAY", "createdAt": "2019-03-27T20:12:24Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-03T07:46:09Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-03T08:02:44Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-10T21:58:56Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-11T03:32:15Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-11T19:43:34Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-16T08:15:46Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-24T09:09:23Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-05-02T03:04:40Z"}}]}, "bodyParsed": [{"number": 1103, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It has something to do with the ~/.zcompdump-mycomp-5.3 file.", "sentSegmented": ["it", "has", "something", "to", "do", "with", "the", "~/.zcompdump-mycomp-5.3", "file"], "sentSegmentedWithoutStops": ["something", "~/.zcompdump-mycomp-5.3", "file"], "sentSegmentedWithoutStopsStemmed": ["someth", "~/.zcompdump-mycomp-5.3", "file"]}, {"number": 1104, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "After adding docker plugin in ~/.zshrc I have to remove the mentioned file and restart the Terminal session to make docker plugin work.", "sentSegmented": ["after", "adding", "docker", "plugin", "in", "~/.zshrc", "i", "have", "to", "remove", "the", "mentioned", "file", "and", "restart", "the", "terminal", "session", "to", "make", "docker", "plugin", "work"], "sentSegmentedWithoutStops": ["adding", "docker", "plugin", "~/.zshrc", "remove", "mentioned", "file", "restart", "terminal", "session", "make", "docker", "plugin", "work"], "sentSegmentedWithoutStopsStemmed": ["ad", "docker", "plugin", "~/.zshrc", "remov", "mention", "file", "restart", "termin", "session", "make", "docker", "plugin", "work"]}, {"number": 1105, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "After, removing the docker plugin from .zshrc and restarting the session, I get", "sentSegmented": ["after", "removing", "the", "docker", "plugin", "from", ".zshrc", "and", "restarting", "the", "session", "i", "get"], "sentSegmentedWithoutStops": ["removing", "docker", "plugin", ".zshrc", "restarting", "session", "get"], "sentSegmentedWithoutStopsStemmed": ["remov", "docker", "plugin", ".zshrc", "restart", "session", "get"]}, {"number": 1106, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\u279c  ~ docker [TAB]", "sentSegmented": ["docker", "tab"], "sentSegmentedWithoutStops": ["docker", "tab"], "sentSegmentedWithoutStopsStemmed": ["docker", "tab"]}, {"number": 1107, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(eval):1: _docker: function definition file not found", "sentSegmented": ["eval", ":1", "_docker", "function", "definition", "file", "not", "found"], "sentSegmentedWithoutStops": ["eval", ":1", "_docker", "definition", "file", "found"], "sentSegmentedWithoutStopsStemmed": ["eval", ":1", "_docker", "definit", "file", "found"]}, {"number": 1108, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(eval):1: _docker: function definition file not found", "sentSegmented": ["eval", ":1", "_docker", "function", "definition", "file", "not", "found"], "sentSegmentedWithoutStops": ["eval", ":1", "_docker", "definition", "file", "found"], "sentSegmentedWithoutStopsStemmed": ["eval", ":1", "_docker", "definit", "file", "found"]}, {"number": 1109, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(eval):1: _docker: function definition file not found", "sentSegmented": ["eval", ":1", "_docker", "function", "definition", "file", "not", "found"], "sentSegmentedWithoutStops": ["eval", ":1", "_docker", "definition", "file", "found"], "sentSegmentedWithoutStopsStemmed": ["eval", ":1", "_docker", "definit", "file", "found"]}, {"number": 1110, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Aftrer rm ~/.zcompdump* it comes back to normal, plugin is turned off and hitting TAB shows me the files.", "sentSegmented": ["aftrer", "rm", "~/.zcompdump", "it", "comes", "back", "to", "normal", "plugin", "is", "turned", "off", "and", "hitting", "tab", "shows", "me", "the", "files"], "sentSegmentedWithoutStops": ["aftrer", "rm", "~/.zcompdump", "comes", "back", "normal", "plugin", "turned", "hitting", "tab", "shows", "files"], "sentSegmentedWithoutStopsStemmed": ["aftrer", "rm", "~/.zcompdump", "come", "back", "normal", "plugin", "turn", "hit", "tab", "show", "file"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ3NTc1MDMyNg==", "author": {"login": "andrewmaudsley"}, "body": "@jkulak Thanks for reporting this and sharing the work around of removing the .zcompdump... files.  This has been driving me crazy!", "bodyText": "@jkulak Thanks for reporting this and sharing the work around of removing the .zcompdump... files.  This has been driving me crazy!", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jkulak/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jkulak\">@jkulak</a> Thanks for reporting this and sharing the work around of removing the .zcompdump... files.  This has been driving me crazy!</p>", "createdAt": "2019-03-22T19:25:26Z", "publishedAt": "2019-03-22T19:25:26Z", "lastEditedAt": null, "updatedAt": "2019-03-22T19:25:26Z", "reactions": {"edges": [{"node": {"content": "LAUGH", "createdAt": "2019-03-27T20:12:35Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-27T20:12:38Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-11T19:43:45Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-24T09:09:35Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-05-11T11:54:04Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-07-22T18:15:38Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-09-28T20:32:32Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-12-02T00:40:53Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-01-03T20:55:32Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-10T01:23:11Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-03-11T20:17:52Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-03-29T11:52:20Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-06-02T08:11:18Z"}}]}, "bodyParsed": [{"number": 1111, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@jkulak Thanks for reporting this and sharing the work around of removing the .zcompdump... files.", "sentSegmented": ["jkulak", "thanks", "for", "reporting", "this", "and", "sharing", "the", "work", "around", "of", "removing", "the", ".zcompdump", "files"], "sentSegmentedWithoutStops": ["jkulak", "thanks", "reporting", "sharing", "work", "around", "removing", ".zcompdump", "files"], "sentSegmentedWithoutStopsStemmed": ["jkulak", "thank", "report", "share", "work", "around", "remov", ".zcompdump", "file"]}, {"number": 1112, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This has been driving me crazy!", "sentSegmented": ["this", "has", "been", "driving", "me", "crazy"], "sentSegmentedWithoutStops": ["driving", "crazy"], "sentSegmentedWithoutStopsStemmed": ["drive", "crazi"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4MTQ0Mzg3Mg==", "author": {"login": "mcornella"}, "body": "This is a frequent source of frustration and something we can maybe fix with more code and documentation. Thanks", "bodyText": "This is a frequent source of frustration and something we can maybe fix with more code and documentation. Thanks", "bodyHTML": "<p>This is a frequent source of frustration and something we can maybe fix with more code and documentation. Thanks</p>", "createdAt": "2019-04-09T21:17:26Z", "publishedAt": "2019-04-09T21:17:26Z", "lastEditedAt": null, "updatedAt": "2019-04-09T21:17:26Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-11-12T09:34:50Z"}}]}, "bodyParsed": [{"number": 1113, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This is a frequent source of frustration and something we can maybe fix with more code and documentation.", "sentSegmented": ["this", "is", "a", "frequent", "source", "of", "frustration", "and", "something", "we", "can", "maybe", "fix", "with", "more", "code", "and", "documentation"], "sentSegmentedWithoutStops": ["frequent", "source", "frustration", "something", "maybe", "fix", "code", "documentation"], "sentSegmentedWithoutStopsStemmed": ["frequent", "sourc", "frustrat", "someth", "mayb", "fix", "code", "document"]}, {"number": 1114, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4NTQ3ODM1OQ==", "author": {"login": "AXington"}, "body": "Holy shit... thank you so much for sharing this. My AWS completions stopped working after a reboot, and I was going crazy trying to figure out why, and was coming to github to report the bug until I saw this pinned issue.", "bodyText": "Holy shit... thank you so much for sharing this. My AWS completions stopped working after a reboot, and I was going crazy trying to figure out why, and was coming to github to report the bug until I saw this pinned issue.", "bodyHTML": "<p>Holy shit... thank you so much for sharing this. My AWS completions stopped working after a reboot, and I was going crazy trying to figure out why, and was coming to github to report the bug until I saw this pinned issue.</p>", "createdAt": "2019-04-22T17:06:07Z", "publishedAt": "2019-04-22T17:06:07Z", "lastEditedAt": "2019-04-22T17:07:46Z", "updatedAt": "2019-04-22T17:07:46Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-05-23T15:22:56Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-10-12T02:05:37Z"}}]}, "bodyParsed": [{"number": 1115, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Holy shit... thank you so much for sharing this.", "sentSegmented": ["holy", "shit", "thank", "you", "so", "much", "for", "sharing", "this"], "sentSegmentedWithoutStops": ["holy", "shit", "thank", "much", "sharing"], "sentSegmentedWithoutStopsStemmed": ["holi", "shit", "thank", "much", "share"]}, {"number": 1116, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "My AWS completions stopped working after a reboot, and I was going crazy trying to figure out why, and was coming to github to report the bug until I saw this pinned issue.", "sentSegmented": ["my", "aws", "completions", "stopped", "working", "after", "a", "reboot", "and", "i", "was", "going", "crazy", "trying", "to", "figure", "out", "why", "and", "was", "coming", "to", "github", "to", "report", "the", "bug", "until", "i", "saw", "this", "pinned", "issue"], "sentSegmentedWithoutStops": ["aws", "completions", "stopped", "working", "reboot", "going", "crazy", "trying", "figure", "coming", "github", "report", "bug", "saw", "pinned", "issue"], "sentSegmentedWithoutStopsStemmed": ["aw", "complet", "stop", "work", "reboot", "go", "crazi", "tri", "figur", "come", "github", "report", "bug", "saw", "pin", "issu"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4ODUzOTk5Ng==", "author": {"login": "mightyiam"}, "body": "Could we have this issue [pinned](https://help.github.com/en/articles/pinning-an-issue-to-your-repository), perhaps?", "bodyText": "Could we have this issue pinned, perhaps?", "bodyHTML": "<p>Could we have this issue <a href=\"https://help.github.com/en/articles/pinning-an-issue-to-your-repository\">pinned</a>, perhaps?</p>", "createdAt": "2019-05-02T03:06:14Z", "publishedAt": "2019-05-02T03:06:14Z", "lastEditedAt": null, "updatedAt": "2019-05-02T03:06:14Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-12-02T00:41:06Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-01-03T20:55:43Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-10T01:23:14Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-20T03:38:02Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-22T19:07:42Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-27T14:15:35Z"}}]}, "bodyParsed": [{"number": 1117, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Could we have this issue pinned, perhaps?", "sentSegmented": ["could", "we", "have", "this", "issue", "pinned", "perhaps"], "sentSegmentedWithoutStops": ["could", "issue", "pinned", "perhaps"], "sentSegmentedWithoutStopsStemmed": ["could", "issu", "pin", "perhap"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4ODcxNjQyOQ==", "author": {"login": "tomsotte"}, "body": "The workaround proposed here does not fix the problem on my machine. I've enabled the docker plugin, restarted the terminal session and remove the `.zcompdump` file. When I try to autocomplete `docker [TAB]` I still get the list of files in the current dir.\r\n\r\nThe other plugins work fine. I've just updated to the latest `oh-my-zsh` commit `55f20fed`.\r\n\r\nWhat am I missing?", "bodyText": "The workaround proposed here does not fix the problem on my machine. I've enabled the docker plugin, restarted the terminal session and remove the .zcompdump file. When I try to autocomplete docker [TAB] I still get the list of files in the current dir.\nThe other plugins work fine. I've just updated to the latest oh-my-zsh commit 55f20fed.\nWhat am I missing?", "bodyHTML": "<p>The workaround proposed here does not fix the problem on my machine. I've enabled the docker plugin, restarted the terminal session and remove the <code>.zcompdump</code> file. When I try to autocomplete <code>docker [TAB]</code> I still get the list of files in the current dir.</p>\n<p>The other plugins work fine. I've just updated to the latest <code>oh-my-zsh</code> commit <code>55f20fed</code>.</p>\n<p>What am I missing?</p>", "createdAt": "2019-05-02T15:22:41Z", "publishedAt": "2019-05-02T15:22:41Z", "lastEditedAt": null, "updatedAt": "2019-05-02T15:22:41Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1118, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The workaround proposed here does not fix the problem on my machine.", "sentSegmented": ["the", "workaround", "proposed", "here", "does", "not", "fix", "the", "problem", "on", "my", "machine"], "sentSegmentedWithoutStops": ["workaround", "proposed", "fix", "problem", "machine"], "sentSegmentedWithoutStopsStemmed": ["workaround", "propos", "fix", "problem", "machin"]}, {"number": 1119, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I've enabled the docker plugin, restarted the terminal session and remove the .zcompdump file.", "sentSegmented": ["i", "'ve", "enabled", "the", "docker", "plugin", "restarted", "the", "terminal", "session", "and", "remove", "the", ".zcompdump", "file"], "sentSegmentedWithoutStops": ["'ve", "enabled", "docker", "plugin", "restarted", "terminal", "session", "remove", ".zcompdump", "file"], "sentSegmentedWithoutStopsStemmed": ["'ve", "enabl", "docker", "plugin", "restart", "termin", "session", "remov", ".zcompdump", "file"]}, {"number": 1120, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "When I try to autocomplete docker [TAB] I still get the list of files in the current dir.", "sentSegmented": ["when", "i", "try", "to", "autocomplete", "docker", "tab", "i", "still", "get", "the", "list", "of", "files", "in", "the", "current", "dir"], "sentSegmentedWithoutStops": ["try", "autocomplete", "docker", "tab", "still", "get", "list", "files", "current", "dir"], "sentSegmentedWithoutStopsStemmed": ["tri", "autocomplet", "docker", "tab", "still", "get", "list", "file", "current", "dir"]}, {"number": 1121, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The other plugins work fine.", "sentSegmented": ["the", "other", "plugins", "work", "fine"], "sentSegmentedWithoutStops": ["plugins", "work", "fine"], "sentSegmentedWithoutStopsStemmed": ["plugin", "work", "fine"]}, {"number": 1122, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I've just updated to the latest oh-my-zsh commit 55f20fed.", "sentSegmented": ["i", "'ve", "just", "updated", "to", "the", "latest", "oh-my-zsh", "commit", "55f20fed"], "sentSegmentedWithoutStops": ["'ve", "updated", "latest", "oh-my-zsh", "commit", "55f20fed"], "sentSegmentedWithoutStopsStemmed": ["'ve", "updat", "latest", "oh-my-zsh", "commit", "55f20fed"]}, {"number": 1123, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "What am I missing?", "sentSegmented": ["what", "am", "i", "missing"], "sentSegmentedWithoutStops": ["missing"], "sentSegmentedWithoutStopsStemmed": ["miss"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4OTEyMjYzMA==", "author": {"login": "mcornella"}, "body": "You've got the order wrong: it's `rm ~/.zcompdump*` (notice the asterisk), then restart the shell.", "bodyText": "You've got the order wrong: it's rm ~/.zcompdump* (notice the asterisk), then restart the shell.", "bodyHTML": "<p>You've got the order wrong: it's <code>rm ~/.zcompdump*</code> (notice the asterisk), then restart the shell.</p>", "createdAt": "2019-05-03T14:51:18Z", "publishedAt": "2019-05-03T14:51:18Z", "lastEditedAt": null, "updatedAt": "2019-05-03T14:51:18Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2020-03-15T13:17:30Z"}}]}, "bodyParsed": [{"number": 1124, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You've got the order wrong: it's rm ~/.zcompdump* (notice the asterisk), then restart the shell.", "sentSegmented": ["you", "'ve", "got", "the", "order", "wrong", "it", "'s", "rm", "~/.zcompdump", "notice", "the", "asterisk", "then", "restart", "the", "shell"], "sentSegmentedWithoutStops": ["'ve", "got", "order", "wrong", "'s", "rm", "~/.zcompdump", "notice", "asterisk", "restart", "shell"], "sentSegmentedWithoutStopsStemmed": ["'ve", "got", "order", "wrong", "'s", "rm", "~/.zcompdump", "notic", "asterisk", "restart", "shell"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4OTMwNzk4OA==", "author": {"login": "tomsotte"}, "body": "Sorry, I meant the way you said. I've just re-tried to be sure but it's not working. I've also tried to disable the plugin first, remove the file and restart the shell, and then enabling the plugin and re-following the steps you said... but `docker [TAB]` still shows me a list of files.\r\n\r\nAlso, I've noticed that by disabling the docker plugin I don't get any error message as jkuluak said. It just shows a list of files as usual.\r\n\r\nzsh version is `5.7.1` if it may help.\r\n\r\nEDIT: I've reinstalled `oh-my-zsh` completly, by deleting the install folder and the .zshrc config file, but still the docker plugin doesn't work for me :(", "bodyText": "Sorry, I meant the way you said. I've just re-tried to be sure but it's not working. I've also tried to disable the plugin first, remove the file and restart the shell, and then enabling the plugin and re-following the steps you said... but docker [TAB] still shows me a list of files.\nAlso, I've noticed that by disabling the docker plugin I don't get any error message as jkuluak said. It just shows a list of files as usual.\nzsh version is 5.7.1 if it may help.\nEDIT: I've reinstalled oh-my-zsh completly, by deleting the install folder and the .zshrc config file, but still the docker plugin doesn't work for me :(", "bodyHTML": "<p>Sorry, I meant the way you said. I've just re-tried to be sure but it's not working. I've also tried to disable the plugin first, remove the file and restart the shell, and then enabling the plugin and re-following the steps you said... but <code>docker [TAB]</code> still shows me a list of files.</p>\n<p>Also, I've noticed that by disabling the docker plugin I don't get any error message as jkuluak said. It just shows a list of files as usual.</p>\n<p>zsh version is <code>5.7.1</code> if it may help.</p>\n<p>EDIT: I've reinstalled <code>oh-my-zsh</code> completly, by deleting the install folder and the .zshrc config file, but still the docker plugin doesn't work for me :(</p>", "createdAt": "2019-05-04T08:49:09Z", "publishedAt": "2019-05-04T08:49:09Z", "lastEditedAt": "2019-05-04T08:59:05Z", "updatedAt": "2019-05-04T08:59:05Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1125, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Sorry, I meant the way you said.", "sentSegmented": ["sorry", "i", "meant", "the", "way", "you", "said"], "sentSegmentedWithoutStops": ["sorry", "meant", "way", "said"], "sentSegmentedWithoutStopsStemmed": ["sorri", "meant", "way", "said"]}, {"number": 1126, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I've just re-tried to be sure but it's not working.", "sentSegmented": ["i", "'ve", "just", "re-tried", "to", "be", "sure", "but", "it", "'s", "not", "working"], "sentSegmentedWithoutStops": ["'ve", "re-tried", "sure", "'s", "working"], "sentSegmentedWithoutStopsStemmed": ["'ve", "re-tri", "sure", "'s", "work"]}, {"number": 1127, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I've also tried to disable the plugin first, remove the file and restart the shell, and then enabling the plugin and re-following the steps you said... but docker [TAB] still shows me a list of files.", "sentSegmented": ["i", "'ve", "also", "tried", "to", "disable", "the", "plugin", "first", "remove", "the", "file", "and", "restart", "the", "shell", "and", "then", "enabling", "the", "plugin", "and", "re-following", "the", "steps", "you", "said", "but", "docker", "tab", "still", "shows", "me", "a", "list", "of", "files"], "sentSegmentedWithoutStops": ["'ve", "also", "tried", "disable", "plugin", "first", "remove", "file", "restart", "shell", "enabling", "plugin", "re-following", "steps", "said", "docker", "tab", "still", "shows", "list", "files"], "sentSegmentedWithoutStopsStemmed": ["'ve", "also", "tri", "disabl", "plugin", "first", "remov", "file", "restart", "shell", "enabl", "plugin", "re-follow", "step", "said", "docker", "tab", "still", "show", "list", "file"]}, {"number": 1128, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Also, I've noticed that by disabling the docker plugin I don't get any error message as jkuluak said.", "sentSegmented": ["also", "i", "'ve", "noticed", "that", "by", "disabling", "the", "docker", "plugin", "i", "do", "n't", "get", "any", "error", "message", "as", "jkuluak", "said"], "sentSegmentedWithoutStops": ["also", "'ve", "noticed", "disabling", "docker", "plugin", "n't", "get", "error", "message", "jkuluak", "said"], "sentSegmentedWithoutStopsStemmed": ["also", "'ve", "notic", "disabl", "docker", "plugin", "n't", "get", "error", "messag", "jkuluak", "said"]}, {"number": 1129, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It just shows a list of files as usual.", "sentSegmented": ["it", "just", "shows", "a", "list", "of", "files", "as", "usual"], "sentSegmentedWithoutStops": ["shows", "list", "files", "usual"], "sentSegmentedWithoutStopsStemmed": ["show", "list", "file", "usual"]}, {"number": 1130, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "zsh version is 5.7.1 if it may help.", "sentSegmented": ["zsh", "version", "is", "5.7.1", "if", "it", "may", "help"], "sentSegmentedWithoutStops": ["zsh", "version", "5.7.1", "may", "help"], "sentSegmentedWithoutStopsStemmed": ["zsh", "version", "5.7.1", "may", "help"]}, {"number": 1131, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "EDIT: I've reinstalled oh-my-zsh completly, by deleting the install folder and the .zshrc config file, but still the docker plugin doesn't work for me :(", "sentSegmented": ["edit", "i", "'ve", "reinstalled", "oh-my-zsh", "completly", "by", "deleting", "the", "install", "folder", "and", "the", ".zshrc", "config", "file", "but", "still", "the", "docker", "plugin", "does", "n't", "work", "for", "me"], "sentSegmentedWithoutStops": ["edit", "'ve", "reinstalled", "oh-my-zsh", "completly", "deleting", "install", "folder", ".zshrc", "config", "file", "still", "docker", "plugin", "n't", "work"], "sentSegmentedWithoutStopsStemmed": ["edit", "'ve", "reinstal", "oh-my-zsh", "completli", "delet", "instal", "folder", ".zshrc", "config", "file", "still", "docker", "plugin", "n't", "work"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUxMTE0NDY2Mg==", "author": {"login": "rhuffman"}, "body": "The workaround of removing ~/.zcomp* and restarting the session does not work for me either. The docker plugin completions still have no effect.\r\n\r\nIs this because there is no docker.plugin.zsh scripit in the docker plugin? I'm new to zsh and omz, but as nearly as I can tell plugins are expected to provide their initialization in a file with this format:\r\n\r\n ```<plugin-name>.plugin.zsh```", "bodyText": "The workaround of removing ~/.zcomp* and restarting the session does not work for me either. The docker plugin completions still have no effect.\nIs this because there is no docker.plugin.zsh scripit in the docker plugin? I'm new to zsh and omz, but as nearly as I can tell plugins are expected to provide their initialization in a file with this format:\n<plugin-name>.plugin.zsh", "bodyHTML": "<p>The workaround of removing ~/.zcomp* and restarting the session does not work for me either. The docker plugin completions still have no effect.</p>\n<p>Is this because there is no docker.plugin.zsh scripit in the docker plugin? I'm new to zsh and omz, but as nearly as I can tell plugins are expected to provide their initialization in a file with this format:</p>\n<p><code>&lt;plugin-name&gt;.plugin.zsh</code></p>", "createdAt": "2019-07-13T18:40:36Z", "publishedAt": "2019-07-13T18:40:36Z", "lastEditedAt": "2019-07-13T18:47:00Z", "updatedAt": "2019-07-13T18:47:00Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1132, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The workaround of removing ~/.zcomp* and restarting the session does not work for me either.", "sentSegmented": ["the", "workaround", "of", "removing", "~/.zcomp", "and", "restarting", "the", "session", "does", "not", "work", "for", "me", "either"], "sentSegmentedWithoutStops": ["workaround", "removing", "~/.zcomp", "restarting", "session", "work", "either"], "sentSegmentedWithoutStopsStemmed": ["workaround", "remov", "~/.zcomp", "restart", "session", "work", "either"]}, {"number": 1133, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The docker plugin completions still have no effect.", "sentSegmented": ["the", "docker", "plugin", "completions", "still", "have", "no", "effect"], "sentSegmentedWithoutStops": ["docker", "plugin", "completions", "still", "effect"], "sentSegmentedWithoutStopsStemmed": ["docker", "plugin", "complet", "still", "effect"]}, {"number": 1134, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Is this because there is no docker.plugin.zsh scripit in the docker plugin?", "sentSegmented": ["is", "this", "because", "there", "is", "no", "docker.plugin.zsh", "scripit", "in", "the", "docker", "plugin"], "sentSegmentedWithoutStops": ["docker.plugin.zsh", "scripit", "docker", "plugin"], "sentSegmentedWithoutStopsStemmed": ["docker.plugin.zsh", "scripit", "docker", "plugin"]}, {"number": 1135, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'm new to zsh and omz, but as nearly as I can tell plugins are expected to provide their initialization in a file with this format:", "sentSegmented": ["i", "'m", "new", "to", "zsh", "and", "omz", "but", "as", "nearly", "as", "i", "can", "tell", "plugins", "are", "expected", "to", "provide", "their", "initialization", "in", "a", "file", "with", "this", "format"], "sentSegmentedWithoutStops": ["'m", "new", "zsh", "omz", "nearly", "tell", "plugins", "expected", "provide", "initialization", "file", "format"], "sentSegmentedWithoutStopsStemmed": ["'m", "new", "zsh", "omz", "nearli", "tell", "plugin", "expect", "provid", "initi", "file", "format"]}, {"number": 1136, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": ".plugin.zsh", "sentSegmented": [".plugin.zsh"], "sentSegmentedWithoutStops": [".plugin.zsh"], "sentSegmentedWithoutStopsStemmed": [".plugin.zsh"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUyMDE0MTY1OA==", "author": {"login": "milanvdm"}, "body": "When I run `rm ~/.zcompdump*` and `exec zsh` after, the file just reappears.\r\nI don't have any auto-complete because of this. \r\n\r\nAm I missing something?", "bodyText": "When I run rm ~/.zcompdump* and exec zsh after, the file just reappears.\nI don't have any auto-complete because of this.\nAm I missing something?", "bodyHTML": "<p>When I run <code>rm ~/.zcompdump*</code> and <code>exec zsh</code> after, the file just reappears.<br>\nI don't have any auto-complete because of this.</p>\n<p>Am I missing something?</p>", "createdAt": "2019-08-10T11:30:36Z", "publishedAt": "2019-08-10T11:30:36Z", "lastEditedAt": null, "updatedAt": "2019-08-10T11:30:36Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1137, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "When I run rm ~/.zcompdump* and exec zsh after, the file just reappears.", "sentSegmented": ["when", "i", "run", "rm", "~/.zcompdump", "and", "exec", "zsh", "after", "the", "file", "just", "reappears"], "sentSegmentedWithoutStops": ["run", "rm", "~/.zcompdump", "exec", "zsh", "file", "reappears"], "sentSegmentedWithoutStopsStemmed": ["run", "rm", "~/.zcompdump", "exec", "zsh", "file", "reappear"]}, {"number": 1138, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I don't have any auto-complete because of this.", "sentSegmented": ["i", "do", "n't", "have", "any", "auto-complete", "because", "of", "this"], "sentSegmentedWithoutStops": ["n't", "auto-complete"], "sentSegmentedWithoutStopsStemmed": ["n't", "auto-complet"]}, {"number": 1139, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Am I missing something?", "sentSegmented": ["am", "i", "missing", "something"], "sentSegmentedWithoutStops": ["missing", "something"], "sentSegmentedWithoutStopsStemmed": ["miss", "someth"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUyMDE2NzQ0NQ==", "author": {"login": "jpuris"}, "body": "> When I run `rm ~/.zcompdump*` and `exec zsh` after, the file just reappears.\r\n> I don't have any auto-complete because of this.\r\n> \r\n> Am I missing something?\r\n\r\nI've simply added following to end of `~/.zshrc`\r\n```\r\n## Fix for https://github.com/robbyrussell/oh-my-zsh/issues/7642\r\n## Autocompletion requires manual rm of a .zcompdump file\r\nrm ~/.zcompdump*\r\n```\r\nI do not know what this file is for, nor do I particularly care.. but it works :)", "bodyText": "When I run rm ~/.zcompdump* and exec zsh after, the file just reappears.\nI don't have any auto-complete because of this.\nAm I missing something?\n\nI've simply added following to end of ~/.zshrc\n## Fix for https://github.com/robbyrussell/oh-my-zsh/issues/7642\n## Autocompletion requires manual rm of a .zcompdump file\nrm ~/.zcompdump*\n\nI do not know what this file is for, nor do I particularly care.. but it works :)", "bodyHTML": "<blockquote>\n<p>When I run <code>rm ~/.zcompdump*</code> and <code>exec zsh</code> after, the file just reappears.<br>\nI don't have any auto-complete because of this.</p>\n<p>Am I missing something?</p>\n</blockquote>\n<p>I've simply added following to end of <code>~/.zshrc</code></p>\n<pre><code>## Fix for https://github.com/robbyrussell/oh-my-zsh/issues/7642\n## Autocompletion requires manual rm of a .zcompdump file\nrm ~/.zcompdump*\n</code></pre>\n<p>I do not know what this file is for, nor do I particularly care.. but it works :)</p>", "createdAt": "2019-08-10T17:43:30Z", "publishedAt": "2019-08-10T17:43:30Z", "lastEditedAt": null, "updatedAt": "2019-08-10T17:43:30Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-10-18T07:10:26Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-10-18T14:55:53Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-03-15T13:18:18Z"}}]}, "bodyParsed": [{"number": 1140, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "When I run rm ~/.zcompdump* and exec zsh after, the file just reappears.", "sentSegmented": ["when", "i", "run", "rm", "~/.zcompdump", "and", "exec", "zsh", "after", "the", "file", "just", "reappears"], "sentSegmentedWithoutStops": ["run", "rm", "~/.zcompdump", "exec", "zsh", "file", "reappears"], "sentSegmentedWithoutStopsStemmed": ["run", "rm", "~/.zcompdump", "exec", "zsh", "file", "reappear"]}, {"number": 1141, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I don't have any auto-complete because of this.", "sentSegmented": ["i", "do", "n't", "have", "any", "auto-complete", "because", "of", "this"], "sentSegmentedWithoutStops": ["n't", "auto-complete"], "sentSegmentedWithoutStopsStemmed": ["n't", "auto-complet"]}, {"number": 1142, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Am I missing something?", "sentSegmented": ["am", "i", "missing", "something"], "sentSegmentedWithoutStops": ["missing", "something"], "sentSegmentedWithoutStopsStemmed": ["miss", "someth"]}, {"number": 1143, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I've simply added following to end of ~/.zshrc", "sentSegmented": ["i", "'ve", "simply", "added", "following", "to", "end", "of", "~/.zshrc"], "sentSegmentedWithoutStops": ["'ve", "simply", "added", "following", "end", "~/.zshrc"], "sentSegmentedWithoutStopsStemmed": ["'ve", "simpli", "ad", "follow", "end", "~/.zshrc"]}, {"number": 1144, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "## Fix for https://github.com/robbyrussell/oh-my-zsh/issues/7642", "sentSegmented": ["fix", "for", "https", "//github.com/robbyrussell/oh-my-zsh/issues/7642"], "sentSegmentedWithoutStops": ["fix", "https", "//github.com/robbyrussell/oh-my-zsh/issues/7642"], "sentSegmentedWithoutStopsStemmed": ["fix", "http", "//github.com/robbyrussell/oh-my-zsh/issues/7642"]}, {"number": 1145, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "## Autocompletion requires manual rm of a .zcompdump file", "sentSegmented": ["autocompletion", "requires", "manual", "rm", "of", "a", ".zcompdump", "file"], "sentSegmentedWithoutStops": ["autocompletion", "requires", "manual", "rm", ".zcompdump", "file"], "sentSegmentedWithoutStopsStemmed": ["autocomplet", "requir", "manual", "rm", ".zcompdump", "file"]}, {"number": 1146, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "rm ~/.zcompdump*", "sentSegmented": ["rm", "~/.zcompdump"], "sentSegmentedWithoutStops": ["rm", "~/.zcompdump"], "sentSegmentedWithoutStopsStemmed": ["rm", "~/.zcompdump"]}, {"number": 1147, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I do not know what this file is for, nor do I particularly care.. but it works :)", "sentSegmented": ["i", "do", "not", "know", "what", "this", "file", "is", "for", "nor", "do", "i", "particularly", "care", "but", "it", "works"], "sentSegmentedWithoutStops": ["know", "file", "particularly", "care", "works"], "sentSegmentedWithoutStopsStemmed": ["know", "file", "particularli", "care", "work"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUyMjY2MTc5MA==", "author": {"login": "mcornella"}, "body": "You're basically deleting the completion cache command each time you run zsh, therefore making the zsh startup be slower. You only need to rm that file once after loading the plugin, then restarting the zsh session.\r\n\r\n> Is this because there is no docker.plugin.zsh scripit in the docker plugin? I'm new to zsh and omz, but as nearly as I can tell plugins are expected to provide their initialization in a file with this format:\r\n\r\nPlugins that have the structure `plugin-name/_plugin-name` are also valid. They are automatically loaded via the `$fpath` variable once compinit is called. The thing is that if `.zcompdump` (or any file similarly named) exists, compinit skips loading the files in `$fpath` and directly sources the zcompdump file.", "bodyText": "You're basically deleting the completion cache command each time you run zsh, therefore making the zsh startup be slower. You only need to rm that file once after loading the plugin, then restarting the zsh session.\n\nIs this because there is no docker.plugin.zsh scripit in the docker plugin? I'm new to zsh and omz, but as nearly as I can tell plugins are expected to provide their initialization in a file with this format:\n\nPlugins that have the structure plugin-name/_plugin-name are also valid. They are automatically loaded via the $fpath variable once compinit is called. The thing is that if .zcompdump (or any file similarly named) exists, compinit skips loading the files in $fpath and directly sources the zcompdump file.", "bodyHTML": "<p>You're basically deleting the completion cache command each time you run zsh, therefore making the zsh startup be slower. You only need to rm that file once after loading the plugin, then restarting the zsh session.</p>\n<blockquote>\n<p>Is this because there is no docker.plugin.zsh scripit in the docker plugin? I'm new to zsh and omz, but as nearly as I can tell plugins are expected to provide their initialization in a file with this format:</p>\n</blockquote>\n<p>Plugins that have the structure <code>plugin-name/_plugin-name</code> are also valid. They are automatically loaded via the <code>$fpath</code> variable once compinit is called. The thing is that if <code>.zcompdump</code> (or any file similarly named) exists, compinit skips loading the files in <code>$fpath</code> and directly sources the zcompdump file.</p>", "createdAt": "2019-08-19T16:52:02Z", "publishedAt": "2019-08-19T16:52:02Z", "lastEditedAt": null, "updatedAt": "2019-08-19T16:52:02Z", "reactions": {"edges": [{"node": {"content": "THUMBS_DOWN", "createdAt": "2019-11-30T11:05:54Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2021-02-17T23:05:07Z"}}]}, "bodyParsed": [{"number": 1148, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You're basically deleting the completion cache command each time you run zsh, therefore making the zsh startup be slower.", "sentSegmented": ["you", "'re", "basically", "deleting", "the", "completion", "cache", "command", "each", "time", "you", "run", "zsh", "therefore", "making", "the", "zsh", "startup", "be", "slower"], "sentSegmentedWithoutStops": ["'re", "basically", "deleting", "completion", "cache", "command", "time", "run", "zsh", "therefore", "making", "zsh", "startup", "slower"], "sentSegmentedWithoutStopsStemmed": ["'re", "basic", "delet", "complet", "cach", "command", "time", "run", "zsh", "therefor", "make", "zsh", "startup", "slower"]}, {"number": 1149, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You only need to rm that file once after loading the plugin, then restarting the zsh session.", "sentSegmented": ["you", "only", "need", "to", "rm", "that", "file", "once", "after", "loading", "the", "plugin", "then", "restarting", "the", "zsh", "session"], "sentSegmentedWithoutStops": ["need", "rm", "file", "loading", "plugin", "restarting", "zsh", "session"], "sentSegmentedWithoutStopsStemmed": ["need", "rm", "file", "load", "plugin", "restart", "zsh", "session"]}, {"number": 1150, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Is this because there is no docker.plugin.zsh scripit in the docker plugin?", "sentSegmented": ["is", "this", "because", "there", "is", "no", "docker.plugin.zsh", "scripit", "in", "the", "docker", "plugin"], "sentSegmentedWithoutStops": ["docker.plugin.zsh", "scripit", "docker", "plugin"], "sentSegmentedWithoutStopsStemmed": ["docker.plugin.zsh", "scripit", "docker", "plugin"]}, {"number": 1151, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I'm new to zsh and omz, but as nearly as I can tell plugins are expected to provide their initialization in a file with this format:", "sentSegmented": ["i", "'m", "new", "to", "zsh", "and", "omz", "but", "as", "nearly", "as", "i", "can", "tell", "plugins", "are", "expected", "to", "provide", "their", "initialization", "in", "a", "file", "with", "this", "format"], "sentSegmentedWithoutStops": ["'m", "new", "zsh", "omz", "nearly", "tell", "plugins", "expected", "provide", "initialization", "file", "format"], "sentSegmentedWithoutStopsStemmed": ["'m", "new", "zsh", "omz", "nearli", "tell", "plugin", "expect", "provid", "initi", "file", "format"]}, {"number": 1152, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Plugins that have the structure plugin-name/_plugin-name are also valid.", "sentSegmented": ["plugins", "that", "have", "the", "structure", "plugin-name/_plugin-name", "are", "also", "valid"], "sentSegmentedWithoutStops": ["plugins", "structure", "plugin-name/_plugin-name", "also", "valid"], "sentSegmentedWithoutStopsStemmed": ["plugin", "structur", "plugin-name/_plugin-nam", "also", "valid"]}, {"number": 1153, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "They are automatically loaded via the $fpath variable once compinit is called.", "sentSegmented": ["they", "are", "automatically", "loaded", "via", "the", "fpath", "variable", "once", "compinit", "is", "called"], "sentSegmentedWithoutStops": ["automatically", "loaded", "via", "fpath", "variable", "compinit", "called"], "sentSegmentedWithoutStopsStemmed": ["automat", "load", "via", "fpath", "variabl", "compinit", "call"]}, {"number": 1154, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The thing is that if .zcompdump (or any file similarly named) exists, compinit skips loading the files in $fpath and directly sources the zcompdump file.", "sentSegmented": ["the", "thing", "is", "that", "if", ".zcompdump", "or", "any", "file", "similarly", "named", "exists", "compinit", "skips", "loading", "the", "files", "in", "fpath", "and", "directly", "sources", "the", "zcompdump", "file"], "sentSegmentedWithoutStops": ["thing", ".zcompdump", "file", "similarly", "named", "exists", "compinit", "skips", "loading", "files", "fpath", "directly", "sources", "zcompdump", "file"], "sentSegmentedWithoutStopsStemmed": ["thing", ".zcompdump", "file", "similarli", "name", "exist", "compinit", "skip", "load", "file", "fpath", "directli", "sourc", "zcompdump", "file"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUzMTQ4NDM4OQ==", "author": {"login": "hanfeicode"}, "body": "oh my zsh === oh my gaga \r\n this problem make me cray 3 days", "bodyText": "oh my zsh === oh my gaga\nthis problem make me cray 3 days", "bodyHTML": "<p>oh my zsh === oh my gaga<br>\nthis problem make me cray 3 days</p>", "createdAt": "2019-09-14T14:33:53Z", "publishedAt": "2019-09-14T14:33:53Z", "lastEditedAt": null, "updatedAt": "2019-09-14T14:33:53Z", "reactions": {"edges": [{"node": {"content": "LAUGH", "createdAt": "2020-01-03T20:56:03Z"}}]}, "bodyParsed": [{"number": 1155, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "oh my zsh === oh my gaga", "sentSegmented": ["oh", "my", "zsh", "oh", "my", "gaga"], "sentSegmentedWithoutStops": ["oh", "zsh", "oh", "gaga"], "sentSegmentedWithoutStopsStemmed": ["oh", "zsh", "oh", "gaga"]}, {"number": 1156, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "this problem make me cray 3 days", "sentSegmented": ["this", "problem", "make", "me", "cray", "3", "days"], "sentSegmentedWithoutStops": ["problem", "make", "cray", "3", "days"], "sentSegmentedWithoutStopsStemmed": ["problem", "make", "cray", "3", "day"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUzMjY2NjQ3Nw==", "author": {"login": "shivdhar"}, "body": "+1 for adding loud and clear documentation for this!", "bodyText": "+1 for adding loud and clear documentation for this!", "bodyHTML": "<p>+1 for adding loud and clear documentation for this!</p>", "createdAt": "2019-09-18T12:42:29Z", "publishedAt": "2019-09-18T12:42:29Z", "lastEditedAt": null, "updatedAt": "2019-09-18T12:42:29Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1157, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "+1 for adding loud and clear documentation for this!", "sentSegmented": ["+1", "for", "adding", "loud", "and", "clear", "documentation", "for", "this"], "sentSegmentedWithoutStops": ["+1", "adding", "loud", "clear", "documentation"], "sentSegmentedWithoutStopsStemmed": ["+1", "ad", "loud", "clear", "document"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUzMzMzOTQ4NA==", "author": {"login": "ksbrar"}, "body": "Bump.", "bodyText": "Bump.", "bodyHTML": "<p>Bump.</p>", "createdAt": "2019-09-19T22:59:10Z", "publishedAt": "2019-09-19T22:59:10Z", "lastEditedAt": null, "updatedAt": "2019-09-19T22:59:10Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1158, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Bump.", "sentSegmented": ["bump"], "sentSegmentedWithoutStops": ["bump"], "sentSegmentedWithoutStopsStemmed": ["bump"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUzMzQ0NjIzNQ==", "author": {"login": "aurelijusrozenas"}, "body": "So the solution would be somehow to detect when plugin list has changed and then remove zcompdump?", "bodyText": "So the solution would be somehow to detect when plugin list has changed and then remove zcompdump?", "bodyHTML": "<p>So the solution would be somehow to detect when plugin list has changed and then remove zcompdump?</p>", "createdAt": "2019-09-20T07:41:10Z", "publishedAt": "2019-09-20T07:41:10Z", "lastEditedAt": null, "updatedAt": "2019-09-20T07:41:10Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1159, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So the solution would be somehow to detect when plugin list has changed and then remove zcompdump?", "sentSegmented": ["so", "the", "solution", "would", "be", "somehow", "to", "detect", "when", "plugin", "list", "has", "changed", "and", "then", "remove", "zcompdump"], "sentSegmentedWithoutStops": ["solution", "would", "somehow", "detect", "plugin", "list", "changed", "remove", "zcompdump"], "sentSegmentedWithoutStopsStemmed": ["solut", "would", "somehow", "detect", "plugin", "list", "chang", "remov", "zcompdump"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUzNjkyNjg4Mg==", "author": {"login": "TriMoon"}, "body": "> So the solution would be somehow to detect when plugin list has changed and then remove zcompdump?\r\n\r\nFrom a logical point of view that would be the correct thing to do i think :wink:", "bodyText": "So the solution would be somehow to detect when plugin list has changed and then remove zcompdump?\n\nFrom a logical point of view that would be the correct thing to do i think \ud83d\ude09", "bodyHTML": "<blockquote>\n<p>So the solution would be somehow to detect when plugin list has changed and then remove zcompdump?</p>\n</blockquote>\n<p>From a logical point of view that would be the correct thing to do i think <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji></p>", "createdAt": "2019-10-01T08:24:50Z", "publishedAt": "2019-10-01T08:24:50Z", "lastEditedAt": null, "updatedAt": "2019-10-01T08:24:50Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1160, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "So the solution would be somehow to detect when plugin list has changed and then remove zcompdump?", "sentSegmented": ["so", "the", "solution", "would", "be", "somehow", "to", "detect", "when", "plugin", "list", "has", "changed", "and", "then", "remove", "zcompdump"], "sentSegmentedWithoutStops": ["solution", "would", "somehow", "detect", "plugin", "list", "changed", "remove", "zcompdump"], "sentSegmentedWithoutStopsStemmed": ["solut", "would", "somehow", "detect", "plugin", "list", "chang", "remov", "zcompdump"]}, {"number": 1161, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "From a logical point of view that would be the correct thing to do i think \ud83d\ude09", "sentSegmented": ["from", "a", "logical", "point", "of", "view", "that", "would", "be", "the", "correct", "thing", "to", "do", "i", "think"], "sentSegmentedWithoutStops": ["logical", "point", "view", "would", "correct", "thing", "think"], "sentSegmentedWithoutStopsStemmed": ["logic", "point", "view", "would", "correct", "thing", "think"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU0ODY4NzEwMQ==", "author": {"login": "qiaocci"}, "body": "meet this problem too", "bodyText": "meet this problem too", "bodyHTML": "<p>meet this problem too</p>", "createdAt": "2019-11-01T06:54:57Z", "publishedAt": "2019-11-01T06:54:57Z", "lastEditedAt": null, "updatedAt": "2019-11-01T06:54:57Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1162, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "meet this problem too", "sentSegmented": ["meet", "this", "problem", "too"], "sentSegmentedWithoutStops": ["meet", "problem"], "sentSegmentedWithoutStopsStemmed": ["meet", "problem"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU1MjgxMjc0NA==", "author": {"login": "domvo"}, "body": "Can we please add this to a Troubleshooting section in the README.md [here](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/docker)?", "bodyText": "Can we please add this to a Troubleshooting section in the README.md here?", "bodyHTML": "<p>Can we please add this to a Troubleshooting section in the README.md <a href=\"https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/docker\">here</a>?</p>", "createdAt": "2019-11-12T09:36:50Z", "publishedAt": "2019-11-12T09:36:50Z", "lastEditedAt": null, "updatedAt": "2019-11-12T09:36:50Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1163, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Can we please add this to a Troubleshooting section in the README.md here?", "sentSegmented": ["can", "we", "please", "add", "this", "to", "a", "troubleshooting", "section", "in", "the", "readme.md", "here"], "sentSegmentedWithoutStops": ["please", "add", "troubleshooting", "section", "readme.md"], "sentSegmentedWithoutStopsStemmed": ["pleas", "add", "troubleshoot", "section", "readme.md"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU1NzQ4NjgyNA==", "author": {"login": "dpd73"}, "body": "I encountered this too after adding `docker` and `docker-compose` plugins to a vanilla install on Mac 10.15.1\r\nRemoving the dump file and restarting Terminal worked for me.", "bodyText": "I encountered this too after adding docker and docker-compose plugins to a vanilla install on Mac 10.15.1\nRemoving the dump file and restarting Terminal worked for me.", "bodyHTML": "<p>I encountered this too after adding <code>docker</code> and <code>docker-compose</code> plugins to a vanilla install on Mac 10.15.1<br>\nRemoving the dump file and restarting Terminal worked for me.</p>", "createdAt": "2019-11-22T10:53:10Z", "publishedAt": "2019-11-22T10:53:10Z", "lastEditedAt": null, "updatedAt": "2019-11-22T10:53:10Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-12-27T08:06:54Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-03-15T13:19:29Z"}}]}, "bodyParsed": [{"number": 1164, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I encountered this too after adding docker and docker-compose plugins to a vanilla install on Mac 10.15.1", "sentSegmented": ["i", "encountered", "this", "too", "after", "adding", "docker", "and", "docker-compose", "plugins", "to", "a", "vanilla", "install", "on", "mac", "10.15.1"], "sentSegmentedWithoutStops": ["encountered", "adding", "docker", "docker-compose", "plugins", "vanilla", "install", "mac", "10.15.1"], "sentSegmentedWithoutStopsStemmed": ["encount", "ad", "docker", "docker-compos", "plugin", "vanilla", "instal", "mac", "10.15.1"]}, {"number": 1165, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Removing the dump file and restarting Terminal worked for me.", "sentSegmented": ["removing", "the", "dump", "file", "and", "restarting", "terminal", "worked", "for", "me"], "sentSegmentedWithoutStops": ["removing", "dump", "file", "restarting", "terminal", "worked"], "sentSegmentedWithoutStopsStemmed": ["remov", "dump", "file", "restart", "termin", "work"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU3MDY5NTg1OA==", "author": {"login": "dmtroyer"}, "body": "wow this was frustrating.", "bodyText": "wow this was frustrating.", "bodyHTML": "<p>wow this was frustrating.</p>", "createdAt": "2020-01-03T20:57:09Z", "publishedAt": "2020-01-03T20:57:09Z", "lastEditedAt": null, "updatedAt": "2020-01-03T20:57:09Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2020-01-29T15:07:38Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-13T10:40:52Z"}}]}, "bodyParsed": [{"number": 1166, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "wow this was frustrating.", "sentSegmented": ["wow", "this", "was", "frustrating"], "sentSegmentedWithoutStops": ["wow", "frustrating"], "sentSegmentedWithoutStopsStemmed": ["wow", "frustrat"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU4MzcyMTk1Ng==", "author": {"login": "bigunyak"}, "body": "Super annoying problem! Especially for people new to zsh in general, trying to build a new setup and stuff just doesn't work when it should...\r\nFor me executing `rm -f ~/.zcompdump; compinit` fixes the problem only in the current session, once I restart, autocompletion doesn't work again.\r\nAnother option is to execute `autoload -U compinit && compinit`, this also fixes the problem in your open session. Since this command seem to be working faster, I just added it to my .zshrc.", "bodyText": "Super annoying problem! Especially for people new to zsh in general, trying to build a new setup and stuff just doesn't work when it should...\nFor me executing rm -f ~/.zcompdump; compinit fixes the problem only in the current session, once I restart, autocompletion doesn't work again.\nAnother option is to execute autoload -U compinit && compinit, this also fixes the problem in your open session. Since this command seem to be working faster, I just added it to my .zshrc.", "bodyHTML": "<p>Super annoying problem! Especially for people new to zsh in general, trying to build a new setup and stuff just doesn't work when it should...<br>\nFor me executing <code>rm -f ~/.zcompdump; compinit</code> fixes the problem only in the current session, once I restart, autocompletion doesn't work again.<br>\nAnother option is to execute <code>autoload -U compinit &amp;&amp; compinit</code>, this also fixes the problem in your open session. Since this command seem to be working faster, I just added it to my .zshrc.</p>", "createdAt": "2020-02-08T09:59:55Z", "publishedAt": "2020-02-08T09:59:55Z", "lastEditedAt": null, "updatedAt": "2020-02-08T09:59:55Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1167, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Super annoying problem!", "sentSegmented": ["super", "annoying", "problem"], "sentSegmentedWithoutStops": ["super", "annoying", "problem"], "sentSegmentedWithoutStopsStemmed": ["super", "annoy", "problem"]}, {"number": 1168, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Especially for people new to zsh in general, trying to build a new setup and stuff just doesn't work when it should...", "sentSegmented": ["especially", "for", "people", "new", "to", "zsh", "in", "general", "trying", "to", "build", "a", "new", "setup", "and", "stuff", "just", "does", "n't", "work", "when", "it", "should"], "sentSegmentedWithoutStops": ["especially", "people", "new", "zsh", "general", "trying", "build", "new", "setup", "stuff", "n't", "work"], "sentSegmentedWithoutStopsStemmed": ["especi", "peopl", "new", "zsh", "gener", "tri", "build", "new", "setup", "stuff", "n't", "work"]}, {"number": 1169, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "For me executing rm -f ~/.zcompdump; compinit fixes the problem only in the current session, once I restart, autocompletion doesn't work again.", "sentSegmented": ["for", "me", "executing", "rm", "-f", "~/.zcompdump", "compinit", "fixes", "the", "problem", "only", "in", "the", "current", "session", "once", "i", "restart", "autocompletion", "does", "n't", "work", "again"], "sentSegmentedWithoutStops": ["executing", "rm", "-f", "~/.zcompdump", "compinit", "fixes", "problem", "current", "session", "restart", "autocompletion", "n't", "work"], "sentSegmentedWithoutStopsStemmed": ["execut", "rm", "-f", "~/.zcompdump", "compinit", "fix", "problem", "current", "session", "restart", "autocomplet", "n't", "work"]}, {"number": 1170, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Another option is to execute autoload -U compinit && compinit, this also fixes the problem in your open session.", "sentSegmented": ["another", "option", "is", "to", "execute", "autoload", "-u", "compinit", "compinit", "this", "also", "fixes", "the", "problem", "in", "your", "open", "session"], "sentSegmentedWithoutStops": ["another", "option", "execute", "autoload", "-u", "compinit", "compinit", "also", "fixes", "problem", "open", "session"], "sentSegmentedWithoutStopsStemmed": ["anoth", "option", "execut", "autoload", "-u", "compinit", "compinit", "also", "fix", "problem", "open", "session"]}, {"number": 1171, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Since this command seem to be working faster, I just added it to my .zshrc.", "sentSegmented": ["since", "this", "command", "seem", "to", "be", "working", "faster", "i", "just", "added", "it", "to", "my", ".zshrc"], "sentSegmentedWithoutStops": ["since", "command", "seem", "working", "faster", "added", ".zshrc"], "sentSegmentedWithoutStopsStemmed": ["sinc", "command", "seem", "work", "faster", "ad", ".zshrc"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU4Mzc2MDQ3OQ==", "author": {"login": "mcornella"}, "body": "Run `rm $ZSH_COMPDUMP` and restart the zsh session (`exec zsh`). Running `compinit` will override the compinit call OMZ makes for the current session, but on the next one OMZ will use the `zcompdump` file it normally uses, which isn't `~/.zcompdump`.", "bodyText": "Run rm $ZSH_COMPDUMP and restart the zsh session (exec zsh). Running compinit will override the compinit call OMZ makes for the current session, but on the next one OMZ will use the zcompdump file it normally uses, which isn't ~/.zcompdump.", "bodyHTML": "<p>Run <code>rm $ZSH_COMPDUMP</code> and restart the zsh session (<code>exec zsh</code>). Running <code>compinit</code> will override the compinit call OMZ makes for the current session, but on the next one OMZ will use the <code>zcompdump</code> file it normally uses, which isn't <code>~/.zcompdump</code>.</p>", "createdAt": "2020-02-08T17:53:33Z", "publishedAt": "2020-02-08T17:53:33Z", "lastEditedAt": null, "updatedAt": "2020-02-08T17:53:33Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2020-02-08T18:03:08Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-03-12T15:01:21Z"}}]}, "bodyParsed": [{"number": 1172, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Run rm $ZSH_COMPDUMP and restart the zsh session (exec zsh).", "sentSegmented": ["run", "rm", "zsh_compdump", "and", "restart", "the", "zsh", "session", "exec", "zsh"], "sentSegmentedWithoutStops": ["run", "rm", "zsh_compdump", "restart", "zsh", "session", "exec", "zsh"], "sentSegmentedWithoutStopsStemmed": ["run", "rm", "zsh_compdump", "restart", "zsh", "session", "exec", "zsh"]}, {"number": 1173, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Running compinit will override the compinit call OMZ makes for the current session, but on the next one OMZ will use the zcompdump file it normally uses, which isn't ~/.zcompdump.", "sentSegmented": ["running", "compinit", "will", "override", "the", "compinit", "call", "omz", "makes", "for", "the", "current", "session", "but", "on", "the", "next", "one", "omz", "will", "use", "the", "zcompdump", "file", "it", "normally", "uses", "which", "is", "n't", "~/.zcompdump"], "sentSegmentedWithoutStops": ["running", "compinit", "override", "compinit", "call", "omz", "makes", "current", "session", "next", "one", "omz", "use", "zcompdump", "file", "normally", "uses", "n't", "~/.zcompdump"], "sentSegmentedWithoutStopsStemmed": ["run", "compinit", "overrid", "compinit", "call", "omz", "make", "current", "session", "next", "one", "omz", "use", "zcompdump", "file", "normal", "use", "n't", "~/.zcompdump"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDU4NTY2NDg2Nw==", "author": {"login": "VersBinarii"}, "body": "Got bitten by this as well while trying out ohmyzsh. Super annoying for a noob user.\r\nMaybe we could have a list of currently active plugins in the env variable and compare it with the plugins list in .zshrc. If they differ rm the ~/.zcompdump and reinit the zsh", "bodyText": "Got bitten by this as well while trying out ohmyzsh. Super annoying for a noob user.\nMaybe we could have a list of currently active plugins in the env variable and compare it with the plugins list in .zshrc. If they differ rm the ~/.zcompdump and reinit the zsh", "bodyHTML": "<p>Got bitten by this as well while trying out ohmyzsh. Super annoying for a noob user.<br>\nMaybe we could have a list of currently active plugins in the env variable and compare it with the plugins list in .zshrc. If they differ rm the ~/.zcompdump and reinit the zsh</p>", "createdAt": "2020-02-13T10:46:54Z", "publishedAt": "2020-02-13T10:46:54Z", "lastEditedAt": null, "updatedAt": "2020-02-13T10:46:54Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1174, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Got bitten by this as well while trying out ohmyzsh.", "sentSegmented": ["got", "bitten", "by", "this", "as", "well", "while", "trying", "out", "ohmyzsh"], "sentSegmentedWithoutStops": ["got", "bitten", "well", "trying", "ohmyzsh"], "sentSegmentedWithoutStopsStemmed": ["got", "bitten", "well", "tri", "ohmyzsh"]}, {"number": 1175, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Super annoying for a noob user.", "sentSegmented": ["super", "annoying", "for", "a", "noob", "user"], "sentSegmentedWithoutStops": ["super", "annoying", "noob", "user"], "sentSegmentedWithoutStopsStemmed": ["super", "annoy", "noob", "user"]}, {"number": 1176, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Maybe we could have a list of currently active plugins in the env variable and compare it with the plugins list in .zshrc.", "sentSegmented": ["maybe", "we", "could", "have", "a", "list", "of", "currently", "active", "plugins", "in", "the", "env", "variable", "and", "compare", "it", "with", "the", "plugins", "list", "in", ".zshrc"], "sentSegmentedWithoutStops": ["maybe", "could", "list", "currently", "active", "plugins", "env", "variable", "compare", "plugins", "list", ".zshrc"], "sentSegmentedWithoutStopsStemmed": ["mayb", "could", "list", "current", "activ", "plugin", "env", "variabl", "compar", "plugin", "list", ".zshrc"]}, {"number": 1177, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If they differ rm the ~/.zcompdump and reinit the zsh", "sentSegmented": ["if", "they", "differ", "rm", "the", "~/.zcompdump", "and", "reinit", "the", "zsh"], "sentSegmentedWithoutStops": ["differ", "rm", "~/.zcompdump", "reinit", "zsh"], "sentSegmentedWithoutStopsStemmed": ["differ", "rm", "~/.zcompdump", "reinit", "zsh"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDYxMjIxMjQzOQ==", "author": {"login": "InfinityByTen"}, "body": "So I was just about file another bug, when I realised something strange. I see that there was a fix recently to the `aws` plugin. I just tried to redo some of the steps in the plugin in my terminal when I got strange errors.\r\n\r\n Like so:\r\n\r\n```\r\n$commands[aws_zsh_completer.sh]\r\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 16: autoload: not found\r\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 17: bashcompinit: not found\r\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 29: Syntax error: \"(\" unexpected (expecting \"}\")\r\n```\r\n\r\nYes, I know for some reason my `aws` installs to `/home/ ${USER}/.local/bin` and I guess the plugin is not able to add the completer at all.\r\n\r\nI am on Kubuntu, and the neither code-paths in the Ubuntu or *NixOS branches of the code here (https://github.com/ohmyzsh/ohmyzsh/blob/d53355ab38763c6f637008d019c8e8b98f19b714/plugins/aws/aws.plugin.zsh#L88) exist. \r\n\r\nThe removing of the `~/.zcompudump*` also does the trick for me, but so does actually running these in the terminal fix it:\r\n`autoload bashcompinit && bashcompinit\r\nsource /home/infinitybyten/.local/bin/aws_zsh_completer.sh`\r\n\r\nCan this be of some help?", "bodyText": "So I was just about file another bug, when I realised something strange. I see that there was a fix recently to the aws plugin. I just tried to redo some of the steps in the plugin in my terminal when I got strange errors.\nLike so:\n$commands[aws_zsh_completer.sh]\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 16: autoload: not found\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 17: bashcompinit: not found\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 29: Syntax error: \"(\" unexpected (expecting \"}\")\n\nYes, I know for some reason my aws installs to /home/ ${USER}/.local/bin and I guess the plugin is not able to add the completer at all.\nI am on Kubuntu, and the neither code-paths in the Ubuntu or *NixOS branches of the code here (\n  \n    \n      ohmyzsh/plugins/aws/aws.plugin.zsh\n    \n    \n         Line 88\n      in\n      d53355a\n    \n    \n    \n    \n\n        \n          \n           if [[ -z $_aws_zsh_completer_path ]]; then \n        \n    \n  \n\n) exist.\nThe removing of the ~/.zcompudump* also does the trick for me, but so does actually running these in the terminal fix it:\nautoload bashcompinit && bashcompinit source /home/infinitybyten/.local/bin/aws_zsh_completer.sh\nCan this be of some help?", "bodyHTML": "<p>So I was just about file another bug, when I realised something strange. I see that there was a fix recently to the <code>aws</code> plugin. I just tried to redo some of the steps in the plugin in my terminal when I got strange errors.</p>\n<p>Like so:</p>\n<pre><code>$commands[aws_zsh_completer.sh]\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 16: autoload: not found\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 17: bashcompinit: not found\n/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 29: Syntax error: \"(\" unexpected (expecting \"}\")\n</code></pre>\n<p>Yes, I know for some reason my <code>aws</code> installs to <code>/home/ ${USER}/.local/bin</code> and I guess the plugin is not able to add the completer at all.</p>\n<p>I am on Kubuntu, and the neither code-paths in the Ubuntu or *NixOS branches of the code here (<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-secondary\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/ohmyzsh/ohmyzsh/blob/d53355ab38763c6f637008d019c8e8b98f19b714/plugins/aws/aws.plugin.zsh#L88\">ohmyzsh/plugins/aws/aws.plugin.zsh</a>\n    </p>\n    <p class=\"mb-0 color-text-tertiary\">\n         Line 88\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/ohmyzsh/ohmyzsh/commit/d53355ab38763c6f637008d019c8e8b98f19b714\">d53355a</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L88\" class=\"blob-num border-0 px-3 py-0 color-bg-primary js-line-number\" data-line-number=\"88\"></td>\n          <td id=\"LC88\" class=\"blob-code border-0 px-3 py-0 color-bg-primary blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> [[ <span class=\"pl-k\">-z</span> <span class=\"pl-smi\">$_aws_zsh_completer_path</span> ]]<span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n) exist.</p>\n<p>The removing of the <code>~/.zcompudump*</code> also does the trick for me, but so does actually running these in the terminal fix it:<br>\n<code>autoload bashcompinit &amp;&amp; bashcompinit source /home/infinitybyten/.local/bin/aws_zsh_completer.sh</code></p>\n<p>Can this be of some help?</p>", "createdAt": "2020-04-10T20:54:18Z", "publishedAt": "2020-04-10T20:54:18Z", "lastEditedAt": "2020-04-10T20:56:12Z", "updatedAt": "2020-04-10T20:56:12Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 1178, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So I was just about file another bug, when I realised something strange.", "sentSegmented": ["so", "i", "was", "just", "about", "file", "another", "bug", "when", "i", "realised", "something", "strange"], "sentSegmentedWithoutStops": ["file", "another", "bug", "realised", "something", "strange"], "sentSegmentedWithoutStopsStemmed": ["file", "anoth", "bug", "realis", "someth", "strang"]}, {"number": 1179, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I see that there was a fix recently to the aws plugin.", "sentSegmented": ["i", "see", "that", "there", "was", "a", "fix", "recently", "to", "the", "aws", "plugin"], "sentSegmentedWithoutStops": ["see", "fix", "recently", "aws", "plugin"], "sentSegmentedWithoutStopsStemmed": ["see", "fix", "recent", "aw", "plugin"]}, {"number": 1180, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I just tried to redo some of the steps in the plugin in my terminal when I got strange errors.", "sentSegmented": ["i", "just", "tried", "to", "redo", "some", "of", "the", "steps", "in", "the", "plugin", "in", "my", "terminal", "when", "i", "got", "strange", "errors"], "sentSegmentedWithoutStops": ["tried", "redo", "steps", "plugin", "terminal", "got", "strange", "errors"], "sentSegmentedWithoutStopsStemmed": ["tri", "redo", "step", "plugin", "termin", "got", "strang", "error"]}, {"number": 1181, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Like so:", "sentSegmented": ["like", "so"], "sentSegmentedWithoutStops": ["like"], "sentSegmentedWithoutStopsStemmed": ["like"]}, {"number": 1182, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "$commands[aws_zsh_completer.sh]", "sentSegmented": ["commands", "aws_zsh_completer.sh"], "sentSegmentedWithoutStops": ["commands", "aws_zsh_completer.sh"], "sentSegmentedWithoutStopsStemmed": ["command", "aws_zsh_completer.sh"]}, {"number": 1183, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 16: autoload: not found", "sentSegmented": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "16", "autoload", "not", "found"], "sentSegmentedWithoutStops": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "16", "autoload", "found"], "sentSegmentedWithoutStopsStemmed": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "16", "autoload", "found"]}, {"number": 1184, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 17: bashcompinit: not found", "sentSegmented": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "17", "bashcompinit", "not", "found"], "sentSegmentedWithoutStops": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "17", "bashcompinit", "found"], "sentSegmentedWithoutStopsStemmed": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "17", "bashcompinit", "found"]}, {"number": 1185, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "/home/infinitybyten/.local/bin/aws_zsh_completer.sh: 29: Syntax error: \"(\" unexpected (expecting \"}\")", "sentSegmented": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "29", "syntax", "error", "unexpected", "expecting"], "sentSegmentedWithoutStops": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "29", "syntax", "error", "unexpected", "expecting"], "sentSegmentedWithoutStopsStemmed": ["/home/infinitybyten/.local/bin/aws_zsh_completer.sh", "29", "syntax", "error", "unexpect", "expect"]}, {"number": 1186, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Yes, I know for some reason my aws installs to /home/ ${USER}/.local/bin and I guess the plugin is not able to add the completer at all.", "sentSegmented": ["yes", "i", "know", "for", "some", "reason", "my", "aws", "installs", "to", "/home/", "user", "/.local/bin", "and", "i", "guess", "the", "plugin", "is", "not", "able", "to", "add", "the", "completer", "at", "all"], "sentSegmentedWithoutStops": ["yes", "know", "reason", "aws", "installs", "/home/", "user", "/.local/bin", "guess", "plugin", "able", "add", "completer"], "sentSegmentedWithoutStopsStemmed": ["ye", "know", "reason", "aw", "instal", "/home/", "user", "/.local/bin", "guess", "plugin", "abl", "add", "complet"]}, {"number": 1187, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I am on Kubuntu, and the neither code-paths in the Ubuntu or *NixOS branches of the code here (", "sentSegmented": ["i", "am", "on", "kubuntu", "and", "the", "neither", "code-paths", "in", "the", "ubuntu", "or", "nixos", "branches", "of", "the", "code", "here"], "sentSegmentedWithoutStops": ["kubuntu", "neither", "code-paths", "ubuntu", "nixos", "branches", "code"], "sentSegmentedWithoutStopsStemmed": ["kubuntu", "neither", "code-path", "ubuntu", "nixo", "branch", "code"]}, {"number": 1188, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "ohmyzsh/plugins/aws/aws.plugin.zsh", "sentSegmented": ["ohmyzsh/plugins/aws/aws.plugin.zsh"], "sentSegmentedWithoutStops": ["ohmyzsh/plugins/aws/aws.plugin.zsh"], "sentSegmentedWithoutStopsStemmed": ["ohmyzsh/plugins/aws/aws.plugin.zsh"]}, {"number": 1189, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "         Line 88", "sentSegmented": ["line", "88"], "sentSegmentedWithoutStops": ["line", "88"], "sentSegmentedWithoutStopsStemmed": ["line", "88"]}, {"number": 1190, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      in", "sentSegmented": ["in"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 1191, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "      d53355a", "sentSegmented": ["d53355a"], "sentSegmentedWithoutStops": ["d53355a"], "sentSegmentedWithoutStopsStemmed": ["d53355a"]}, {"number": 1192, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": " if [[ -z $_aws_zsh_completer_path ]]; then", "sentSegmented": ["if", "-z", "_aws_zsh_completer_path", "then"], "sentSegmentedWithoutStops": ["-z", "_aws_zsh_completer_path"], "sentSegmentedWithoutStopsStemmed": ["-z", "_aws_zsh_completer_path"]}, {"number": 1193, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": ") exist.", "sentSegmented": ["exist"], "sentSegmentedWithoutStops": ["exist"], "sentSegmentedWithoutStopsStemmed": ["exist"]}, {"number": 1194, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The removing of the ~/.zcompudump* also does the trick for me, but so does actually running these in the terminal fix it:", "sentSegmented": ["the", "removing", "of", "the", "~/.zcompudump", "also", "does", "the", "trick", "for", "me", "but", "so", "does", "actually", "running", "these", "in", "the", "terminal", "fix", "it"], "sentSegmentedWithoutStops": ["removing", "~/.zcompudump", "also", "trick", "actually", "running", "terminal", "fix"], "sentSegmentedWithoutStopsStemmed": ["remov", "~/.zcompudump", "also", "trick", "actual", "run", "termin", "fix"]}, {"number": 1195, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "autoload bashcompinit && bashcompinit source /home/infinitybyten/.local/bin/aws_zsh_completer.sh", "sentSegmented": ["autoload", "bashcompinit", "bashcompinit", "source", "/home/infinitybyten/.local/bin/aws_zsh_completer.sh"], "sentSegmentedWithoutStops": ["autoload", "bashcompinit", "bashcompinit", "source", "/home/infinitybyten/.local/bin/aws_zsh_completer.sh"], "sentSegmentedWithoutStopsStemmed": ["autoload", "bashcompinit", "bashcompinit", "sourc", "/home/infinitybyten/.local/bin/aws_zsh_completer.sh"]}, {"number": 1196, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Can this be of some help?", "sentSegmented": ["can", "this", "be", "of", "some", "help"], "sentSegmentedWithoutStops": ["help"], "sentSegmentedWithoutStopsStemmed": ["help"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDYyMzEwMTUyMA==", "author": {"login": "mcornella"}, "body": "Hi everyone, I've submitted a PR that detects when the zcompdump file should be regenerated. You can test it locally by upgrading OMZ (`upgrade_oh_my_zsh`), and then using the [new CLI](https://github.com/ohmyzsh/ohmyzsh/pull/8876) to fetch the PR, like so:\r\n```zsh\r\nomz pr test 8878\r\n```\r\nand then checking that adding or removing a plugin with completion has the right behavior. Thanks!", "bodyText": "Hi everyone, I've submitted a PR that detects when the zcompdump file should be regenerated. You can test it locally by upgrading OMZ (upgrade_oh_my_zsh), and then using the new CLI to fetch the PR, like so:\nomz pr test 8878\nand then checking that adding or removing a plugin with completion has the right behavior. Thanks!", "bodyHTML": "<p>Hi everyone, I've submitted a PR that detects when the zcompdump file should be regenerated. You can test it locally by upgrading OMZ (<code>upgrade_oh_my_zsh</code>), and then using the <a href=\"https://github.com/ohmyzsh/ohmyzsh/pull/8876\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/ohmyzsh/ohmyzsh/pull/8876/hovercard\">new CLI</a> to fetch the PR, like so:</p>\n<div class=\"highlight highlight-source-shell\"><pre>omz pr <span class=\"pl-c1\">test</span> 8878</pre></div>\n<p>and then checking that adding or removing a plugin with completion has the right behavior. Thanks!</p>", "createdAt": "2020-05-03T12:19:44Z", "publishedAt": "2020-05-03T12:19:44Z", "lastEditedAt": null, "updatedAt": "2020-05-03T12:19:44Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2020-05-03T15:55:05Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-05-04T20:35:58Z"}}, {"node": {"content": "HEART", "createdAt": "2020-05-04T20:37:07Z"}}, {"node": {"content": "HEART", "createdAt": "2020-07-14T10:40:09Z"}}]}, "bodyParsed": [{"number": 1197, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hi everyone, I've submitted a PR that detects when the zcompdump file should be regenerated.", "sentSegmented": ["hi", "everyone", "i", "'ve", "submitted", "a", "pr", "that", "detects", "when", "the", "zcompdump", "file", "should", "be", "regenerated"], "sentSegmentedWithoutStops": ["hi", "everyone", "'ve", "submitted", "pr", "detects", "zcompdump", "file", "regenerated"], "sentSegmentedWithoutStopsStemmed": ["hi", "everyon", "'ve", "submit", "pr", "detect", "zcompdump", "file", "regener"]}, {"number": 1198, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You can test it locally by upgrading OMZ (upgrade_oh_my_zsh), and then using the new CLI to fetch the PR, like so:", "sentSegmented": ["you", "can", "test", "it", "locally", "by", "upgrading", "omz", "upgrade_oh_my_zsh", "and", "then", "using", "the", "new", "cli", "to", "fetch", "the", "pr", "like", "so"], "sentSegmentedWithoutStops": ["test", "locally", "upgrading", "omz", "upgrade_oh_my_zsh", "using", "new", "cli", "fetch", "pr", "like"], "sentSegmentedWithoutStopsStemmed": ["test", "local", "upgrad", "omz", "upgrade_oh_my_zsh", "use", "new", "cli", "fetch", "pr", "like"]}, {"number": 1199, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "omz pr test 8878", "sentSegmented": ["omz", "pr", "test", "8878"], "sentSegmentedWithoutStops": ["omz", "pr", "test", "8878"], "sentSegmentedWithoutStopsStemmed": ["omz", "pr", "test", "8878"]}, {"number": 1200, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "and then checking that adding or removing a plugin with completion has the right behavior.", "sentSegmented": ["and", "then", "checking", "that", "adding", "or", "removing", "a", "plugin", "with", "completion", "has", "the", "right", "behavior"], "sentSegmentedWithoutStops": ["checking", "adding", "removing", "plugin", "completion", "right", "behavior"], "sentSegmentedWithoutStopsStemmed": ["check", "ad", "remov", "plugin", "complet", "right", "behavior"]}, {"number": 1201, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Thanks!", "sentSegmented": ["thanks"], "sentSegmentedWithoutStops": ["thanks"], "sentSegmentedWithoutStopsStemmed": ["thank"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOITqS6A==", "hasNextPage": true}, "totalCount": 26}, "labels": {"edges": [{"node": {"createdAt": "2019-04-05T16:33:02Z", "name": "Enhancement"}}, {"node": {"createdAt": "2016-03-30T02:37:46Z", "name": "Topic: completion"}}]}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2019-05-23T15:25:15Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-06-14T15:27:19Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-06-30T11:53:08Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-07-12T00:39:31Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-08-23T07:18:05Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-10-18T14:55:06Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-12-17T11:56:55Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-27T14:00:42Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-03-30T08:24:36Z"}}]}, "state": "CLOSED", "titleSegmented": ["after", "enabling", "a", "plugin", "autocompletion", "requires", "manual", "rm", "of", "a", ".zcompdump", "file"], "titleSegmentedWithoutStops": ["enabling", "plugin", "autocompletion", "requires", "manual", "rm", ".zcompdump", "file"], "titleSegmentedWithoutStopsStemmed": ["enabl", "plugin", "autocomplet", "requir", "manual", "rm", ".zcompdump", "file"], "bodyParsed": [{"number": 1085, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Clean installation on macOS Mojave 10.14.3 (18D109).", "sentSegmented": ["clean", "installation", "on", "macos", "mojave", "10.14.3", "18d109"], "sentSegmentedWithoutStops": ["clean", "installation", "macos", "mojave", "10.14.3", "18d109"], "sentSegmentedWithoutStopsStemmed": ["clean", "instal", "maco", "mojav", "10.14.3", "18d109"]}, {"number": 1086, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "git status inside ~/.oh-my-zsh shows clean.", "sentSegmented": ["git", "status", "inside", "~/.oh-my-zsh", "shows", "clean"], "sentSegmentedWithoutStops": ["git", "status", "inside", "~/.oh-my-zsh", "shows", "clean"], "sentSegmentedWithoutStopsStemmed": ["git", "statu", "insid", "~/.oh-my-zsh", "show", "clean"]}, {"number": 1087, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "git rev-parse HEAD shows 52afbf77f63844abd719e565a15af2c34075de7f", "sentSegmented": ["git", "rev-parse", "head", "shows", "52afbf77f63844abd719e565a15af2c34075de7f"], "sentSegmentedWithoutStops": ["git", "rev-parse", "head", "shows", "52afbf77f63844abd719e565a15af2c34075de7f"], "sentSegmentedWithoutStopsStemmed": ["git", "rev-pars", "head", "show", "52afbf77f63844abd719e565a15af2c34075de7f"]}, {"number": 1088, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "No changes to .zshrc.", "sentSegmented": ["no", "changes", "to", ".zshrc"], "sentSegmentedWithoutStops": ["changes", ".zshrc"], "sentSegmentedWithoutStopsStemmed": ["chang", ".zshrc"]}, {"number": 1089, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Plugin for git works fine", "sentSegmented": ["plugin", "for", "git", "works", "fine"], "sentSegmentedWithoutStops": ["plugin", "git", "works", "fine"], "sentSegmentedWithoutStopsStemmed": ["plugin", "git", "work", "fine"]}, {"number": 1090, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\u279c  ~ git [TAB]", "sentSegmented": ["git", "tab"], "sentSegmentedWithoutStops": ["git", "tab"], "sentSegmentedWithoutStopsStemmed": ["git", "tab"]}, {"number": 1091, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "zsh: do you wish to see all 130 possibilities (130 lines)?", "sentSegmented": ["zsh", "do", "you", "wish", "to", "see", "all", "130", "possibilities", "130", "lines"], "sentSegmentedWithoutStops": ["zsh", "wish", "see", "130", "possibilities", "130", "lines"], "sentSegmentedWithoutStopsStemmed": ["zsh", "wish", "see", "130", "possibl", "130", "line"]}, {"number": 1092, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I add docker in .zshrc.", "sentSegmented": ["i", "add", "docker", "in", ".zshrc"], "sentSegmentedWithoutStops": ["add", "docker", ".zshrc"], "sentSegmentedWithoutStopsStemmed": ["add", "docker", ".zshrc"]}, {"number": 1093, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "plugins=(git docker).", "sentSegmented": ["plugins=", "git", "docker"], "sentSegmentedWithoutStops": ["plugins=", "git", "docker"], "sentSegmentedWithoutStopsStemmed": ["plugins=", "git", "docker"]}, {"number": 1094, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I restart my Terminal (or run zsh) and get", "sentSegmented": ["i", "restart", "my", "terminal", "or", "run", "zsh", "and", "get"], "sentSegmentedWithoutStops": ["restart", "terminal", "run", "zsh", "get"], "sentSegmentedWithoutStopsStemmed": ["restart", "termin", "run", "zsh", "get"]}, {"number": 1095, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\u279c  ~ docker [TAB]", "sentSegmented": ["docker", "tab"], "sentSegmentedWithoutStops": ["docker", "tab"], "sentSegmentedWithoutStopsStemmed": ["docker", "tab"]}, {"number": 1096, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Applications/     Data/             Lota/             Public/         ", "sentSegmented": ["applications/", "data/", "lota/", "public/"], "sentSegmentedWithoutStops": ["applications/", "data/", "lota/", "public/"], "sentSegmentedWithoutStopsStemmed": ["applications/", "data/", "lota/", "public/"]}, {"number": 1097, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Archive/          Documents/        Movies/           bin/            ", "sentSegmented": ["archive/", "documents/", "movies/", "bin/"], "sentSegmentedWithoutStops": ["archive/", "documents/", "movies/", "bin/"], "sentSegmentedWithoutStopsStemmed": ["archive/", "documents/", "movies/", "bin/"]}, {"number": 1098, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Desktop/          Downloads/        Music/            ", "sentSegmented": ["desktop/", "downloads/", "music/"], "sentSegmentedWithoutStops": ["desktop/", "downloads/", "music/"], "sentSegmentedWithoutStopsStemmed": ["desktop/", "downloads/", "music/"]}, {"number": 1099, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Developer/        Library/          Pictures/", "sentSegmented": ["developer/", "library/", "pictures/"], "sentSegmentedWithoutStops": ["developer/", "library/", "pictures/"], "sentSegmentedWithoutStopsStemmed": ["developer/", "library/", "pictures/"]}, {"number": 1100, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Git plugin still works.", "sentSegmented": ["git", "plugin", "still", "works"], "sentSegmentedWithoutStops": ["git", "plugin", "still", "works"], "sentSegmentedWithoutStopsStemmed": ["git", "plugin", "still", "work"]}, {"number": 1101, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Adding some other plugins (not completion plugins I presume), like emoji-clock works fine.", "sentSegmented": ["adding", "some", "other", "plugins", "not", "completion", "plugins", "i", "presume", "like", "emoji-clock", "works", "fine"], "sentSegmentedWithoutStops": ["adding", "plugins", "completion", "plugins", "presume", "like", "emoji-clock", "works", "fine"], "sentSegmentedWithoutStopsStemmed": ["ad", "plugin", "complet", "plugin", "presum", "like", "emoji-clock", "work", "fine"]}, {"number": 1102, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Debug log: https://pastebin.com/RikhtP3g", "sentSegmented": ["debug", "log", "https", "//pastebin.com/rikhtp3g"], "sentSegmentedWithoutStops": ["debug", "log", "https", "//pastebin.com/rikhtp3g"], "sentSegmentedWithoutStopsStemmed": ["debug", "log", "http", "//pastebin.com/rikhtp3g"]}]}