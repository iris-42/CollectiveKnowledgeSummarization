{"repository": {"owner": {"login": "ohmyzsh"}, "name": "ohmyzsh", "forkCount": 21698, "stargazerCount": 124848, "createdAt": "2009-08-28T18:15:37Z", "updatedAt": "2021-03-12T09:52:26Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "shell"}}}, {"node": {"topic": {"name": "zsh-configuration"}}}, {"node": {"topic": {"name": "theme"}}}, {"node": {"topic": {"name": "terminal"}}}, {"node": {"topic": {"name": "productivity"}}}, {"node": {"topic": {"name": "hacktoberfest"}}}]}, "languages": {"edges": [{"node": {"name": "Shell"}}, {"node": {"name": "Python"}}, {"node": {"name": "Makefile"}}, {"node": {"name": "Perl"}}, {"node": {"name": "Roff"}}, {"node": {"name": "Dockerfile"}}]}, "primaryLanguage": {"name": "Shell"}}, "id": "MDU6SXNzdWUzOTg3MTcxNg==", "number": 3009, "author": {"login": "landaire"}, "title": "Why is the git plugin slow for large repos?", "body": "Referring to #1160, why is it that the plugin is so slow for large repositories? I noticed this today when getting oh-my-zsh set up in my vagrant environment which uses [git-prompt](https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh) and has no noticeable performance hit.\n", "bodyHTML": "<p>Referring to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"5057668\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ohmyzsh/ohmyzsh/issues/1160\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ohmyzsh/ohmyzsh/issues/1160/hovercard\" href=\"https://github.com/ohmyzsh/ohmyzsh/issues/1160\">#1160</a>, why is it that the plugin is so slow for large repositories? I noticed this today when getting oh-my-zsh set up in my vagrant environment which uses <a href=\"https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh\">git-prompt</a> and has no noticeable performance hit.</p>", "bodyText": "Referring to #1160, why is it that the plugin is so slow for large repositories? I noticed this today when getting oh-my-zsh set up in my vagrant environment which uses git-prompt and has no noticeable performance hit.", "assignees": {"edges": []}, "createdAt": "2014-08-08T23:32:35Z", "closed": true, "closedAt": "2019-04-09T09:46:45Z", "lastEditedAt": null, "publishedAt": "2014-08-08T23:32:35Z", "comments": {"edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDUxNjY5NzIz", "author": {"login": "landaire"}, "body": "Aaah I decided to look at the changes (duh) and see that it's `git status` that takes forever. Would it not be a decent idea to add an option to globally disable showing clean/dirty in your profile? In this VM environment in particular it takes _11 seconds_ to do a `git status`.\n\nIf it seems like a good idea I'd be willing to put together a pull request that allows a config option to just disable checking for a dirty branch. The reason why I don't want to associate it with my git config is because in the VM I don't do any committing and would rather just disable it and leave it enabled in my host environment.\n", "bodyText": "Aaah I decided to look at the changes (duh) and see that it's git status that takes forever. Would it not be a decent idea to add an option to globally disable showing clean/dirty in your profile? In this VM environment in particular it takes 11 seconds to do a git status.\nIf it seems like a good idea I'd be willing to put together a pull request that allows a config option to just disable checking for a dirty branch. The reason why I don't want to associate it with my git config is because in the VM I don't do any committing and would rather just disable it and leave it enabled in my host environment.", "bodyHTML": "<p>Aaah I decided to look at the changes (duh) and see that it's <code>git status</code> that takes forever. Would it not be a decent idea to add an option to globally disable showing clean/dirty in your profile? In this VM environment in particular it takes <em>11 seconds</em> to do a <code>git status</code>.</p>\n<p>If it seems like a good idea I'd be willing to put together a pull request that allows a config option to just disable checking for a dirty branch. The reason why I don't want to associate it with my git config is because in the VM I don't do any committing and would rather just disable it and leave it enabled in my host environment.</p>", "createdAt": "2014-08-08T23:49:28Z", "publishedAt": "2014-08-08T23:49:28Z", "lastEditedAt": null, "updatedAt": "2014-08-08T23:57:08Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4889, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Aaah I decided to look at the changes (duh) and see that it's git status that takes forever.", "sentSegmented": ["aaah", "i", "decided", "to", "look", "at", "the", "changes", "duh", "and", "see", "that", "it", "'s", "git", "status", "that", "takes", "forever"], "sentSegmentedWithoutStops": ["aaah", "decided", "look", "changes", "duh", "see", "'s", "git", "status", "takes", "forever"], "sentSegmentedWithoutStopsStemmed": ["aaah", "decid", "look", "chang", "duh", "see", "'s", "git", "statu", "take", "forev"]}, {"number": 4890, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Would it not be a decent idea to add an option to globally disable showing clean/dirty in your profile?", "sentSegmented": ["would", "it", "not", "be", "a", "decent", "idea", "to", "add", "an", "option", "to", "globally", "disable", "showing", "clean/dirty", "in", "your", "profile"], "sentSegmentedWithoutStops": ["would", "decent", "idea", "add", "option", "globally", "disable", "showing", "clean/dirty", "profile"], "sentSegmentedWithoutStopsStemmed": ["would", "decent", "idea", "add", "option", "global", "disabl", "show", "clean/dirti", "profil"]}, {"number": 4891, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In this VM environment in particular it takes 11 seconds to do a git status.", "sentSegmented": ["in", "this", "vm", "environment", "in", "particular", "it", "takes", "11", "seconds", "to", "do", "a", "git", "status"], "sentSegmentedWithoutStops": ["vm", "environment", "particular", "takes", "11", "seconds", "git", "status"], "sentSegmentedWithoutStopsStemmed": ["vm", "environ", "particular", "take", "11", "second", "git", "statu"]}, {"number": 4892, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If it seems like a good idea I'd be willing to put together a pull request that allows a config option to just disable checking for a dirty branch.", "sentSegmented": ["if", "it", "seems", "like", "a", "good", "idea", "i", "'d", "be", "willing", "to", "put", "together", "a", "pull", "request", "that", "allows", "a", "config", "option", "to", "just", "disable", "checking", "for", "a", "dirty", "branch"], "sentSegmentedWithoutStops": ["seems", "like", "good", "idea", "'d", "willing", "put", "together", "pull", "request", "allows", "config", "option", "disable", "checking", "dirty", "branch"], "sentSegmentedWithoutStopsStemmed": ["seem", "like", "good", "idea", "'d", "will", "put", "togeth", "pull", "request", "allow", "config", "option", "disabl", "check", "dirti", "branch"]}, {"number": 4893, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The reason why I don't want to associate it with my git config is because in the VM I don't do any committing and would rather just disable it and leave it enabled in my host environment.", "sentSegmented": ["the", "reason", "why", "i", "do", "n't", "want", "to", "associate", "it", "with", "my", "git", "config", "is", "because", "in", "the", "vm", "i", "do", "n't", "do", "any", "committing", "and", "would", "rather", "just", "disable", "it", "and", "leave", "it", "enabled", "in", "my", "host", "environment"], "sentSegmentedWithoutStops": ["reason", "n't", "want", "associate", "git", "config", "vm", "n't", "committing", "would", "rather", "disable", "leave", "enabled", "host", "environment"], "sentSegmentedWithoutStopsStemmed": ["reason", "n't", "want", "associ", "git", "config", "vm", "n't", "commit", "would", "rather", "disabl", "leav", "enabl", "host", "environ"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUxNjcxMTAw", "author": {"login": "MikeDacre"}, "body": "I had the same problem. I got around it by adding the if statement:\n`if [ -n \"${CHECKGIT+x}\" ]; then`\nbefore the git status request. By default I have $CHECKGIT unset, so I don't see the clean/dirty status of the repo, only the current branch. I then aliased cg to `export CHECKGIT=1`, and ncg to `unset CHECKGIT`. So if I am in a reasonably sized repo on a fast machine, I just type `cg` and I am away. Otherwise it is unmanageably slow.\n\nA pull request that made this (or something more sophisticated) standard would be great. An ideal solution would include a time limit on the `git status` check that disabled status checking in that repo if the command return time exceeded 0.5s or something similar.\n", "bodyText": "I had the same problem. I got around it by adding the if statement:\nif [ -n \"${CHECKGIT+x}\" ]; then\nbefore the git status request. By default I have $CHECKGIT unset, so I don't see the clean/dirty status of the repo, only the current branch. I then aliased cg to export CHECKGIT=1, and ncg to unset CHECKGIT. So if I am in a reasonably sized repo on a fast machine, I just type cg and I am away. Otherwise it is unmanageably slow.\nA pull request that made this (or something more sophisticated) standard would be great. An ideal solution would include a time limit on the git status check that disabled status checking in that repo if the command return time exceeded 0.5s or something similar.", "bodyHTML": "<p>I had the same problem. I got around it by adding the if statement:<br>\n<code>if [ -n \"${CHECKGIT+x}\" ]; then</code><br>\nbefore the git status request. By default I have $CHECKGIT unset, so I don't see the clean/dirty status of the repo, only the current branch. I then aliased cg to <code>export CHECKGIT=1</code>, and ncg to <code>unset CHECKGIT</code>. So if I am in a reasonably sized repo on a fast machine, I just type <code>cg</code> and I am away. Otherwise it is unmanageably slow.</p>\n<p>A pull request that made this (or something more sophisticated) standard would be great. An ideal solution would include a time limit on the <code>git status</code> check that disabled status checking in that repo if the command return time exceeded 0.5s or something similar.</p>", "createdAt": "2014-08-09T00:22:12Z", "publishedAt": "2014-08-09T00:22:12Z", "lastEditedAt": null, "updatedAt": "2014-08-09T00:22:12Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4894, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I had the same problem.", "sentSegmented": ["i", "had", "the", "same", "problem"], "sentSegmentedWithoutStops": ["problem"], "sentSegmentedWithoutStopsStemmed": ["problem"]}, {"number": 4895, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I got around it by adding the if statement:", "sentSegmented": ["i", "got", "around", "it", "by", "adding", "the", "if", "statement"], "sentSegmentedWithoutStops": ["got", "around", "adding", "statement"], "sentSegmentedWithoutStopsStemmed": ["got", "around", "ad", "statement"]}, {"number": 4896, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "if [ -n \"${CHECKGIT+x}\" ]; then", "sentSegmented": ["if", "-n", "checkgit+x", "then"], "sentSegmentedWithoutStops": ["-n", "checkgit+x"], "sentSegmentedWithoutStopsStemmed": ["-n", "checkgit+x"]}, {"number": 4897, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "before the git status request.", "sentSegmented": ["before", "the", "git", "status", "request"], "sentSegmentedWithoutStops": ["git", "status", "request"], "sentSegmentedWithoutStopsStemmed": ["git", "statu", "request"]}, {"number": 4898, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "By default I have $CHECKGIT unset, so I don't see the clean/dirty status of the repo, only the current branch.", "sentSegmented": ["by", "default", "i", "have", "checkgit", "unset", "so", "i", "do", "n't", "see", "the", "clean/dirty", "status", "of", "the", "repo", "only", "the", "current", "branch"], "sentSegmentedWithoutStops": ["default", "checkgit", "unset", "n't", "see", "clean/dirty", "status", "repo", "current", "branch"], "sentSegmentedWithoutStopsStemmed": ["default", "checkgit", "unset", "n't", "see", "clean/dirti", "statu", "repo", "current", "branch"]}, {"number": 4899, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I then aliased cg to export CHECKGIT=1, and ncg to unset CHECKGIT.", "sentSegmented": ["i", "then", "aliased", "cg", "to", "export", "checkgit=1", "and", "ncg", "to", "unset", "checkgit"], "sentSegmentedWithoutStops": ["aliased", "cg", "export", "checkgit=1", "ncg", "unset", "checkgit"], "sentSegmentedWithoutStopsStemmed": ["alias", "cg", "export", "checkgit=1", "ncg", "unset", "checkgit"]}, {"number": 4900, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So if I am in a reasonably sized repo on a fast machine, I just type cg and I am away.", "sentSegmented": ["so", "if", "i", "am", "in", "a", "reasonably", "sized", "repo", "on", "a", "fast", "machine", "i", "just", "type", "cg", "and", "i", "am", "away"], "sentSegmentedWithoutStops": ["reasonably", "sized", "repo", "fast", "machine", "type", "cg", "away"], "sentSegmentedWithoutStopsStemmed": ["reason", "size", "repo", "fast", "machin", "type", "cg", "away"]}, {"number": 4901, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Otherwise it is unmanageably slow.", "sentSegmented": ["otherwise", "it", "is", "unmanageably", "slow"], "sentSegmentedWithoutStops": ["otherwise", "unmanageably", "slow"], "sentSegmentedWithoutStopsStemmed": ["otherwis", "unmanag", "slow"]}, {"number": 4902, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "A pull request that made this (or something more sophisticated) standard would be great.", "sentSegmented": ["a", "pull", "request", "that", "made", "this", "or", "something", "more", "sophisticated", "standard", "would", "be", "great"], "sentSegmentedWithoutStops": ["pull", "request", "made", "something", "sophisticated", "standard", "would", "great"], "sentSegmentedWithoutStopsStemmed": ["pull", "request", "made", "someth", "sophist", "standard", "would", "great"]}, {"number": 4903, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "An ideal solution would include a time limit on the git status check that disabled status checking in that repo if the command return time exceeded 0.5s or something similar.", "sentSegmented": ["an", "ideal", "solution", "would", "include", "a", "time", "limit", "on", "the", "git", "status", "check", "that", "disabled", "status", "checking", "in", "that", "repo", "if", "the", "command", "return", "time", "exceeded", "0.5s", "or", "something", "similar"], "sentSegmentedWithoutStops": ["ideal", "solution", "would", "include", "time", "limit", "git", "status", "check", "disabled", "status", "checking", "repo", "command", "return", "time", "exceeded", "0.5s", "something", "similar"], "sentSegmentedWithoutStopsStemmed": ["ideal", "solut", "would", "includ", "time", "limit", "git", "statu", "check", "disabl", "statu", "check", "repo", "command", "return", "time", "exceed", "0.5", "someth", "similar"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUxODM1NTU4", "author": {"login": "landaire"}, "body": "The timeout is a pretty decent idea. I'll see if I can write up a basic pull request tonight to support `CHECKGIT`.\n\n@MikeDacre have you happened to try `DISABLE_UNTRACKED_FILES_DIRTY`? I never saw it:\n\n```\n# Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\n```\n\nMy VM is totally screwed up right now so I can't test in that environment either.\n", "bodyText": "The timeout is a pretty decent idea. I'll see if I can write up a basic pull request tonight to support CHECKGIT.\n@MikeDacre have you happened to try DISABLE_UNTRACKED_FILES_DIRTY? I never saw it:\n# Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\n\nMy VM is totally screwed up right now so I can't test in that environment either.", "bodyHTML": "<p>The timeout is a pretty decent idea. I'll see if I can write up a basic pull request tonight to support <code>CHECKGIT</code>.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MikeDacre/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MikeDacre\">@MikeDacre</a> have you happened to try <code>DISABLE_UNTRACKED_FILES_DIRTY</code>? I never saw it:</p>\n<pre><code># Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\n</code></pre>\n<p>My VM is totally screwed up right now so I can't test in that environment either.</p>", "createdAt": "2014-08-11T20:26:09Z", "publishedAt": "2014-08-11T20:26:09Z", "lastEditedAt": null, "updatedAt": "2014-08-11T20:58:51Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2017-05-07T17:09:38Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-08-10T15:30:40Z"}}]}, "bodyParsed": [{"number": 4904, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The timeout is a pretty decent idea.", "sentSegmented": ["the", "timeout", "is", "a", "pretty", "decent", "idea"], "sentSegmentedWithoutStops": ["timeout", "pretty", "decent", "idea"], "sentSegmentedWithoutStopsStemmed": ["timeout", "pretti", "decent", "idea"]}, {"number": 4905, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I'll see if I can write up a basic pull request tonight to support CHECKGIT.", "sentSegmented": ["i", "'ll", "see", "if", "i", "can", "write", "up", "a", "basic", "pull", "request", "tonight", "to", "support", "checkgit"], "sentSegmentedWithoutStops": ["'ll", "see", "write", "basic", "pull", "request", "tonight", "support", "checkgit"], "sentSegmentedWithoutStopsStemmed": ["'ll", "see", "write", "basic", "pull", "request", "tonight", "support", "checkgit"]}, {"number": 4906, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@MikeDacre have you happened to try DISABLE_UNTRACKED_FILES_DIRTY?", "sentSegmented": ["mikedacre", "have", "you", "happened", "to", "try", "disable_untracked_files_dirty"], "sentSegmentedWithoutStops": ["mikedacre", "happened", "try", "disable_untracked_files_dirty"], "sentSegmentedWithoutStopsStemmed": ["mikedacr", "happen", "tri", "disable_untracked_files_dirti"]}, {"number": 4907, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I never saw it:", "sentSegmented": ["i", "never", "saw", "it"], "sentSegmentedWithoutStops": ["never", "saw"], "sentSegmentedWithoutStopsStemmed": ["never", "saw"]}, {"number": 4908, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# Uncomment the following line if you want to disable marking untracked files", "sentSegmented": ["uncomment", "the", "following", "line", "if", "you", "want", "to", "disable", "marking", "untracked", "files"], "sentSegmentedWithoutStops": ["uncomment", "following", "line", "want", "disable", "marking", "untracked", "files"], "sentSegmentedWithoutStopsStemmed": ["uncom", "follow", "line", "want", "disabl", "mark", "untrack", "file"]}, {"number": 4909, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# under VCS as dirty. This makes repository status check for large repositories", "sentSegmented": ["under", "vcs", "as", "dirty", "this", "makes", "repository", "status", "check", "for", "large", "repositories"], "sentSegmentedWithoutStops": ["vcs", "dirty", "makes", "repository", "status", "check", "large", "repositories"], "sentSegmentedWithoutStopsStemmed": ["vc", "dirti", "make", "repositori", "statu", "check", "larg", "repositori"]}, {"number": 4910, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# much, much faster.", "sentSegmented": ["much", "much", "faster"], "sentSegmentedWithoutStops": ["much", "much", "faster"], "sentSegmentedWithoutStopsStemmed": ["much", "much", "faster"]}, {"number": 4911, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"", "sentSegmented": ["disable_untracked_files_dirty=", "true"], "sentSegmentedWithoutStops": ["disable_untracked_files_dirty=", "true"], "sentSegmentedWithoutStopsStemmed": ["disable_untracked_files_dirty=", "true"]}, {"number": 4912, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "My VM is totally screwed up right now so I can't test in that environment either.", "sentSegmented": ["my", "vm", "is", "totally", "screwed", "up", "right", "now", "so", "i", "ca", "n't", "test", "in", "that", "environment", "either"], "sentSegmentedWithoutStops": ["vm", "totally", "screwed", "right", "ca", "n't", "test", "environment", "either"], "sentSegmentedWithoutStopsStemmed": ["vm", "total", "screw", "right", "ca", "n't", "test", "environ", "either"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUxODQ4MjEw", "author": {"login": "MikeDacre"}, "body": "@landr0id No I didn't know about the `DISABLE_UNTRACKED_FILES_DIRTY` option, it looks promising though.\n", "bodyText": "@landr0id No I didn't know about the DISABLE_UNTRACKED_FILES_DIRTY option, it looks promising though.", "bodyHTML": "<p>@landr0id No I didn't know about the <code>DISABLE_UNTRACKED_FILES_DIRTY</code> option, it looks promising though.</p>", "createdAt": "2014-08-11T22:13:23Z", "publishedAt": "2014-08-11T22:13:23Z", "lastEditedAt": null, "updatedAt": "2014-08-11T22:13:23Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4913, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@landr0id No I didn't know about the DISABLE_UNTRACKED_FILES_DIRTY option, it looks promising though.", "sentSegmented": ["landr0id", "no", "i", "did", "n't", "know", "about", "the", "disable_untracked_files_dirty", "option", "it", "looks", "promising", "though"], "sentSegmentedWithoutStops": ["landr0id", "n't", "know", "disable_untracked_files_dirty", "option", "looks", "promising", "though"], "sentSegmentedWithoutStopsStemmed": ["landr0id", "n't", "know", "disable_untracked_files_dirti", "option", "look", "promis", "though"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDUyNjc1NjEz", "author": {"login": "landaire"}, "body": "Just tried `DISABLE_UNTRACKED_FILES_DIRTY` in my VM (finally got it working again), and it's a _lot_ faster. There's still ~1 second of lag though.\n", "bodyText": "Just tried DISABLE_UNTRACKED_FILES_DIRTY in my VM (finally got it working again), and it's a lot faster. There's still ~1 second of lag though.", "bodyHTML": "<p>Just tried <code>DISABLE_UNTRACKED_FILES_DIRTY</code> in my VM (finally got it working again), and it's a <em>lot</em> faster. There's still ~1 second of lag though.</p>", "createdAt": "2014-08-19T18:14:51Z", "publishedAt": "2014-08-19T18:14:51Z", "lastEditedAt": null, "updatedAt": "2014-08-19T18:14:51Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4914, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Just tried DISABLE_UNTRACKED_FILES_DIRTY in my VM (finally got it working again), and it's a lot faster.", "sentSegmented": ["just", "tried", "disable_untracked_files_dirty", "in", "my", "vm", "finally", "got", "it", "working", "again", "and", "it", "'s", "a", "lot", "faster"], "sentSegmentedWithoutStops": ["tried", "disable_untracked_files_dirty", "vm", "finally", "got", "working", "'s", "lot", "faster"], "sentSegmentedWithoutStopsStemmed": ["tri", "disable_untracked_files_dirti", "vm", "final", "got", "work", "'s", "lot", "faster"]}, {"number": 4915, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "There's still ~1 second of lag though.", "sentSegmented": ["there", "'s", "still", "~1", "second", "of", "lag", "though"], "sentSegmentedWithoutStops": ["'s", "still", "~1", "second", "lag", "though"], "sentSegmentedWithoutStopsStemmed": ["'s", "still", "~1", "second", "lag", "though"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY3OTc1MTkx", "author": {"login": "nickdesaulniers"}, "body": "I have the worst time in Mozilla's large repos; autocomplete completely locks up and I have to ctrl+c it.  Maybe the plugin maintainer knows? cc @Stibbons \n", "bodyText": "I have the worst time in Mozilla's large repos; autocomplete completely locks up and I have to ctrl+c it.  Maybe the plugin maintainer knows? cc @stibbons", "bodyHTML": "<p>I have the worst time in Mozilla's large repos; autocomplete completely locks up and I have to ctrl+c it.  Maybe the plugin maintainer knows? cc <a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/stibbons/hovercard\" href=\"https://github.com/stibbons\">@stibbons</a></p>", "createdAt": "2014-12-23T17:16:42Z", "publishedAt": "2014-12-23T17:16:42Z", "lastEditedAt": null, "updatedAt": "2014-12-23T17:16:42Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4916, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I have the worst time in Mozilla's large repos; autocomplete completely locks up and I have to ctrl+c it.", "sentSegmented": ["i", "have", "the", "worst", "time", "in", "mozilla", "'s", "large", "repos", "autocomplete", "completely", "locks", "up", "and", "i", "have", "to", "ctrl+c", "it"], "sentSegmentedWithoutStops": ["worst", "time", "mozilla", "'s", "large", "repos", "autocomplete", "completely", "locks", "ctrl+c"], "sentSegmentedWithoutStopsStemmed": ["worst", "time", "mozilla", "'s", "larg", "repo", "autocomplet", "complet", "lock", "ctrl+c"]}, {"number": 4917, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Maybe the plugin maintainer knows?", "sentSegmented": ["maybe", "the", "plugin", "maintainer", "knows"], "sentSegmentedWithoutStops": ["maybe", "plugin", "maintainer", "knows"], "sentSegmentedWithoutStopsStemmed": ["mayb", "plugin", "maintain", "know"]}, {"number": 4918, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "cc @stibbons", "sentSegmented": ["cc", "stibbons"], "sentSegmentedWithoutStops": ["cc", "stibbons"], "sentSegmentedWithoutStopsStemmed": ["cc", "stibbon"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDY3OTc1Njc5", "author": {"login": "MikeDacre"}, "body": "Hi Nick,\n\nYou need to disable the plugin for those kinds of repos, I mentioned my\nmethod for doing this earlier on in the thread. If you don't search the\ntree for changes every time, it isn't a problem. I am not sure of a good\nway to handle this programmatically, but maybe someone else knows. The\nissue is that if you want to have information about the number of\noutstanding changes, you actually need to run git, if you run git, you have\nto wait for it to complete, and git is the part that is slow.\n\nUsing a key binding the way I suggested earlier in this thread is a good\nway to easily enable/disable the git dependant parts of the plugin, other\npeople have more sophisticated solutions.\n\nBest,\n\nMike\n\nOn Tue, Dec 23, 2014 at 9:17 AM, Nick Desaulniers notifications@github.com\nwrote:\n\n> I have the worst time in Mozilla's large repos; autocomplete completely\n> locks up and I have to ctrl+c it. Maybe the plugin maintainer knows? cc\n> @Stibbons https://github.com/Stibbons\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/robbyrussell/oh-my-zsh/issues/3009#issuecomment-67975191\n> .\n", "bodyText": "Hi Nick,\nYou need to disable the plugin for those kinds of repos, I mentioned my\nmethod for doing this earlier on in the thread. If you don't search the\ntree for changes every time, it isn't a problem. I am not sure of a good\nway to handle this programmatically, but maybe someone else knows. The\nissue is that if you want to have information about the number of\noutstanding changes, you actually need to run git, if you run git, you have\nto wait for it to complete, and git is the part that is slow.\nUsing a key binding the way I suggested earlier in this thread is a good\nway to easily enable/disable the git dependant parts of the plugin, other\npeople have more sophisticated solutions.\nBest,\nMike\nOn Tue, Dec 23, 2014 at 9:17 AM, Nick Desaulniers notifications@github.com\nwrote:\n\nI have the worst time in Mozilla's large repos; autocomplete completely\nlocks up and I have to ctrl+c it. Maybe the plugin maintainer knows? cc\n@stibbons https://github.com/Stibbons\n\u2014\nReply to this email directly or view it on GitHub\n#3009 (comment)\n.", "bodyHTML": "<p>Hi Nick,</p>\n<p>You need to disable the plugin for those kinds of repos, I mentioned my<br>\nmethod for doing this earlier on in the thread. If you don't search the<br>\ntree for changes every time, it isn't a problem. I am not sure of a good<br>\nway to handle this programmatically, but maybe someone else knows. The<br>\nissue is that if you want to have information about the number of<br>\noutstanding changes, you actually need to run git, if you run git, you have<br>\nto wait for it to complete, and git is the part that is slow.</p>\n<p>Using a key binding the way I suggested earlier in this thread is a good<br>\nway to easily enable/disable the git dependant parts of the plugin, other<br>\npeople have more sophisticated solutions.</p>\n<p>Best,</p>\n<p>Mike</p>\n<p>On Tue, Dec 23, 2014 at 9:17 AM, Nick Desaulniers <a href=\"mailto:notifications@github.com\">notifications@github.com</a><br>\nwrote:</p>\n<blockquote>\n<p>I have the worst time in Mozilla's large repos; autocomplete completely<br>\nlocks up and I have to ctrl+c it. Maybe the plugin maintainer knows? cc<br>\n<a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/stibbons/hovercard\" href=\"https://github.com/stibbons\">@stibbons</a> <a href=\"https://github.com/Stibbons\">https://github.com/Stibbons</a></p>\n<p>\u2014<br>\nReply to this email directly or view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"39871716\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ohmyzsh/ohmyzsh/issues/3009\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ohmyzsh/ohmyzsh/issues/3009/hovercard?comment_id=67975191&amp;comment_type=issue_comment\" href=\"https://github.com/ohmyzsh/ohmyzsh/issues/3009#issuecomment-67975191\">#3009 (comment)</a><br>\n.</p>\n</blockquote>", "createdAt": "2014-12-23T17:21:10Z", "publishedAt": "2014-12-23T17:21:10Z", "lastEditedAt": null, "updatedAt": "2014-12-23T17:21:10Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4919, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hi Nick,", "sentSegmented": ["hi", "nick"], "sentSegmentedWithoutStops": ["hi", "nick"], "sentSegmentedWithoutStopsStemmed": ["hi", "nick"]}, {"number": 4920, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You need to disable the plugin for those kinds of repos, I mentioned my", "sentSegmented": ["you", "need", "to", "disable", "the", "plugin", "for", "those", "kinds", "of", "repos", "i", "mentioned", "my"], "sentSegmentedWithoutStops": ["need", "disable", "plugin", "kinds", "repos", "mentioned"], "sentSegmentedWithoutStopsStemmed": ["need", "disabl", "plugin", "kind", "repo", "mention"]}, {"number": 4921, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "method for doing this earlier on in the thread.", "sentSegmented": ["method", "for", "doing", "this", "earlier", "on", "in", "the", "thread"], "sentSegmentedWithoutStops": ["method", "earlier", "thread"], "sentSegmentedWithoutStopsStemmed": ["method", "earlier", "thread"]}, {"number": 4922, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If you don't search the", "sentSegmented": ["if", "you", "do", "n't", "search", "the"], "sentSegmentedWithoutStops": ["n't", "search"], "sentSegmentedWithoutStopsStemmed": ["n't", "search"]}, {"number": 4923, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "tree for changes every time, it isn't a problem.", "sentSegmented": ["tree", "for", "changes", "every", "time", "it", "is", "n't", "a", "problem"], "sentSegmentedWithoutStops": ["tree", "changes", "every", "time", "n't", "problem"], "sentSegmentedWithoutStopsStemmed": ["tree", "chang", "everi", "time", "n't", "problem"]}, {"number": 4924, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I am not sure of a good", "sentSegmented": ["i", "am", "not", "sure", "of", "a", "good"], "sentSegmentedWithoutStops": ["sure", "good"], "sentSegmentedWithoutStopsStemmed": ["sure", "good"]}, {"number": 4925, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "way to handle this programmatically, but maybe someone else knows.", "sentSegmented": ["way", "to", "handle", "this", "programmatically", "but", "maybe", "someone", "else", "knows"], "sentSegmentedWithoutStops": ["way", "handle", "programmatically", "maybe", "someone", "else", "knows"], "sentSegmentedWithoutStopsStemmed": ["way", "handl", "programmat", "mayb", "someon", "els", "know"]}, {"number": 4926, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The", "sentSegmented": ["the"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 4927, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "issue is that if you want to have information about the number of", "sentSegmented": ["issue", "is", "that", "if", "you", "want", "to", "have", "information", "about", "the", "number", "of"], "sentSegmentedWithoutStops": ["issue", "want", "information", "number"], "sentSegmentedWithoutStopsStemmed": ["issu", "want", "inform", "number"]}, {"number": 4928, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "outstanding changes, you actually need to run git, if you run git, you have", "sentSegmented": ["outstanding", "changes", "you", "actually", "need", "to", "run", "git", "if", "you", "run", "git", "you", "have"], "sentSegmentedWithoutStops": ["outstanding", "changes", "actually", "need", "run", "git", "run", "git"], "sentSegmentedWithoutStopsStemmed": ["outstand", "chang", "actual", "need", "run", "git", "run", "git"]}, {"number": 4929, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "to wait for it to complete, and git is the part that is slow.", "sentSegmented": ["to", "wait", "for", "it", "to", "complete", "and", "git", "is", "the", "part", "that", "is", "slow"], "sentSegmentedWithoutStops": ["wait", "complete", "git", "part", "slow"], "sentSegmentedWithoutStopsStemmed": ["wait", "complet", "git", "part", "slow"]}, {"number": 4930, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Using a key binding the way I suggested earlier in this thread is a good", "sentSegmented": ["using", "a", "key", "binding", "the", "way", "i", "suggested", "earlier", "in", "this", "thread", "is", "a", "good"], "sentSegmentedWithoutStops": ["using", "key", "binding", "way", "suggested", "earlier", "thread", "good"], "sentSegmentedWithoutStopsStemmed": ["use", "key", "bind", "way", "suggest", "earlier", "thread", "good"]}, {"number": 4931, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "way to easily enable/disable the git dependant parts of the plugin, other", "sentSegmented": ["way", "to", "easily", "enable/disable", "the", "git", "dependant", "parts", "of", "the", "plugin", "other"], "sentSegmentedWithoutStops": ["way", "easily", "enable/disable", "git", "dependant", "parts", "plugin"], "sentSegmentedWithoutStopsStemmed": ["way", "easili", "enable/dis", "git", "depend", "part", "plugin"]}, {"number": 4932, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "people have more sophisticated solutions.", "sentSegmented": ["people", "have", "more", "sophisticated", "solutions"], "sentSegmentedWithoutStops": ["people", "sophisticated", "solutions"], "sentSegmentedWithoutStopsStemmed": ["peopl", "sophist", "solut"]}, {"number": 4933, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Best,", "sentSegmented": ["best"], "sentSegmentedWithoutStops": ["best"], "sentSegmentedWithoutStopsStemmed": ["best"]}, {"number": 4934, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Mike", "sentSegmented": ["mike"], "sentSegmentedWithoutStops": ["mike"], "sentSegmentedWithoutStopsStemmed": ["mike"]}, {"number": 4935, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "On Tue, Dec 23, 2014 at 9:17 AM, Nick Desaulniers notifications@github.com", "sentSegmented": ["on", "tue", "dec", "23", "2014", "at", "9:17", "am", "nick", "desaulniers", "notifications", "github.com"], "sentSegmentedWithoutStops": ["tue", "dec", "23", "2014", "9:17", "nick", "desaulniers", "notifications", "github.com"], "sentSegmentedWithoutStopsStemmed": ["tue", "dec", "23", "2014", "9:17", "nick", "desaulni", "notif", "github.com"]}, {"number": 4936, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "wrote:", "sentSegmented": ["wrote"], "sentSegmentedWithoutStops": ["wrote"], "sentSegmentedWithoutStopsStemmed": ["wrote"]}, {"number": 4937, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "I have the worst time in Mozilla's large repos; autocomplete completely", "sentSegmented": ["i", "have", "the", "worst", "time", "in", "mozilla", "'s", "large", "repos", "autocomplete", "completely"], "sentSegmentedWithoutStops": ["worst", "time", "mozilla", "'s", "large", "repos", "autocomplete", "completely"], "sentSegmentedWithoutStopsStemmed": ["worst", "time", "mozilla", "'s", "larg", "repo", "autocomplet", "complet"]}, {"number": 4938, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "locks up and I have to ctrl+c it.", "sentSegmented": ["locks", "up", "and", "i", "have", "to", "ctrl+c", "it"], "sentSegmentedWithoutStops": ["locks", "ctrl+c"], "sentSegmentedWithoutStopsStemmed": ["lock", "ctrl+c"]}, {"number": 4939, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Maybe the plugin maintainer knows?", "sentSegmented": ["maybe", "the", "plugin", "maintainer", "knows"], "sentSegmentedWithoutStops": ["maybe", "plugin", "maintainer", "knows"], "sentSegmentedWithoutStopsStemmed": ["mayb", "plugin", "maintain", "know"]}, {"number": 4940, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "cc", "sentSegmented": ["cc"], "sentSegmentedWithoutStops": ["cc"], "sentSegmentedWithoutStopsStemmed": ["cc"]}, {"number": 4941, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "@stibbons https://github.com/Stibbons", "sentSegmented": ["stibbons", "https", "//github.com/stibbons"], "sentSegmentedWithoutStops": ["stibbons", "https", "//github.com/stibbons"], "sentSegmentedWithoutStopsStemmed": ["stibbon", "http", "//github.com/stibbon"]}, {"number": 4942, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "\u2014", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 4943, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "Reply to this email directly or view it on GitHub", "sentSegmented": ["reply", "to", "this", "email", "directly", "or", "view", "it", "on", "github"], "sentSegmentedWithoutStops": ["reply", "email", "directly", "view", "github"], "sentSegmentedWithoutStopsStemmed": ["repli", "email", "directli", "view", "github"]}, {"number": 4944, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": "#3009 (comment)", "sentSegmented": ["3009", "comment"], "sentSegmentedWithoutStops": ["3009", "comment"], "sentSegmentedWithoutStopsStemmed": ["3009", "comment"]}, {"number": 4945, "isCode": false, "isBlockQuote": true, "blockQuoteDepth": 1, "sent": ".", "sentSegmented": [], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDg2NjkxMDc5", "author": {"login": "apjanke"}, "body": "Hmm. If someone's interested, it actually might not be that hard to implement a simple timeout for `git status` using zsh's \"`coproc`\" support. You could fire up the `git status` command using [coproc](http://zsh.sourceforge.net/Doc/Release/Shell-Grammar.html#Shell-Grammar), and then do a timeout-limited [`read -t <seconds> -p <coproc>`](http://zsh.sourceforge.net/Doc/Release/Shell-Builtin-Commands.html#Shell-Builtin-Commands) to get the results, and just kill the coproc if that read times out.\n\nIf I find some spare time this weekend, I might take a stab at it. I've run in to this enough times it would be nice to have a global fix. Would people be interested in having a timeout for `git status` checks used in prompts? The zsh prompt is fundamental enough it would be nice to have a hard timebox on it.\n\n(/cc @slhck @mcornella @rombat since you've run in to this issue lately too)\n", "bodyText": "Hmm. If someone's interested, it actually might not be that hard to implement a simple timeout for git status using zsh's \"coproc\" support. You could fire up the git status command using coproc, and then do a timeout-limited read -t <seconds> -p <coproc> to get the results, and just kill the coproc if that read times out.\nIf I find some spare time this weekend, I might take a stab at it. I've run in to this enough times it would be nice to have a global fix. Would people be interested in having a timeout for git status checks used in prompts? The zsh prompt is fundamental enough it would be nice to have a hard timebox on it.\n(/cc @slhck @mcornella @rombat since you've run in to this issue lately too)", "bodyHTML": "<p>Hmm. If someone's interested, it actually might not be that hard to implement a simple timeout for <code>git status</code> using zsh's \"<code>coproc</code>\" support. You could fire up the <code>git status</code> command using <a href=\"http://zsh.sourceforge.net/Doc/Release/Shell-Grammar.html#Shell-Grammar\" rel=\"nofollow\">coproc</a>, and then do a timeout-limited <a href=\"http://zsh.sourceforge.net/Doc/Release/Shell-Builtin-Commands.html#Shell-Builtin-Commands\" rel=\"nofollow\"><code>read -t &lt;seconds&gt; -p &lt;coproc&gt;</code></a> to get the results, and just kill the coproc if that read times out.</p>\n<p>If I find some spare time this weekend, I might take a stab at it. I've run in to this enough times it would be nice to have a global fix. Would people be interested in having a timeout for <code>git status</code> checks used in prompts? The zsh prompt is fundamental enough it would be nice to have a hard timebox on it.</p>\n<p>(/cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/slhck/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/slhck\">@slhck</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mcornella/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mcornella\">@mcornella</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rombat/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rombat\">@rombat</a> since you've run in to this issue lately too)</p>", "createdAt": "2015-03-26T20:01:00Z", "publishedAt": "2015-03-26T20:01:00Z", "lastEditedAt": null, "updatedAt": "2015-03-26T20:01:00Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4946, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hmm.", "sentSegmented": ["hmm"], "sentSegmentedWithoutStops": ["hmm"], "sentSegmentedWithoutStopsStemmed": ["hmm"]}, {"number": 4947, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If someone's interested, it actually might not be that hard to implement a simple timeout for git status using zsh's \"coproc\" support.", "sentSegmented": ["if", "someone", "'s", "interested", "it", "actually", "might", "not", "be", "that", "hard", "to", "implement", "a", "simple", "timeout", "for", "git", "status", "using", "zsh", "'s", "coproc", "support"], "sentSegmentedWithoutStops": ["someone", "'s", "interested", "actually", "might", "hard", "implement", "simple", "timeout", "git", "status", "using", "zsh", "'s", "coproc", "support"], "sentSegmentedWithoutStopsStemmed": ["someon", "'s", "interest", "actual", "might", "hard", "implement", "simpl", "timeout", "git", "statu", "use", "zsh", "'s", "coproc", "support"]}, {"number": 4948, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You could fire up the git status command using coproc, and then do a timeout-limited read -t  -p  to get the results, and just kill the coproc if that read times out.", "sentSegmented": ["you", "could", "fire", "up", "the", "git", "status", "command", "using", "coproc", "and", "then", "do", "a", "timeout-limited", "read", "-t", "-p", "to", "get", "the", "results", "and", "just", "kill", "the", "coproc", "if", "that", "read", "times", "out"], "sentSegmentedWithoutStops": ["could", "fire", "git", "status", "command", "using", "coproc", "timeout-limited", "read", "-t", "-p", "get", "results", "kill", "coproc", "read", "times"], "sentSegmentedWithoutStopsStemmed": ["could", "fire", "git", "statu", "command", "use", "coproc", "timeout-limit", "read", "-t", "-p", "get", "result", "kill", "coproc", "read", "time"]}, {"number": 4949, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If I find some spare time this weekend, I might take a stab at it.", "sentSegmented": ["if", "i", "find", "some", "spare", "time", "this", "weekend", "i", "might", "take", "a", "stab", "at", "it"], "sentSegmentedWithoutStops": ["find", "spare", "time", "weekend", "might", "take", "stab"], "sentSegmentedWithoutStopsStemmed": ["find", "spare", "time", "weekend", "might", "take", "stab"]}, {"number": 4950, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I've run in to this enough times it would be nice to have a global fix.", "sentSegmented": ["i", "'ve", "run", "in", "to", "this", "enough", "times", "it", "would", "be", "nice", "to", "have", "a", "global", "fix"], "sentSegmentedWithoutStops": ["'ve", "run", "enough", "times", "would", "nice", "global", "fix"], "sentSegmentedWithoutStopsStemmed": ["'ve", "run", "enough", "time", "would", "nice", "global", "fix"]}, {"number": 4951, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Would people be interested in having a timeout for git status checks used in prompts?", "sentSegmented": ["would", "people", "be", "interested", "in", "having", "a", "timeout", "for", "git", "status", "checks", "used", "in", "prompts"], "sentSegmentedWithoutStops": ["would", "people", "interested", "timeout", "git", "status", "checks", "used", "prompts"], "sentSegmentedWithoutStopsStemmed": ["would", "peopl", "interest", "timeout", "git", "statu", "check", "use", "prompt"]}, {"number": 4952, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The zsh prompt is fundamental enough it would be nice to have a hard timebox on it.", "sentSegmented": ["the", "zsh", "prompt", "is", "fundamental", "enough", "it", "would", "be", "nice", "to", "have", "a", "hard", "timebox", "on", "it"], "sentSegmentedWithoutStops": ["zsh", "prompt", "fundamental", "enough", "would", "nice", "hard", "timebox"], "sentSegmentedWithoutStopsStemmed": ["zsh", "prompt", "fundament", "enough", "would", "nice", "hard", "timebox"]}, {"number": 4953, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "(/cc @slhck @mcornella @rombat since you've run in to this issue lately too)", "sentSegmented": ["/cc", "slhck", "mcornella", "rombat", "since", "you", "'ve", "run", "in", "to", "this", "issue", "lately", "too"], "sentSegmentedWithoutStops": ["/cc", "slhck", "mcornella", "rombat", "since", "'ve", "run", "issue", "lately"], "sentSegmentedWithoutStopsStemmed": ["/cc", "slhck", "mcornella", "rombat", "sinc", "'ve", "run", "issu", "late"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDI5NTE0NjcxNw==", "author": {"login": "ee0pdt"}, "body": "@landaire your tip has just saved my sanity!\r\n\r\n```\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n```", "bodyText": "@landaire your tip has just saved my sanity!\n# Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/landaire/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/landaire\">@landaire</a> your tip has just saved my sanity!</p>\n<pre><code># Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\n</code></pre>", "createdAt": "2017-04-19T07:51:10Z", "publishedAt": "2017-04-19T07:51:10Z", "lastEditedAt": "2017-04-19T07:51:25Z", "updatedAt": "2017-04-19T07:51:25Z", "reactions": {"edges": [{"node": {"content": "HOORAY", "createdAt": "2017-07-14T00:54:29Z"}}, {"node": {"content": "HOORAY", "createdAt": "2018-07-13T02:51:34Z"}}, {"node": {"content": "HOORAY", "createdAt": "2018-12-09T12:01:13Z"}}, {"node": {"content": "HOORAY", "createdAt": "2019-04-24T23:42:33Z"}}]}, "bodyParsed": [{"number": 4954, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@landaire your tip has just saved my sanity!", "sentSegmented": ["landaire", "your", "tip", "has", "just", "saved", "my", "sanity"], "sentSegmentedWithoutStops": ["landaire", "tip", "saved", "sanity"], "sentSegmentedWithoutStopsStemmed": ["landair", "tip", "save", "saniti"]}, {"number": 4955, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# Uncomment the following line if you want to disable marking untracked files", "sentSegmented": ["uncomment", "the", "following", "line", "if", "you", "want", "to", "disable", "marking", "untracked", "files"], "sentSegmentedWithoutStops": ["uncomment", "following", "line", "want", "disable", "marking", "untracked", "files"], "sentSegmentedWithoutStopsStemmed": ["uncom", "follow", "line", "want", "disabl", "mark", "untrack", "file"]}, {"number": 4956, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# under VCS as dirty. This makes repository status check for large repositories", "sentSegmented": ["under", "vcs", "as", "dirty", "this", "makes", "repository", "status", "check", "for", "large", "repositories"], "sentSegmentedWithoutStops": ["vcs", "dirty", "makes", "repository", "status", "check", "large", "repositories"], "sentSegmentedWithoutStopsStemmed": ["vc", "dirti", "make", "repositori", "statu", "check", "larg", "repositori"]}, {"number": 4957, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# much, much faster.", "sentSegmented": ["much", "much", "faster"], "sentSegmentedWithoutStops": ["much", "much", "faster"], "sentSegmentedWithoutStopsStemmed": ["much", "much", "faster"]}, {"number": 4958, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"", "sentSegmented": ["disable_untracked_files_dirty=", "true"], "sentSegmentedWithoutStops": ["disable_untracked_files_dirty=", "true"], "sentSegmentedWithoutStopsStemmed": ["disable_untracked_files_dirty=", "true"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzNTEwMTIyNw==", "author": {"login": "MartinMuzatko"}, "body": "Still got lags in large repos with the option mentioned above enabled", "bodyText": "Still got lags in large repos with the option mentioned above enabled", "bodyHTML": "<p>Still got lags in large repos with the option mentioned above enabled</p>", "createdAt": "2017-10-09T09:02:47Z", "publishedAt": "2017-10-09T09:02:47Z", "lastEditedAt": "2017-10-09T09:02:57Z", "updatedAt": "2017-10-09T09:02:57Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4959, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Still got lags in large repos with the option mentioned above enabled", "sentSegmented": ["still", "got", "lags", "in", "large", "repos", "with", "the", "option", "mentioned", "above", "enabled"], "sentSegmentedWithoutStops": ["still", "got", "lags", "large", "repos", "option", "mentioned", "enabled"], "sentSegmentedWithoutStopsStemmed": ["still", "got", "lag", "larg", "repo", "option", "mention", "enabl"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMzNTEwOTAyNA==", "author": {"login": "ee0pdt"}, "body": "@MartinMuzatko I found that a completely fresh clone of the git repo can also help with large repos", "bodyText": "@MartinMuzatko I found that a completely fresh clone of the git repo can also help with large repos", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MartinMuzatko/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MartinMuzatko\">@MartinMuzatko</a> I found that a completely fresh clone of the git repo can also help with large repos</p>", "createdAt": "2017-10-09T09:39:11Z", "publishedAt": "2017-10-09T09:39:11Z", "lastEditedAt": null, "updatedAt": "2017-10-09T09:39:11Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4960, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@MartinMuzatko I found that a completely fresh clone of the git repo can also help with large repos", "sentSegmented": ["martinmuzatko", "i", "found", "that", "a", "completely", "fresh", "clone", "of", "the", "git", "repo", "can", "also", "help", "with", "large", "repos"], "sentSegmentedWithoutStops": ["martinmuzatko", "found", "completely", "fresh", "clone", "git", "repo", "also", "help", "large", "repos"], "sentSegmentedWithoutStopsStemmed": ["martinmuzatko", "found", "complet", "fresh", "clone", "git", "repo", "also", "help", "larg", "repo"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM0NTg4MzE2Mw==", "author": {"login": "itsdarrylnorris"}, "body": "In my case, I still have a lag of 2.5 seconds, but it used to be like 6 seconds.", "bodyText": "In my case, I still have a lag of 2.5 seconds, but it used to be like 6 seconds.", "bodyHTML": "<p>In my case, I still have a lag of 2.5 seconds, but it used to be like 6 seconds.</p>", "createdAt": "2017-11-21T01:08:11Z", "publishedAt": "2017-11-21T01:08:11Z", "lastEditedAt": null, "updatedAt": "2017-11-21T01:08:11Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4961, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In my case, I still have a lag of 2.5 seconds, but it used to be like 6 seconds.", "sentSegmented": ["in", "my", "case", "i", "still", "have", "a", "lag", "of", "2.5", "seconds", "but", "it", "used", "to", "be", "like", "6", "seconds"], "sentSegmentedWithoutStops": ["case", "still", "lag", "2.5", "seconds", "used", "like", "6", "seconds"], "sentSegmentedWithoutStopsStemmed": ["case", "still", "lag", "2.5", "second", "use", "like", "6", "second"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQyMDc2MzE1MQ==", "author": {"login": "squatto"}, "body": "For a temporary fix, you can also hide the git status for a project by running this in your project directory:\r\n\r\n`git config --add oh-my-zsh.hide-status 1`\r\n\r\nIf you can't get into the directory to run the command, then directly edit `.git/config` and add:\r\n\r\n```\r\n[oh-my-zsh]\r\n        hide-status = 1\r\n```\r\n\r\nIf you want to hide the git status from every repo, run:\r\n\r\n`git config --global --add oh-my-zsh.hide-status 1`\r\n\r\nYou can also add the same config from above to `~/.gitconfig` (which is all that command does...)", "bodyText": "For a temporary fix, you can also hide the git status for a project by running this in your project directory:\ngit config --add oh-my-zsh.hide-status 1\nIf you can't get into the directory to run the command, then directly edit .git/config and add:\n[oh-my-zsh]\n        hide-status = 1\n\nIf you want to hide the git status from every repo, run:\ngit config --global --add oh-my-zsh.hide-status 1\nYou can also add the same config from above to ~/.gitconfig (which is all that command does...)", "bodyHTML": "<p>For a temporary fix, you can also hide the git status for a project by running this in your project directory:</p>\n<p><code>git config --add oh-my-zsh.hide-status 1</code></p>\n<p>If you can't get into the directory to run the command, then directly edit <code>.git/config</code> and add:</p>\n<pre><code>[oh-my-zsh]\n        hide-status = 1\n</code></pre>\n<p>If you want to hide the git status from every repo, run:</p>\n<p><code>git config --global --add oh-my-zsh.hide-status 1</code></p>\n<p>You can also add the same config from above to <code>~/.gitconfig</code> (which is all that command does...)</p>", "createdAt": "2018-09-12T19:07:35Z", "publishedAt": "2018-09-12T19:07:35Z", "lastEditedAt": "2018-09-12T19:09:50Z", "updatedAt": "2018-09-12T19:09:50Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-09-13T11:58:23Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-12-05T16:22:29Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-01-16T15:31:39Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-02-20T09:25:52Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-04T14:45:03Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-03-22T17:19:20Z"}}, {"node": {"content": "THUMBS_DOWN", "createdAt": "2019-04-10T19:04:35Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-04-30T22:50:34Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-08-02T21:12:50Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-08-12T04:25:05Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-08-26T12:39:10Z"}}, {"node": {"content": "THUMBS_DOWN", "createdAt": "2019-09-23T18:49:23Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-10-15T07:58:28Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-10-15T12:24:43Z"}}, {"node": {"content": "THUMBS_DOWN", "createdAt": "2019-11-14T11:16:46Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-12-12T03:00:35Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-02-17T06:02:35Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-03-07T13:43:00Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-03-19T11:30:20Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-04-13T09:18:36Z"}}]}, "bodyParsed": [{"number": 4962, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "For a temporary fix, you can also hide the git status for a project by running this in your project directory:", "sentSegmented": ["for", "a", "temporary", "fix", "you", "can", "also", "hide", "the", "git", "status", "for", "a", "project", "by", "running", "this", "in", "your", "project", "directory"], "sentSegmentedWithoutStops": ["temporary", "fix", "also", "hide", "git", "status", "project", "running", "project", "directory"], "sentSegmentedWithoutStopsStemmed": ["temporari", "fix", "also", "hide", "git", "statu", "project", "run", "project", "directori"]}, {"number": 4963, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "git config --add oh-my-zsh.hide-status 1", "sentSegmented": ["git", "config", "add", "oh-my-zsh.hide-status", "1"], "sentSegmentedWithoutStops": ["git", "config", "add", "oh-my-zsh.hide-status", "1"], "sentSegmentedWithoutStopsStemmed": ["git", "config", "add", "oh-my-zsh.hide-statu", "1"]}, {"number": 4964, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If you can't get into the directory to run the command, then directly edit .git/config and add:", "sentSegmented": ["if", "you", "ca", "n't", "get", "into", "the", "directory", "to", "run", "the", "command", "then", "directly", "edit", ".git/config", "and", "add"], "sentSegmentedWithoutStops": ["ca", "n't", "get", "directory", "run", "command", "directly", "edit", ".git/config", "add"], "sentSegmentedWithoutStopsStemmed": ["ca", "n't", "get", "directori", "run", "command", "directli", "edit", ".git/config", "add"]}, {"number": 4965, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "[oh-my-zsh]", "sentSegmented": ["oh-my-zsh"], "sentSegmentedWithoutStops": ["oh-my-zsh"], "sentSegmentedWithoutStopsStemmed": ["oh-my-zsh"]}, {"number": 4966, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "        hide-status = 1", "sentSegmented": ["hide-status", "1"], "sentSegmentedWithoutStops": ["hide-status", "1"], "sentSegmentedWithoutStopsStemmed": ["hide-statu", "1"]}, {"number": 4967, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "If you want to hide the git status from every repo, run:", "sentSegmented": ["if", "you", "want", "to", "hide", "the", "git", "status", "from", "every", "repo", "run"], "sentSegmentedWithoutStops": ["want", "hide", "git", "status", "every", "repo", "run"], "sentSegmentedWithoutStopsStemmed": ["want", "hide", "git", "statu", "everi", "repo", "run"]}, {"number": 4968, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "git config --global --add oh-my-zsh.hide-status 1", "sentSegmented": ["git", "config", "global", "add", "oh-my-zsh.hide-status", "1"], "sentSegmentedWithoutStops": ["git", "config", "global", "add", "oh-my-zsh.hide-status", "1"], "sentSegmentedWithoutStopsStemmed": ["git", "config", "global", "add", "oh-my-zsh.hide-statu", "1"]}, {"number": 4969, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "You can also add the same config from above to ~/.gitconfig (which is all that command does...)", "sentSegmented": ["you", "can", "also", "add", "the", "same", "config", "from", "above", "to", "~/.gitconfig", "which", "is", "all", "that", "command", "does"], "sentSegmentedWithoutStops": ["also", "add", "config", "~/.gitconfig", "command"], "sentSegmentedWithoutStopsStemmed": ["also", "add", "config", "~/.gitconfig", "command"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOGRRWDw==", "hasNextPage": false}, "totalCount": 13}, "labels": {"edges": []}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-12-09T12:06:01Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-04-21T09:33:07Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-06-12T17:46:42Z"}}]}, "state": "CLOSED", "titleSegmented": ["why", "is", "the", "git", "plugin", "slow", "for", "large", "repos"], "titleSegmentedWithoutStops": ["git", "plugin", "slow", "large", "repos"], "titleSegmentedWithoutStopsStemmed": ["git", "plugin", "slow", "larg", "repo"], "bodyParsed": [{"number": 4887, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Referring to #1160, why is it that the plugin is so slow for large repositories?", "sentSegmented": ["referring", "to", "1160", "why", "is", "it", "that", "the", "plugin", "is", "so", "slow", "for", "large", "repositories"], "sentSegmentedWithoutStops": ["referring", "1160", "plugin", "slow", "large", "repositories"], "sentSegmentedWithoutStopsStemmed": ["refer", "1160", "plugin", "slow", "larg", "repositori"]}, {"number": 4888, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I noticed this today when getting oh-my-zsh set up in my vagrant environment which uses git-prompt and has no noticeable performance hit.", "sentSegmented": ["i", "noticed", "this", "today", "when", "getting", "oh-my-zsh", "set", "up", "in", "my", "vagrant", "environment", "which", "uses", "git-prompt", "and", "has", "no", "noticeable", "performance", "hit"], "sentSegmentedWithoutStops": ["noticed", "today", "getting", "oh-my-zsh", "set", "vagrant", "environment", "uses", "git-prompt", "noticeable", "performance", "hit"], "sentSegmentedWithoutStopsStemmed": ["notic", "today", "get", "oh-my-zsh", "set", "vagrant", "environ", "use", "git-prompt", "notic", "perform", "hit"]}]}