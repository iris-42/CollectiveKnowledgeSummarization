{"repository": {"owner": {"login": "ohmyzsh"}, "name": "ohmyzsh", "forkCount": 21685, "stargazerCount": 124743, "createdAt": "2009-08-28T18:15:37Z", "updatedAt": "2021-03-10T03:28:47Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "shell"}}}, {"node": {"topic": {"name": "zsh-configuration"}}}, {"node": {"topic": {"name": "theme"}}}, {"node": {"topic": {"name": "terminal"}}}, {"node": {"topic": {"name": "productivity"}}}, {"node": {"topic": {"name": "hacktoberfest"}}}]}, "languages": {"edges": [{"node": {"name": "Shell"}}, {"node": {"name": "Python"}}, {"node": {"name": "Makefile"}}, {"node": {"name": "Perl"}}, {"node": {"name": "Roff"}}, {"node": {"name": "Dockerfile"}}]}, "primaryLanguage": {"name": "Shell"}}, "id": "MDU6SXNzdWUyMDQ2NjE2NTY=", "number": 5837, "author": {"login": "jonnyzzz"}, "title": "PROMPT for git repository is low on big repo", "body": "On macOS with latest Git and latest oh-my-zsh\r\nOn https://github.com/JetBrains/intellij-community repository checkout. It took about a second for the shell to write prompt after I press enter.", "bodyHTML": "<p>On macOS with latest Git and latest oh-my-zsh<br>\nOn <a href=\"https://github.com/JetBrains/intellij-community\">https://github.com/JetBrains/intellij-community</a> repository checkout. It took about a second for the shell to write prompt after I press enter.</p>", "bodyText": "On macOS with latest Git and latest oh-my-zsh\nOn https://github.com/JetBrains/intellij-community repository checkout. It took about a second for the shell to write prompt after I press enter.", "assignees": {"edges": []}, "createdAt": "2017-02-01T18:12:46Z", "closed": true, "closedAt": "2019-04-09T11:18:06Z", "lastEditedAt": null, "publishedAt": "2017-02-01T18:12:46Z", "comments": {"totalCount": 6, "edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDMwNjAwNTY0MQ==", "author": {"login": "nonchip"}, "body": "quote from `~/.zshrc`:\r\n\r\n    # Uncomment the following line if you want to disable marking untracked files\r\n    # under VCS as dirty. This makes repository status check for large repositories\r\n    # much, much faster.\r\n    # DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n", "bodyText": "quote from ~/.zshrc:\n# Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"", "bodyHTML": "<p>quote from <code>~/.zshrc</code>:</p>\n<pre><code># Uncomment the following line if you want to disable marking untracked files\n# under VCS as dirty. This makes repository status check for large repositories\n# much, much faster.\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\n</code></pre>", "createdAt": "2017-06-03T22:39:48Z", "publishedAt": "2017-06-03T22:39:48Z", "lastEditedAt": null, "updatedAt": "2017-06-03T22:39:48Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4973, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "quote from ~/.zshrc:", "sentSegmented": ["quote", "from", "~/.zshrc"], "sentSegmentedWithoutStops": ["quote", "~/.zshrc"], "sentSegmentedWithoutStopsStemmed": ["quot", "~/.zshrc"]}, {"number": 4974, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# Uncomment the following line if you want to disable marking untracked files", "sentSegmented": ["uncomment", "the", "following", "line", "if", "you", "want", "to", "disable", "marking", "untracked", "files"], "sentSegmentedWithoutStops": ["uncomment", "following", "line", "want", "disable", "marking", "untracked", "files"], "sentSegmentedWithoutStopsStemmed": ["uncom", "follow", "line", "want", "disabl", "mark", "untrack", "file"]}, {"number": 4975, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# under VCS as dirty. This makes repository status check for large repositories", "sentSegmented": ["under", "vcs", "as", "dirty", "this", "makes", "repository", "status", "check", "for", "large", "repositories"], "sentSegmentedWithoutStops": ["vcs", "dirty", "makes", "repository", "status", "check", "large", "repositories"], "sentSegmentedWithoutStopsStemmed": ["vc", "dirti", "make", "repositori", "statu", "check", "larg", "repositori"]}, {"number": 4976, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# much, much faster.", "sentSegmented": ["much", "much", "faster"], "sentSegmentedWithoutStops": ["much", "much", "faster"], "sentSegmentedWithoutStopsStemmed": ["much", "much", "faster"]}, {"number": 4977, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"", "sentSegmented": ["disable_untracked_files_dirty=", "true"], "sentSegmentedWithoutStops": ["disable_untracked_files_dirty=", "true"], "sentSegmentedWithoutStopsStemmed": ["disable_untracked_files_dirty=", "true"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMwNjAxNzcwMg==", "author": {"login": "Jahhein"}, "body": "Further elaborating on @nonchip response..\r\n\r\nThe repository is very large and your prompt will only be as fast as your computer can process checking all the files for changes. \r\n", "bodyText": "Further elaborating on @nonchip response..\nThe repository is very large and your prompt will only be as fast as your computer can process checking all the files for changes.", "bodyHTML": "<p>Further elaborating on <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/nonchip/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nonchip\">@nonchip</a> response..</p>\n<p>The repository is very large and your prompt will only be as fast as your computer can process checking all the files for changes.</p>", "createdAt": "2017-06-04T04:33:54Z", "publishedAt": "2017-06-04T04:33:54Z", "lastEditedAt": null, "updatedAt": "2017-06-04T04:33:54Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4978, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Further elaborating on @nonchip response..", "sentSegmented": ["further", "elaborating", "on", "nonchip", "response"], "sentSegmentedWithoutStops": ["elaborating", "nonchip", "response"], "sentSegmentedWithoutStopsStemmed": ["elabor", "nonchip", "respons"]}, {"number": 4979, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The repository is very large and your prompt will only be as fast as your computer can process checking all the files for changes.", "sentSegmented": ["the", "repository", "is", "very", "large", "and", "your", "prompt", "will", "only", "be", "as", "fast", "as", "your", "computer", "can", "process", "checking", "all", "the", "files", "for", "changes"], "sentSegmentedWithoutStops": ["repository", "large", "prompt", "fast", "computer", "process", "checking", "files", "changes"], "sentSegmentedWithoutStopsStemmed": ["repositori", "larg", "prompt", "fast", "comput", "process", "check", "file", "chang"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMwNjAyNTkyMw==", "author": {"login": "nonchip"}, "body": "what @Jahhein said. there's simply no way your repository can be auto-checked faster without disabling some of the functionality (so it just asks git instead of actively scanning) because some repos are just too big. happens for me with the epicgames/unrealengine repo, where it can take up to a minute with untracked files checking.", "bodyText": "what @Jahhein said. there's simply no way your repository can be auto-checked faster without disabling some of the functionality (so it just asks git instead of actively scanning) because some repos are just too big. happens for me with the epicgames/unrealengine repo, where it can take up to a minute with untracked files checking.", "bodyHTML": "<p>what <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Jahhein/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Jahhein\">@Jahhein</a> said. there's simply no way your repository can be auto-checked faster without disabling some of the functionality (so it just asks git instead of actively scanning) because some repos are just too big. happens for me with the epicgames/unrealengine repo, where it can take up to a minute with untracked files checking.</p>", "createdAt": "2017-06-04T08:19:47Z", "publishedAt": "2017-06-04T08:19:47Z", "lastEditedAt": null, "updatedAt": "2017-06-04T08:19:47Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4980, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "what @Jahhein said.", "sentSegmented": ["what", "jahhein", "said"], "sentSegmentedWithoutStops": ["jahhein", "said"], "sentSegmentedWithoutStopsStemmed": ["jahhein", "said"]}, {"number": 4981, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "there's simply no way your repository can be auto-checked faster without disabling some of the functionality (so it just asks git instead of actively scanning) because some repos are just too big.", "sentSegmented": ["there", "'s", "simply", "no", "way", "your", "repository", "can", "be", "auto-checked", "faster", "without", "disabling", "some", "of", "the", "functionality", "so", "it", "just", "asks", "git", "instead", "of", "actively", "scanning", "because", "some", "repos", "are", "just", "too", "big"], "sentSegmentedWithoutStops": ["'s", "simply", "way", "repository", "auto-checked", "faster", "without", "disabling", "functionality", "asks", "git", "instead", "actively", "scanning", "repos", "big"], "sentSegmentedWithoutStopsStemmed": ["'s", "simpli", "way", "repositori", "auto-check", "faster", "without", "disabl", "function", "ask", "git", "instead", "activ", "scan", "repo", "big"]}, {"number": 4982, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "happens for me with the epicgames/unrealengine repo, where it can take up to a minute with untracked files checking.", "sentSegmented": ["happens", "for", "me", "with", "the", "epicgames/unrealengine", "repo", "where", "it", "can", "take", "up", "to", "a", "minute", "with", "untracked", "files", "checking"], "sentSegmentedWithoutStops": ["happens", "epicgames/unrealengine", "repo", "take", "minute", "untracked", "files", "checking"], "sentSegmentedWithoutStopsStemmed": ["happen", "epicgames/unrealengin", "repo", "take", "minut", "untrack", "file", "check"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDMwNjAyODY1Nw==", "author": {"login": "Jahhein"}, "body": "And some more information to help inform anyone reading.. Those git prompts have to check all the files in the git repository directory after every set of commands your run to unsure the git prompt status is correct.", "bodyText": "And some more information to help inform anyone reading.. Those git prompts have to check all the files in the git repository directory after every set of commands your run to unsure the git prompt status is correct.", "bodyHTML": "<p>And some more information to help inform anyone reading.. Those git prompts have to check all the files in the git repository directory after every set of commands your run to unsure the git prompt status is correct.</p>", "createdAt": "2017-06-04T09:20:28Z", "publishedAt": "2017-06-04T09:20:28Z", "lastEditedAt": "2017-06-04T09:20:59Z", "updatedAt": "2017-06-04T09:20:59Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4983, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "And some more information to help inform anyone reading.. Those git prompts have to check all the files in the git repository directory after every set of commands your run to unsure the git prompt status is correct.", "sentSegmented": ["and", "some", "more", "information", "to", "help", "inform", "anyone", "reading", "those", "git", "prompts", "have", "to", "check", "all", "the", "files", "in", "the", "git", "repository", "directory", "after", "every", "set", "of", "commands", "your", "run", "to", "unsure", "the", "git", "prompt", "status", "is", "correct"], "sentSegmentedWithoutStops": ["information", "help", "inform", "anyone", "reading", "git", "prompts", "check", "files", "git", "repository", "directory", "every", "set", "commands", "run", "unsure", "git", "prompt", "status", "correct"], "sentSegmentedWithoutStopsStemmed": ["inform", "help", "inform", "anyon", "read", "git", "prompt", "check", "file", "git", "repositori", "directori", "everi", "set", "command", "run", "unsur", "git", "prompt", "statu", "correct"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ0NjkxMTA0Mg==", "author": {"login": "dyatlov"}, "body": "Solution is to go to your theme file in `~/.oh-my-zsh/themes/`, find there prompt_git() function and replace there:\r\n\r\n```\r\nzstyle ':vcs_info:*' check-for-changes true\r\n```\r\n\r\nwith\r\n\r\n```\r\nzstyle ':vcs_info:*' check-for-changes false\r\n```\r\n\r\nAlso, you should add the following line to git config so that dirtyness wont be checked:\r\n\r\n```\r\ngit config --add oh-my-zsh.hide-dirty '\"1\"'\r\n```", "bodyText": "Solution is to go to your theme file in ~/.oh-my-zsh/themes/, find there prompt_git() function and replace there:\nzstyle ':vcs_info:*' check-for-changes true\n\nwith\nzstyle ':vcs_info:*' check-for-changes false\n\nAlso, you should add the following line to git config so that dirtyness wont be checked:\ngit config --add oh-my-zsh.hide-dirty '\"1\"'", "bodyHTML": "<p>Solution is to go to your theme file in <code>~/.oh-my-zsh/themes/</code>, find there prompt_git() function and replace there:</p>\n<pre><code>zstyle ':vcs_info:*' check-for-changes true\n</code></pre>\n<p>with</p>\n<pre><code>zstyle ':vcs_info:*' check-for-changes false\n</code></pre>\n<p>Also, you should add the following line to git config so that dirtyness wont be checked:</p>\n<pre><code>git config --add oh-my-zsh.hide-dirty '\"1\"'\n</code></pre>", "createdAt": "2018-12-13T10:03:25Z", "publishedAt": "2018-12-13T10:03:25Z", "lastEditedAt": null, "updatedAt": "2018-12-13T10:03:25Z", "reactions": {"edges": [{"node": {"content": "THUMBS_DOWN", "createdAt": "2018-12-15T03:57:13Z"}}]}, "bodyParsed": [{"number": 4984, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Solution is to go to your theme file in ~/.oh-my-zsh/themes/, find there prompt_git() function and replace there:", "sentSegmented": ["solution", "is", "to", "go", "to", "your", "theme", "file", "in", "~/.oh-my-zsh/themes/", "find", "there", "prompt_git", "function", "and", "replace", "there"], "sentSegmentedWithoutStops": ["solution", "go", "theme", "file", "~/.oh-my-zsh/themes/", "find", "prompt_git", "function", "replace"], "sentSegmentedWithoutStopsStemmed": ["solut", "go", "theme", "file", "~/.oh-my-zsh/themes/", "find", "prompt_git", "function", "replac"]}, {"number": 4985, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "zstyle ':vcs_info:*' check-for-changes true", "sentSegmented": ["zstyle", "vcs_info", "check-for-changes", "true"], "sentSegmentedWithoutStops": ["zstyle", "vcs_info", "check-for-changes", "true"], "sentSegmentedWithoutStopsStemmed": ["zstyle", "vcs_info", "check-for-chang", "true"]}, {"number": 4986, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "with", "sentSegmented": ["with"], "sentSegmentedWithoutStops": [], "sentSegmentedWithoutStopsStemmed": []}, {"number": 4987, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "zstyle ':vcs_info:*' check-for-changes false", "sentSegmented": ["zstyle", "vcs_info", "check-for-changes", "false"], "sentSegmentedWithoutStops": ["zstyle", "vcs_info", "check-for-changes", "false"], "sentSegmentedWithoutStopsStemmed": ["zstyle", "vcs_info", "check-for-chang", "fals"]}, {"number": 4988, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Also, you should add the following line to git config so that dirtyness wont be checked:", "sentSegmented": ["also", "you", "should", "add", "the", "following", "line", "to", "git", "config", "so", "that", "dirtyness", "wont", "be", "checked"], "sentSegmentedWithoutStops": ["also", "add", "following", "line", "git", "config", "dirtyness", "wont", "checked"], "sentSegmentedWithoutStopsStemmed": ["also", "add", "follow", "line", "git", "config", "dirty", "wont", "check"]}, {"number": 4989, "isCode": true, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "git config --add oh-my-zsh.hide-dirty '\"1\"'", "sentSegmented": ["git", "config", "add", "oh-my-zsh.hide-dirty", "1"], "sentSegmentedWithoutStops": ["git", "config", "oh-my-zsh.hide-dirty", "1"], "sentSegmentedWithoutStopsStemmed": ["git", "config", "oh-my-zsh.hide-dirti", "1"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ4MTIwOTc4Mg==", "author": {"login": "mcornella"}, "body": "Duplicate of #3009. See solutions there.", "bodyText": "Duplicate of #3009. See solutions there.", "bodyHTML": "<p>Duplicate of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"39871716\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ohmyzsh/ohmyzsh/issues/3009\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ohmyzsh/ohmyzsh/issues/3009/hovercard\" href=\"https://github.com/ohmyzsh/ohmyzsh/issues/3009\">#3009</a>. See solutions there.</p>", "createdAt": "2019-04-09T11:18:06Z", "publishedAt": "2019-04-09T11:18:06Z", "lastEditedAt": null, "updatedAt": "2019-04-09T11:18:06Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 4990, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Duplicate of #3009.", "sentSegmented": ["duplicate", "of", "3009"], "sentSegmentedWithoutStops": ["duplicate", "3009"], "sentSegmentedWithoutStopsStemmed": ["duplic", "3009"]}, {"number": 4991, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "See solutions there.", "sentSegmented": ["see", "solutions", "there"], "sentSegmentedWithoutStops": ["see", "solutions"], "sentSegmentedWithoutStopsStemmed": ["see", "solut"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOHK6ttg==", "hasNextPage": false}}, "labels": {"edges": [{"node": {"createdAt": "2019-03-21T18:41:52Z", "name": "Status: duplicate"}}]}, "milestone": null, "reactions": {"edges": []}, "state": "CLOSED", "titleSegmented": ["prompt", "for", "git", "repository", "is", "low", "on", "big", "repo"], "titleSegmentedWithoutStops": ["prompt", "git", "repository", "low", "big", "repo"], "titleSegmentedWithoutStopsStemmed": ["prompt", "git", "repositori", "low", "big", "repo"], "bodyParsed": [{"number": 4970, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "On macOS with latest Git and latest oh-my-zsh", "sentSegmented": ["on", "macos", "with", "latest", "git", "and", "latest", "oh-my-zsh"], "sentSegmentedWithoutStops": ["macos", "latest", "git", "latest", "oh-my-zsh"], "sentSegmentedWithoutStopsStemmed": ["maco", "latest", "git", "latest", "oh-my-zsh"]}, {"number": 4971, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "On https://github.com/JetBrains/intellij-community repository checkout.", "sentSegmented": ["on", "https", "//github.com/jetbrains/intellij-community", "repository", "checkout"], "sentSegmentedWithoutStops": ["https", "//github.com/jetbrains/intellij-community", "repository", "checkout"], "sentSegmentedWithoutStopsStemmed": ["http", "//github.com/jetbrains/intellij-commun", "repositori", "checkout"]}, {"number": 4972, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It took about a second for the shell to write prompt after I press enter.", "sentSegmented": ["it", "took", "about", "a", "second", "for", "the", "shell", "to", "write", "prompt", "after", "i", "press", "enter"], "sentSegmentedWithoutStops": ["took", "second", "shell", "write", "prompt", "press", "enter"], "sentSegmentedWithoutStopsStemmed": ["took", "second", "shell", "write", "prompt", "press", "enter"]}]}