{"repository": {"owner": {"login": "runelite"}, "name": "runelite", "forkCount": 4097, "stargazerCount": 3160, "createdAt": "2016-04-30T20:48:02Z", "updatedAt": "2021-03-17T02:33:14Z", "repositoryTopics": {"edges": [{"node": {"topic": {"name": "runescape"}}}, {"node": {"topic": {"name": "oldschool-runescape"}}}, {"node": {"topic": {"name": "osrs"}}}]}, "languages": {"edges": [{"node": {"name": "Java"}}, {"node": {"name": "Shell"}}, {"node": {"name": "GLSL"}}, {"node": {"name": "Handlebars"}}, {"node": {"name": "C"}}]}, "primaryLanguage": {"name": "Java"}}, "id": "MDU6SXNzdWUzMTU1NzA1MTI=", "number": 1662, "author": {"login": "HarryDaniels94"}, "title": "Track which STASH units are filled", "body": "I\u2019m not sure of the feasibility of automating this, i.e. whether this data can be retrieved by the client at any time (I know it can be seen in an interface by speaking to Watson in-game), but even if it cant be shown as and when an emote clue is open, it could be useful to have a tool built into the client by which the user can manually track this, rather than having to visit Watson if unsure. \r\n\r\nOn the back of this, it may be nice to have an indicator of some description to alert the player to re-fill the STASH unit, for example by highlighting the in game asset. Or is it just me that has teleported away in my emote gear before putting it back too many times to count?", "bodyHTML": "<p>I\u2019m not sure of the feasibility of automating this, i.e. whether this data can be retrieved by the client at any time (I know it can be seen in an interface by speaking to Watson in-game), but even if it cant be shown as and when an emote clue is open, it could be useful to have a tool built into the client by which the user can manually track this, rather than having to visit Watson if unsure.</p>\n<p>On the back of this, it may be nice to have an indicator of some description to alert the player to re-fill the STASH unit, for example by highlighting the in game asset. Or is it just me that has teleported away in my emote gear before putting it back too many times to count?</p>", "bodyText": "I\u2019m not sure of the feasibility of automating this, i.e. whether this data can be retrieved by the client at any time (I know it can be seen in an interface by speaking to Watson in-game), but even if it cant be shown as and when an emote clue is open, it could be useful to have a tool built into the client by which the user can manually track this, rather than having to visit Watson if unsure.\nOn the back of this, it may be nice to have an indicator of some description to alert the player to re-fill the STASH unit, for example by highlighting the in game asset. Or is it just me that has teleported away in my emote gear before putting it back too many times to count?", "assignees": {"edges": []}, "createdAt": "2018-04-18T17:21:32Z", "closed": false, "closedAt": null, "lastEditedAt": null, "publishedAt": "2018-04-18T17:21:32Z", "comments": {"edges": [{"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ2NDgxNg==", "author": {"login": "Reasel"}, "body": "The best bet is to have a system where loading in a stash unit triggers that stash unit as being filled. Storing it locally. Also checking with Watson will update all units.\r\n\r\nThe warning about refilling stash unit might be a different problem altogether.", "bodyText": "The best bet is to have a system where loading in a stash unit triggers that stash unit as being filled. Storing it locally. Also checking with Watson will update all units.\nThe warning about refilling stash unit might be a different problem altogether.", "bodyHTML": "<p>The best bet is to have a system where loading in a stash unit triggers that stash unit as being filled. Storing it locally. Also checking with Watson will update all units.</p>\n<p>The warning about refilling stash unit might be a different problem altogether.</p>", "createdAt": "2018-04-18T17:24:33Z", "publishedAt": "2018-04-18T17:24:33Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:24:33Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-04-18T17:27:29Z"}}]}, "bodyParsed": [{"number": 14585, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The best bet is to have a system where loading in a stash unit triggers that stash unit as being filled.", "sentSegmented": ["the", "best", "bet", "is", "to", "have", "a", "system", "where", "loading", "in", "a", "stash", "unit", "triggers", "that", "stash", "unit", "as", "being", "filled"], "sentSegmentedWithoutStops": ["best", "bet", "system", "loading", "stash", "unit", "triggers", "stash", "unit", "filled"], "sentSegmentedWithoutStopsStemmed": ["best", "bet", "system", "load", "stash", "unit", "trigger", "stash", "unit", "fill"]}, {"number": 14586, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Storing it locally.", "sentSegmented": ["storing", "it", "locally"], "sentSegmentedWithoutStops": ["storing", "locally"], "sentSegmentedWithoutStopsStemmed": ["store", "local"]}, {"number": 14587, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Also checking with Watson will update all units.", "sentSegmented": ["also", "checking", "with", "watson", "will", "update", "all", "units"], "sentSegmentedWithoutStops": ["also", "checking", "watson", "update", "units"], "sentSegmentedWithoutStopsStemmed": ["also", "check", "watson", "updat", "unit"]}, {"number": 14588, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The warning about refilling stash unit might be a different problem altogether.", "sentSegmented": ["the", "warning", "about", "refilling", "stash", "unit", "might", "be", "a", "different", "problem", "altogether"], "sentSegmentedWithoutStops": ["warning", "refilling", "stash", "unit", "might", "different", "problem", "altogether"], "sentSegmentedWithoutStopsStemmed": ["warn", "refil", "stash", "unit", "might", "differ", "problem", "altogeth"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ2NTI4Mw==", "author": {"login": "tr33s"}, "body": "This is kind of tricky. There is a varbit for a STASH unit being built, and for being filled/emptied.\r\n\r\nThe built varbit is only changed when initially building it, so someone would have to collect all the stash varbits and link it to the specific clue that stash unit uses. \r\n\r\nIt's possible but tedious.\r\n\r\nEDIT: I do remember there being some kind of interface to check which are built. That could maybe be used instead but you'd have to open the interface every time to get the values initially.", "bodyText": "This is kind of tricky. There is a varbit for a STASH unit being built, and for being filled/emptied.\nThe built varbit is only changed when initially building it, so someone would have to collect all the stash varbits and link it to the specific clue that stash unit uses.\nIt's possible but tedious.\nEDIT: I do remember there being some kind of interface to check which are built. That could maybe be used instead but you'd have to open the interface every time to get the values initially.", "bodyHTML": "<p>This is kind of tricky. There is a varbit for a STASH unit being built, and for being filled/emptied.</p>\n<p>The built varbit is only changed when initially building it, so someone would have to collect all the stash varbits and link it to the specific clue that stash unit uses.</p>\n<p>It's possible but tedious.</p>\n<p>EDIT: I do remember there being some kind of interface to check which are built. That could maybe be used instead but you'd have to open the interface every time to get the values initially.</p>", "createdAt": "2018-04-18T17:26:05Z", "publishedAt": "2018-04-18T17:26:05Z", "lastEditedAt": "2018-04-18T17:26:46Z", "updatedAt": "2018-04-18T17:26:46Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14589, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This is kind of tricky.", "sentSegmented": ["this", "is", "kind", "of", "tricky"], "sentSegmentedWithoutStops": ["kind", "tricky"], "sentSegmentedWithoutStopsStemmed": ["kind", "tricki"]}, {"number": 14590, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "There is a varbit for a STASH unit being built, and for being filled/emptied.", "sentSegmented": ["there", "is", "a", "varbit", "for", "a", "stash", "unit", "being", "built", "and", "for", "being", "filled/emptied"], "sentSegmentedWithoutStops": ["varbit", "stash", "unit", "built", "filled/emptied"], "sentSegmentedWithoutStopsStemmed": ["varbit", "stash", "unit", "built", "filled/empti"]}, {"number": 14591, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "The built varbit is only changed when initially building it, so someone would have to collect all the stash varbits and link it to the specific clue that stash unit uses.", "sentSegmented": ["the", "built", "varbit", "is", "only", "changed", "when", "initially", "building", "it", "so", "someone", "would", "have", "to", "collect", "all", "the", "stash", "varbits", "and", "link", "it", "to", "the", "specific", "clue", "that", "stash", "unit", "uses"], "sentSegmentedWithoutStops": ["built", "varbit", "changed", "initially", "building", "someone", "would", "collect", "stash", "varbits", "link", "specific", "clue", "stash", "unit", "uses"], "sentSegmentedWithoutStopsStemmed": ["built", "varbit", "chang", "initi", "build", "someon", "would", "collect", "stash", "varbit", "link", "specif", "clue", "stash", "unit", "use"]}, {"number": 14592, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It's possible but tedious.", "sentSegmented": ["it", "'s", "possible", "but", "tedious"], "sentSegmentedWithoutStops": ["'s", "possible", "tedious"], "sentSegmentedWithoutStopsStemmed": ["'s", "possibl", "tediou"]}, {"number": 14593, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "EDIT: I do remember there being some kind of interface to check which are built.", "sentSegmented": ["edit", "i", "do", "remember", "there", "being", "some", "kind", "of", "interface", "to", "check", "which", "are", "built"], "sentSegmentedWithoutStops": ["edit", "remember", "kind", "interface", "check", "built"], "sentSegmentedWithoutStopsStemmed": ["edit", "rememb", "kind", "interfac", "check", "built"]}, {"number": 14594, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "That could maybe be used instead but you'd have to open the interface every time to get the values initially.", "sentSegmented": ["that", "could", "maybe", "be", "used", "instead", "but", "you", "'d", "have", "to", "open", "the", "interface", "every", "time", "to", "get", "the", "values", "initially"], "sentSegmentedWithoutStops": ["could", "maybe", "used", "instead", "'d", "open", "interface", "every", "time", "get", "values", "initially"], "sentSegmentedWithoutStopsStemmed": ["could", "mayb", "use", "instead", "'d", "open", "interfac", "everi", "time", "get", "valu", "initi"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ2NTYzMw==", "author": {"login": "Reasel"}, "body": "\"It's possible but tedious.\" - Just like the game itself.", "bodyText": "\"It's possible but tedious.\" - Just like the game itself.", "bodyHTML": "<p>\"It's possible but tedious.\" - Just like the game itself.</p>", "createdAt": "2018-04-18T17:27:19Z", "publishedAt": "2018-04-18T17:27:19Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:27:19Z", "reactions": {"edges": [{"node": {"content": "LAUGH", "createdAt": "2018-04-18T17:35:18Z"}}]}, "bodyParsed": [{"number": 14595, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "\"It's possible but tedious.\"", "sentSegmented": ["it", "'s", "possible", "but", "tedious"], "sentSegmentedWithoutStops": ["'s", "possible", "tedious"], "sentSegmentedWithoutStopsStemmed": ["'s", "possibl", "tediou"]}, {"number": 14596, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "- Just like the game itself.", "sentSegmented": ["just", "like", "the", "game", "itself"], "sentSegmentedWithoutStops": ["like", "game"], "sentSegmentedWithoutStopsStemmed": ["like", "game"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ2Nzg5Mg==", "author": {"login": "HarryDaniels94"}, "body": "That sounds like it could work well, without being too obtrusive. \r\n\r\nIn terms of a warning, the action of removing items from a unit could be picked up right? In order to trigger a visual indicator of some kind. \r\n\r\nI\u2019d wouldn\u2019t be surprised if I\u2019m way off the mark here though - I\u2019ve never worked on anything like this software wise. I only came accross the client this morning too, so I\u2019ve not had chance to have a look at the codebase yet.", "bodyText": "That sounds like it could work well, without being too obtrusive.\nIn terms of a warning, the action of removing items from a unit could be picked up right? In order to trigger a visual indicator of some kind.\nI\u2019d wouldn\u2019t be surprised if I\u2019m way off the mark here though - I\u2019ve never worked on anything like this software wise. I only came accross the client this morning too, so I\u2019ve not had chance to have a look at the codebase yet.", "bodyHTML": "<p>That sounds like it could work well, without being too obtrusive.</p>\n<p>In terms of a warning, the action of removing items from a unit could be picked up right? In order to trigger a visual indicator of some kind.</p>\n<p>I\u2019d wouldn\u2019t be surprised if I\u2019m way off the mark here though - I\u2019ve never worked on anything like this software wise. I only came accross the client this morning too, so I\u2019ve not had chance to have a look at the codebase yet.</p>", "createdAt": "2018-04-18T17:34:47Z", "publishedAt": "2018-04-18T17:34:47Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:34:47Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14597, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "That sounds like it could work well, without being too obtrusive.", "sentSegmented": ["that", "sounds", "like", "it", "could", "work", "well", "without", "being", "too", "obtrusive"], "sentSegmentedWithoutStops": ["sounds", "like", "could", "work", "well", "without", "obtrusive"], "sentSegmentedWithoutStopsStemmed": ["sound", "like", "could", "work", "well", "without", "obtrus"]}, {"number": 14598, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In terms of a warning, the action of removing items from a unit could be picked up right?", "sentSegmented": ["in", "terms", "of", "a", "warning", "the", "action", "of", "removing", "items", "from", "a", "unit", "could", "be", "picked", "up", "right"], "sentSegmentedWithoutStops": ["terms", "warning", "action", "removing", "items", "unit", "could", "picked", "right"], "sentSegmentedWithoutStopsStemmed": ["term", "warn", "action", "remov", "item", "unit", "could", "pick", "right"]}, {"number": 14599, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "In order to trigger a visual indicator of some kind.", "sentSegmented": ["in", "order", "to", "trigger", "a", "visual", "indicator", "of", "some", "kind"], "sentSegmentedWithoutStops": ["order", "trigger", "visual", "indicator", "kind"], "sentSegmentedWithoutStopsStemmed": ["order", "trigger", "visual", "indic", "kind"]}, {"number": 14600, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I\u2019d wouldn\u2019t be surprised if I\u2019m way off the mark here though - I\u2019ve never worked on anything like this software wise.", "sentSegmented": ["i", "d", "wouldn", "t", "be", "surprised", "if", "i", "m", "way", "off", "the", "mark", "here", "though", "i", "ve", "never", "worked", "on", "anything", "like", "this", "software", "wise"], "sentSegmentedWithoutStops": ["surprised", "way", "mark", "though", "never", "worked", "anything", "like", "software", "wise"], "sentSegmentedWithoutStopsStemmed": ["surpris", "way", "mark", "though", "never", "work", "anyth", "like", "softwar", "wise"]}, {"number": 14601, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I only came accross the client this morning too, so I\u2019ve not had chance to have a look at the codebase yet.", "sentSegmented": ["i", "only", "came", "accross", "the", "client", "this", "morning", "too", "so", "i", "ve", "not", "had", "chance", "to", "have", "a", "look", "at", "the", "codebase", "yet"], "sentSegmentedWithoutStops": ["came", "accross", "client", "morning", "chance", "look", "codebase", "yet"], "sentSegmentedWithoutStopsStemmed": ["came", "accross", "client", "morn", "chanc", "look", "codebas", "yet"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ2ODgwMg==", "author": {"login": "Reasel"}, "body": "I am very new myself. But having had a look through the code I think this is entirely possible. Like tr33s said it would mean having to manually map out all stash units to clues...but it is very possible. Hell I just manually mapped almost all weapons to a tick rate. So I know it can be done.", "bodyText": "I am very new myself. But having had a look through the code I think this is entirely possible. Like tr33s said it would mean having to manually map out all stash units to clues...but it is very possible. Hell I just manually mapped almost all weapons to a tick rate. So I know it can be done.", "bodyHTML": "<p>I am very new myself. But having had a look through the code I think this is entirely possible. Like tr33s said it would mean having to manually map out all stash units to clues...but it is very possible. Hell I just manually mapped almost all weapons to a tick rate. So I know it can be done.</p>", "createdAt": "2018-04-18T17:37:52Z", "publishedAt": "2018-04-18T17:37:52Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:37:52Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14602, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I am very new myself.", "sentSegmented": ["i", "am", "very", "new", "myself"], "sentSegmentedWithoutStops": ["new"], "sentSegmentedWithoutStopsStemmed": ["new"]}, {"number": 14603, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "But having had a look through the code I think this is entirely possible.", "sentSegmented": ["but", "having", "had", "a", "look", "through", "the", "code", "i", "think", "this", "is", "entirely", "possible"], "sentSegmentedWithoutStops": ["look", "code", "think", "entirely", "possible"], "sentSegmentedWithoutStopsStemmed": ["look", "code", "think", "entir", "possibl"]}, {"number": 14604, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Like tr33s said it would mean having to manually map out all stash units to clues...but it is very possible.", "sentSegmented": ["like", "tr33s", "said", "it", "would", "mean", "having", "to", "manually", "map", "out", "all", "stash", "units", "to", "clues", "but", "it", "is", "very", "possible"], "sentSegmentedWithoutStops": ["like", "tr33s", "said", "would", "mean", "manually", "map", "stash", "units", "clues", "possible"], "sentSegmentedWithoutStopsStemmed": ["like", "tr33", "said", "would", "mean", "manual", "map", "stash", "unit", "clue", "possibl"]}, {"number": 14605, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hell I just manually mapped almost all weapons to a tick rate.", "sentSegmented": ["hell", "i", "just", "manually", "mapped", "almost", "all", "weapons", "to", "a", "tick", "rate"], "sentSegmentedWithoutStops": ["hell", "manually", "mapped", "almost", "weapons", "tick", "rate"], "sentSegmentedWithoutStopsStemmed": ["hell", "manual", "map", "almost", "weapon", "tick", "rate"]}, {"number": 14606, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So I know it can be done.", "sentSegmented": ["so", "i", "know", "it", "can", "be", "done"], "sentSegmentedWithoutStops": ["know", "done"], "sentSegmentedWithoutStopsStemmed": ["know", "done"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ2OTU2Ng==", "author": {"login": "Kamielvf"}, "body": "Using varbits is surely the best way to go at this. It might be possible to somehow figure out the varbits seeing as they modify certain objects only, so maybe theres no need to manually go trough all of them.", "bodyText": "Using varbits is surely the best way to go at this. It might be possible to somehow figure out the varbits seeing as they modify certain objects only, so maybe theres no need to manually go trough all of them.", "bodyHTML": "<p>Using varbits is surely the best way to go at this. It might be possible to somehow figure out the varbits seeing as they modify certain objects only, so maybe theres no need to manually go trough all of them.</p>", "createdAt": "2018-04-18T17:40:18Z", "publishedAt": "2018-04-18T17:40:18Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:40:18Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14607, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Using varbits is surely the best way to go at this.", "sentSegmented": ["using", "varbits", "is", "surely", "the", "best", "way", "to", "go", "at", "this"], "sentSegmentedWithoutStops": ["using", "varbits", "surely", "best", "way", "go"], "sentSegmentedWithoutStopsStemmed": ["use", "varbit", "sure", "best", "way", "go"]}, {"number": 14608, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It might be possible to somehow figure out the varbits seeing as they modify certain objects only, so maybe theres no need to manually go trough all of them.", "sentSegmented": ["it", "might", "be", "possible", "to", "somehow", "figure", "out", "the", "varbits", "seeing", "as", "they", "modify", "certain", "objects", "only", "so", "maybe", "theres", "no", "need", "to", "manually", "go", "trough", "all", "of", "them"], "sentSegmentedWithoutStops": ["might", "possible", "somehow", "figure", "varbits", "seeing", "modify", "certain", "objects", "maybe", "theres", "need", "manually", "go", "trough"], "sentSegmentedWithoutStopsStemmed": ["might", "possibl", "somehow", "figur", "varbit", "see", "modifi", "certain", "object", "mayb", "there", "need", "manual", "go", "trough"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ2OTYwNw==", "author": {"login": "tr33s"}, "body": "Yeah it can work.\r\n\r\nAnother way to do it without the varbits would be to use MenuActions e.g. Search STASH (easy), and then possible check the chat output (not certain about this).\r\n\r\nVarbits would definitely be the preferred method though.", "bodyText": "Yeah it can work.\nAnother way to do it without the varbits would be to use MenuActions e.g. Search STASH (easy), and then possible check the chat output (not certain about this).\nVarbits would definitely be the preferred method though.", "bodyHTML": "<p>Yeah it can work.</p>\n<p>Another way to do it without the varbits would be to use MenuActions e.g. Search STASH (easy), and then possible check the chat output (not certain about this).</p>\n<p>Varbits would definitely be the preferred method though.</p>", "createdAt": "2018-04-18T17:40:26Z", "publishedAt": "2018-04-18T17:40:26Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:40:26Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14609, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Yeah it can work.", "sentSegmented": ["yeah", "it", "can", "work"], "sentSegmentedWithoutStops": ["yeah", "work"], "sentSegmentedWithoutStopsStemmed": ["yeah", "work"]}, {"number": 14610, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Another way to do it without the varbits would be to use MenuActions e.g.", "sentSegmented": ["another", "way", "to", "do", "it", "without", "the", "varbits", "would", "be", "to", "use", "menuactions", "e.g"], "sentSegmentedWithoutStops": ["another", "way", "without", "varbits", "would", "use", "menuactions", "e.g"], "sentSegmentedWithoutStopsStemmed": ["anoth", "way", "without", "varbit", "would", "use", "menuact", "e.g"]}, {"number": 14611, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Search STASH (easy), and then possible check the chat output (not certain about this).", "sentSegmented": ["search", "stash", "easy", "and", "then", "possible", "check", "the", "chat", "output", "not", "certain", "about", "this"], "sentSegmentedWithoutStops": ["search", "stash", "easy", "possible", "check", "chat", "output", "certain"], "sentSegmentedWithoutStopsStemmed": ["search", "stash", "easi", "possibl", "check", "chat", "output", "certain"]}, {"number": 14612, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Varbits would definitely be the preferred method though.", "sentSegmented": ["varbits", "would", "definitely", "be", "the", "preferred", "method", "though"], "sentSegmentedWithoutStops": ["varbits", "would", "definitely", "preferred", "method", "though"], "sentSegmentedWithoutStopsStemmed": ["varbit", "would", "definit", "prefer", "method", "though"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ3MDU4Nw==", "author": {"login": "danielsharry"}, "body": "Damn that must have taken some time! I\u2019m looking forward to getting familirised with it, but I don\u2019t think it will be anytime soon before I\u2019m confident to push something that isn\u2019t going to be swiftly rejected - I mean I can\u2019t even mange to log into the correct GitHub account today!", "bodyText": "Damn that must have taken some time! I\u2019m looking forward to getting familirised with it, but I don\u2019t think it will be anytime soon before I\u2019m confident to push something that isn\u2019t going to be swiftly rejected - I mean I can\u2019t even mange to log into the correct GitHub account today!", "bodyHTML": "<p>Damn that must have taken some time! I\u2019m looking forward to getting familirised with it, but I don\u2019t think it will be anytime soon before I\u2019m confident to push something that isn\u2019t going to be swiftly rejected - I mean I can\u2019t even mange to log into the correct GitHub account today!</p>", "createdAt": "2018-04-18T17:43:40Z", "publishedAt": "2018-04-18T17:43:40Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:43:40Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14613, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Damn that must have taken some time!", "sentSegmented": ["damn", "that", "must", "have", "taken", "some", "time"], "sentSegmentedWithoutStops": ["damn", "must", "taken", "time"], "sentSegmentedWithoutStopsStemmed": ["damn", "must", "taken", "time"]}, {"number": 14614, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I\u2019m looking forward to getting familirised with it, but I don\u2019t think it will be anytime soon before I\u2019m confident to push something that isn\u2019t going to be swiftly rejected - I mean I can\u2019t even mange to log into the correct GitHub account today!", "sentSegmented": ["i", "m", "looking", "forward", "to", "getting", "familirised", "with", "it", "but", "i", "don", "t", "think", "it", "will", "be", "anytime", "soon", "before", "i", "m", "confident", "to", "push", "something", "that", "isn", "t", "going", "to", "be", "swiftly", "rejected", "i", "mean", "i", "can", "t", "even", "mange", "to", "log", "into", "the", "correct", "github", "account", "today"], "sentSegmentedWithoutStops": ["looking", "forward", "getting", "familirised", "think", "anytime", "soon", "confident", "push", "something", "going", "swiftly", "rejected", "mean", "even", "mange", "log", "correct", "github", "account", "today"], "sentSegmentedWithoutStopsStemmed": ["look", "forward", "get", "familiris", "think", "anytim", "soon", "confid", "push", "someth", "go", "swiftli", "reject", "mean", "even", "mang", "log", "correct", "github", "account", "today"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ3MTYxOA==", "author": {"login": "Reasel"}, "body": "Hop on the Discord. Everyone has been super friendly and gentle in telling me how bad I am. Worst case your code is rejected and you are told why. So you learn.", "bodyText": "Hop on the Discord. Everyone has been super friendly and gentle in telling me how bad I am. Worst case your code is rejected and you are told why. So you learn.", "bodyHTML": "<p>Hop on the Discord. Everyone has been super friendly and gentle in telling me how bad I am. Worst case your code is rejected and you are told why. So you learn.</p>", "createdAt": "2018-04-18T17:47:03Z", "publishedAt": "2018-04-18T17:47:03Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:47:03Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-04-18T17:50:21Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-04-19T03:46:55Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-04-12T13:02:50Z"}}]}, "bodyParsed": [{"number": 14615, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hop on the Discord.", "sentSegmented": ["hop", "on", "the", "discord"], "sentSegmentedWithoutStops": ["hop", "discord"], "sentSegmentedWithoutStopsStemmed": ["hop", "discord"]}, {"number": 14616, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Everyone has been super friendly and gentle in telling me how bad I am.", "sentSegmented": ["everyone", "has", "been", "super", "friendly", "and", "gentle", "in", "telling", "me", "how", "bad", "i", "am"], "sentSegmentedWithoutStops": ["everyone", "super", "friendly", "gentle", "telling", "bad"], "sentSegmentedWithoutStopsStemmed": ["everyon", "super", "friendli", "gentl", "tell", "bad"]}, {"number": 14617, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Worst case your code is rejected and you are told why.", "sentSegmented": ["worst", "case", "your", "code", "is", "rejected", "and", "you", "are", "told", "why"], "sentSegmentedWithoutStops": ["worst", "case", "code", "rejected", "told"], "sentSegmentedWithoutStopsStemmed": ["worst", "case", "code", "reject", "told"]}, {"number": 14618, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So you learn.", "sentSegmented": ["so", "you", "learn"], "sentSegmentedWithoutStops": ["learn"], "sentSegmentedWithoutStopsStemmed": ["learn"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM4MjQ3MzA1NA==", "author": {"login": "danielsharry"}, "body": "Haha good call, I\u2019ll have to get myself involved.", "bodyText": "Haha good call, I\u2019ll have to get myself involved.", "bodyHTML": "<p>Haha good call, I\u2019ll have to get myself involved.</p>", "createdAt": "2018-04-18T17:51:40Z", "publishedAt": "2018-04-18T17:51:40Z", "lastEditedAt": null, "updatedAt": "2018-04-18T17:51:40Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14619, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Haha good call, I\u2019ll have to get myself involved.", "sentSegmented": ["haha", "good", "call", "i", "ll", "have", "to", "get", "myself", "involved"], "sentSegmentedWithoutStops": ["haha", "good", "call", "get", "involved"], "sentSegmentedWithoutStopsStemmed": ["haha", "good", "call", "get", "involv"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM5MDc1MTgxOA==", "author": {"login": "MattyJacques"}, "body": "@tr33s Are you sure there is a varbit for being filled? I tried snapshotting but there is no reports of a change. There is certainly one for being built", "bodyText": "@tr33s Are you sure there is a varbit for being filled? I tried snapshotting but there is no reports of a change. There is certainly one for being built", "bodyHTML": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/tr33s/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tr33s\">@tr33s</a> Are you sure there is a varbit for being filled? I tried snapshotting but there is no reports of a change. There is certainly one for being built</p>", "createdAt": "2018-05-21T19:07:15Z", "publishedAt": "2018-05-21T19:07:15Z", "lastEditedAt": null, "updatedAt": "2018-05-21T19:07:15Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14620, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "@tr33s Are you sure there is a varbit for being filled?", "sentSegmented": ["tr33s", "are", "you", "sure", "there", "is", "a", "varbit", "for", "being", "filled"], "sentSegmentedWithoutStops": ["tr33s", "sure", "varbit", "filled"], "sentSegmentedWithoutStopsStemmed": ["tr33", "sure", "varbit", "fill"]}, {"number": 14621, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I tried snapshotting but there is no reports of a change.", "sentSegmented": ["i", "tried", "snapshotting", "but", "there", "is", "no", "reports", "of", "a", "change"], "sentSegmentedWithoutStops": ["tried", "snapshotting", "reports", "change"], "sentSegmentedWithoutStopsStemmed": ["tri", "snapshot", "report", "chang"]}, {"number": 14622, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "There is certainly one for being built", "sentSegmented": ["there", "is", "certainly", "one", "for", "being", "built"], "sentSegmentedWithoutStops": ["certainly", "one", "built"], "sentSegmentedWithoutStopsStemmed": ["certainli", "one", "built"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDM5MDc1Mzc1OQ==", "author": {"login": "Reasel"}, "body": "There is no varbit for filled. Just built.", "bodyText": "There is no varbit for filled. Just built.", "bodyHTML": "<p>There is no varbit for filled. Just built.</p>", "createdAt": "2018-05-21T19:14:44Z", "publishedAt": "2018-05-21T19:14:44Z", "lastEditedAt": null, "updatedAt": "2018-05-21T19:14:44Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14623, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "There is no varbit for filled.", "sentSegmented": ["there", "is", "no", "varbit", "for", "filled"], "sentSegmentedWithoutStops": ["varbit", "filled"], "sentSegmentedWithoutStopsStemmed": ["varbit", "fill"]}, {"number": 14624, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Just built.", "sentSegmented": ["just", "built"], "sentSegmentedWithoutStops": ["built"], "sentSegmentedWithoutStopsStemmed": ["built"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQyMDA5OTMwOA==", "author": {"login": "ShaunDreclin"}, "body": "I am very interested in this feature \ud83d\udc40", "bodyText": "I am very interested in this feature \ud83d\udc40", "bodyHTML": "<p>I am very interested in this feature <g-emoji class=\"g-emoji\" alias=\"eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f440.png\">\ud83d\udc40</g-emoji></p>", "createdAt": "2018-09-10T23:55:11Z", "publishedAt": "2018-09-10T23:55:11Z", "lastEditedAt": null, "updatedAt": "2018-09-10T23:55:11Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14625, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I am very interested in this feature \ud83d\udc40", "sentSegmented": ["i", "am", "very", "interested", "in", "this", "feature"], "sentSegmentedWithoutStops": ["interested", "feature"], "sentSegmentedWithoutStopsStemmed": ["interest", "featur"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQyMDExMjA4Ng==", "author": {"login": "abextm"}, "body": "So tracking construction is incredibly easy, there is just a varbit for each STASH object, and those seem to be sent to the client at all times. Tracking whether it is filled or not is much more difficult. When the Watson UI is built there are 3 ints sent to the client in a runscript packet, which are bitpacked states. There is then a script(1479) that will take an object id and these 3 ints and unpack them, returning `(boolean isBuilt, boolean isFilled)`. This script is moderately complex due to it checking the ints, varps, inventories, and a few special cases, so I would like to not reimplement it.\r\n\r\nSo to implement this I would:\r\n - Add a way to associate a STASH unit's ObjectID with a specific ClueScroll. Enum 1531 contains a mapping of objectid to the description text in Watson's interface, so you can just reference this when making the list.\r\n - Hook script 1479 so it will commit it's objectid and return value to the config. I would have a config key `cluescroll.stash.<username>.<objectid>=<0 = Unknown, 1 = Constructed, 2 = Filled>`\r\n - Hook the `Search` and `Build` menu op to check if you are interacting with any of these objects, then wait for the chat message saying that you have operated on it, `You (withdraw|deposit) your items from the STASH unit`, and update the player's config accordingly. This has to be done regardless of if which clue you are on so you can add stuff to stashes without having to get the clue. \r\n - Edit the overlay to show the STASH state, possibly a red box with an X in it if the STASH is built and unfilled, and a green box with a checkmark in it if the STASH is filled.\r\n - Highlight the STASH object that is associated with your current clue\r\n\r\nIt would also be cool to add STASH units to the world map.", "bodyText": "So tracking construction is incredibly easy, there is just a varbit for each STASH object, and those seem to be sent to the client at all times. Tracking whether it is filled or not is much more difficult. When the Watson UI is built there are 3 ints sent to the client in a runscript packet, which are bitpacked states. There is then a script(1479) that will take an object id and these 3 ints and unpack them, returning (boolean isBuilt, boolean isFilled). This script is moderately complex due to it checking the ints, varps, inventories, and a few special cases, so I would like to not reimplement it.\nSo to implement this I would:\n\nAdd a way to associate a STASH unit's ObjectID with a specific ClueScroll. Enum 1531 contains a mapping of objectid to the description text in Watson's interface, so you can just reference this when making the list.\nHook script 1479 so it will commit it's objectid and return value to the config. I would have a config key cluescroll.stash.<username>.<objectid>=<0 = Unknown, 1 = Constructed, 2 = Filled>\nHook the Search and Build menu op to check if you are interacting with any of these objects, then wait for the chat message saying that you have operated on it, You (withdraw|deposit) your items from the STASH unit, and update the player's config accordingly. This has to be done regardless of if which clue you are on so you can add stuff to stashes without having to get the clue.\nEdit the overlay to show the STASH state, possibly a red box with an X in it if the STASH is built and unfilled, and a green box with a checkmark in it if the STASH is filled.\nHighlight the STASH object that is associated with your current clue\n\nIt would also be cool to add STASH units to the world map.", "bodyHTML": "<p>So tracking construction is incredibly easy, there is just a varbit for each STASH object, and those seem to be sent to the client at all times. Tracking whether it is filled or not is much more difficult. When the Watson UI is built there are 3 ints sent to the client in a runscript packet, which are bitpacked states. There is then a script(1479) that will take an object id and these 3 ints and unpack them, returning <code>(boolean isBuilt, boolean isFilled)</code>. This script is moderately complex due to it checking the ints, varps, inventories, and a few special cases, so I would like to not reimplement it.</p>\n<p>So to implement this I would:</p>\n<ul>\n<li>Add a way to associate a STASH unit's ObjectID with a specific ClueScroll. Enum 1531 contains a mapping of objectid to the description text in Watson's interface, so you can just reference this when making the list.</li>\n<li>Hook script 1479 so it will commit it's objectid and return value to the config. I would have a config key <code>cluescroll.stash.&lt;username&gt;.&lt;objectid&gt;=&lt;0 = Unknown, 1 = Constructed, 2 = Filled&gt;</code></li>\n<li>Hook the <code>Search</code> and <code>Build</code> menu op to check if you are interacting with any of these objects, then wait for the chat message saying that you have operated on it, <code>You (withdraw|deposit) your items from the STASH unit</code>, and update the player's config accordingly. This has to be done regardless of if which clue you are on so you can add stuff to stashes without having to get the clue.</li>\n<li>Edit the overlay to show the STASH state, possibly a red box with an X in it if the STASH is built and unfilled, and a green box with a checkmark in it if the STASH is filled.</li>\n<li>Highlight the STASH object that is associated with your current clue</li>\n</ul>\n<p>It would also be cool to add STASH units to the world map.</p>", "createdAt": "2018-09-11T01:11:32Z", "publishedAt": "2018-09-11T01:11:32Z", "lastEditedAt": null, "updatedAt": "2018-09-11T01:11:32Z", "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-09-11T01:12:28Z"}}, {"node": {"content": "HEART", "createdAt": "2018-09-11T01:12:30Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-09-11T01:17:35Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-09-11T01:19:51Z"}}, {"node": {"content": "HEART", "createdAt": "2018-11-14T15:10:30Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-11-14T15:10:31Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-12-03T12:57:27Z"}}, {"node": {"content": "HEART", "createdAt": "2018-12-03T12:57:28Z"}}, {"node": {"content": "HEART", "createdAt": "2018-12-16T18:16:28Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-05-08T23:20:47Z"}}, {"node": {"content": "HEART", "createdAt": "2019-05-08T23:20:47Z"}}]}, "bodyParsed": [{"number": 14626, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So tracking construction is incredibly easy, there is just a varbit for each STASH object, and those seem to be sent to the client at all times.", "sentSegmented": ["so", "tracking", "construction", "is", "incredibly", "easy", "there", "is", "just", "a", "varbit", "for", "each", "stash", "object", "and", "those", "seem", "to", "be", "sent", "to", "the", "client", "at", "all", "times"], "sentSegmentedWithoutStops": ["tracking", "construction", "incredibly", "easy", "varbit", "stash", "object", "seem", "sent", "client", "times"], "sentSegmentedWithoutStopsStemmed": ["track", "construct", "incred", "easi", "varbit", "stash", "object", "seem", "sent", "client", "time"]}, {"number": 14627, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Tracking whether it is filled or not is much more difficult.", "sentSegmented": ["tracking", "whether", "it", "is", "filled", "or", "not", "is", "much", "more", "difficult"], "sentSegmentedWithoutStops": ["tracking", "whether", "filled", "much", "difficult"], "sentSegmentedWithoutStopsStemmed": ["track", "whether", "fill", "much", "difficult"]}, {"number": 14628, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "When the Watson UI is built there are 3 ints sent to the client in a runscript packet, which are bitpacked states.", "sentSegmented": ["when", "the", "watson", "ui", "is", "built", "there", "are", "3", "ints", "sent", "to", "the", "client", "in", "a", "runscript", "packet", "which", "are", "bitpacked", "states"], "sentSegmentedWithoutStops": ["watson", "ui", "built", "3", "ints", "sent", "client", "runscript", "packet", "bitpacked", "states"], "sentSegmentedWithoutStopsStemmed": ["watson", "ui", "built", "3", "int", "sent", "client", "runscript", "packet", "bitpack", "state"]}, {"number": 14629, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "There is then a script(1479) that will take an object id and these 3 ints and unpack them, returning (boolean isBuilt, boolean isFilled).", "sentSegmented": ["there", "is", "then", "a", "script", "1479", "that", "will", "take", "an", "object", "id", "and", "these", "3", "ints", "and", "unpack", "them", "returning", "boolean", "isbuilt", "boolean", "isfilled"], "sentSegmentedWithoutStops": ["script", "1479", "take", "object", "id", "3", "ints", "unpack", "returning", "boolean", "isbuilt", "boolean", "isfilled"], "sentSegmentedWithoutStopsStemmed": ["script", "1479", "take", "object", "id", "3", "int", "unpack", "return", "boolean", "isbuilt", "boolean", "isfil"]}, {"number": 14630, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This script is moderately complex due to it checking the ints, varps, inventories, and a few special cases, so I would like to not reimplement it.", "sentSegmented": ["this", "script", "is", "moderately", "complex", "due", "to", "it", "checking", "the", "ints", "varps", "inventories", "and", "a", "few", "special", "cases", "so", "i", "would", "like", "to", "not", "reimplement", "it"], "sentSegmentedWithoutStops": ["script", "moderately", "complex", "due", "checking", "ints", "varps", "inventories", "special", "cases", "would", "like", "reimplement"], "sentSegmentedWithoutStopsStemmed": ["script", "moder", "complex", "due", "check", "int", "varp", "inventori", "special", "case", "would", "like", "reimplement"]}, {"number": 14631, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "So to implement this I would:", "sentSegmented": ["so", "to", "implement", "this", "i", "would"], "sentSegmentedWithoutStops": ["implement", "would"], "sentSegmentedWithoutStopsStemmed": ["implement", "would"]}, {"number": 14632, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Add a way to associate a STASH unit's ObjectID with a specific ClueScroll.", "sentSegmented": ["add", "a", "way", "to", "associate", "a", "stash", "unit", "'s", "objectid", "with", "a", "specific", "cluescroll"], "sentSegmentedWithoutStops": ["add", "way", "associate", "stash", "unit", "'s", "objectid", "specific", "cluescroll"], "sentSegmentedWithoutStopsStemmed": ["add", "way", "associ", "stash", "unit", "'s", "objectid", "specif", "cluescrol"]}, {"number": 14633, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Enum 1531 contains a mapping of objectid to the description text in Watson's interface, so you can just reference this when making the list.", "sentSegmented": ["enum", "1531", "contains", "a", "mapping", "of", "objectid", "to", "the", "description", "text", "in", "watson", "'s", "interface", "so", "you", "can", "just", "reference", "this", "when", "making", "the", "list"], "sentSegmentedWithoutStops": ["enum", "1531", "contains", "mapping", "objectid", "description", "text", "watson", "'s", "interface", "reference", "making", "list"], "sentSegmentedWithoutStopsStemmed": ["enum", "1531", "contain", "map", "objectid", "descript", "text", "watson", "'s", "interfac", "refer", "make", "list"]}, {"number": 14634, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hook script 1479 so it will commit it's objectid and return value to the config.", "sentSegmented": ["hook", "script", "1479", "so", "it", "will", "commit", "it", "'s", "objectid", "and", "return", "value", "to", "the", "config"], "sentSegmentedWithoutStops": ["hook", "script", "1479", "commit", "'s", "objectid", "return", "value", "config"], "sentSegmentedWithoutStopsStemmed": ["hook", "script", "1479", "commit", "'s", "objectid", "return", "valu", "config"]}, {"number": 14635, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I would have a config key cluescroll.stash..=<0 = Unknown, 1 = Constructed, 2 = Filled>", "sentSegmented": ["i", "would", "have", "a", "config", "key", "cluescroll.stash", "0", "unknown", "1", "constructed", "2", "filled"], "sentSegmentedWithoutStops": ["would", "config", "key", "cluescroll.stash", "0", "unknown", "1", "constructed", "2", "filled"], "sentSegmentedWithoutStopsStemmed": ["would", "config", "key", "cluescroll.stash", "0", "unknown", "1", "construct", "2", "fill"]}, {"number": 14636, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Hook the Search and Build menu op to check if you are interacting with any of these objects, then wait for the chat message saying that you have operated on it, You (withdraw|deposit) your items from the STASH unit, and update the player's config accordingly.", "sentSegmented": ["hook", "the", "search", "and", "build", "menu", "op", "to", "check", "if", "you", "are", "interacting", "with", "any", "of", "these", "objects", "then", "wait", "for", "the", "chat", "message", "saying", "that", "you", "have", "operated", "on", "it", "you", "withdraw|deposit", "your", "items", "from", "the", "stash", "unit", "and", "update", "the", "player", "'s", "config", "accordingly"], "sentSegmentedWithoutStops": ["hook", "search", "build", "menu", "op", "check", "interacting", "objects", "wait", "chat", "message", "saying", "operated", "withdraw|deposit", "items", "stash", "unit", "update", "player", "'s", "config", "accordingly"], "sentSegmentedWithoutStopsStemmed": ["hook", "search", "build", "menu", "op", "check", "interact", "object", "wait", "chat", "messag", "say", "oper", "withdraw|deposit", "item", "stash", "unit", "updat", "player", "'s", "config", "accordingli"]}, {"number": 14637, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "This has to be done regardless of if which clue you are on so you can add stuff to stashes without having to get the clue.", "sentSegmented": ["this", "has", "to", "be", "done", "regardless", "of", "if", "which", "clue", "you", "are", "on", "so", "you", "can", "add", "stuff", "to", "stashes", "without", "having", "to", "get", "the", "clue"], "sentSegmentedWithoutStops": ["done", "regardless", "clue", "add", "stuff", "stashes", "without", "get", "clue"], "sentSegmentedWithoutStopsStemmed": ["done", "regardless", "clue", "add", "stuff", "stash", "without", "get", "clue"]}, {"number": 14638, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Edit the overlay to show the STASH state, possibly a red box with an X in it if the STASH is built and unfilled, and a green box with a checkmark in it if the STASH is filled.", "sentSegmented": ["edit", "the", "overlay", "to", "show", "the", "stash", "state", "possibly", "a", "red", "box", "with", "an", "x", "in", "it", "if", "the", "stash", "is", "built", "and", "unfilled", "and", "a", "green", "box", "with", "a", "checkmark", "in", "it", "if", "the", "stash", "is", "filled"], "sentSegmentedWithoutStops": ["edit", "overlay", "show", "stash", "state", "possibly", "red", "box", "x", "stash", "built", "unfilled", "green", "box", "checkmark", "stash", "filled"], "sentSegmentedWithoutStopsStemmed": ["edit", "overlay", "show", "stash", "state", "possibl", "red", "box", "x", "stash", "built", "unfil", "green", "box", "checkmark", "stash", "fill"]}, {"number": 14639, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Highlight the STASH object that is associated with your current clue", "sentSegmented": ["highlight", "the", "stash", "object", "that", "is", "associated", "with", "your", "current", "clue"], "sentSegmentedWithoutStops": ["highlight", "stash", "object", "associated", "current", "clue"], "sentSegmentedWithoutStopsStemmed": ["highlight", "stash", "object", "associ", "current", "clue"]}, {"number": 14640, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "It would also be cool to add STASH units to the world map.", "sentSegmented": ["it", "would", "also", "be", "cool", "to", "add", "stash", "units", "to", "the", "world", "map"], "sentSegmentedWithoutStops": ["would", "also", "cool", "add", "stash", "units", "world", "map"], "sentSegmentedWithoutStopsStemmed": ["would", "also", "cool", "add", "stash", "unit", "world", "map"]}]}}, {"node": {"id": "MDEyOklzc3VlQ29tbWVudDQ5NTQ0NjgwMQ==", "author": {"login": "Adam-"}, "body": "Tracking whether or not stash units are built was added in #8892. Will keep this open to track the tracking of fill states.", "bodyText": "Tracking whether or not stash units are built was added in #8892. Will keep this open to track the tracking of fill states.", "bodyHTML": "<p>Tracking whether or not stash units are built was added in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"447355659\" data-permission-text=\"Title is private\" data-url=\"https://github.com/runelite/runelite/issues/8892\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/runelite/runelite/pull/8892/hovercard\" href=\"https://github.com/runelite/runelite/pull/8892\">#8892</a>. Will keep this open to track the tracking of fill states.</p>", "createdAt": "2019-05-24T02:08:17Z", "publishedAt": "2019-05-24T02:08:17Z", "lastEditedAt": null, "updatedAt": "2019-05-24T02:08:17Z", "reactions": {"edges": []}, "bodyParsed": [{"number": 14641, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Tracking whether or not stash units are built was added in #8892.", "sentSegmented": ["tracking", "whether", "or", "not", "stash", "units", "are", "built", "was", "added", "in", "8892"], "sentSegmentedWithoutStops": ["tracking", "whether", "stash", "units", "built", "added", "8892"], "sentSegmentedWithoutStopsStemmed": ["track", "whether", "stash", "unit", "built", "ad", "8892"]}, {"number": 14642, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Will keep this open to track the tracking of fill states.", "sentSegmented": ["will", "keep", "this", "open", "to", "track", "the", "tracking", "of", "fill", "states"], "sentSegmentedWithoutStops": ["keep", "open", "track", "tracking", "fill", "states"], "sentSegmentedWithoutStopsStemmed": ["keep", "open", "track", "track", "fill", "state"]}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpHOHYfrEQ==", "hasNextPage": false}, "totalCount": 15}, "labels": {"edges": [{"node": {"createdAt": "2017-12-07T02:37:17Z", "name": "feature-request"}}]}, "milestone": null, "reactions": {"edges": [{"node": {"content": "THUMBS_UP", "createdAt": "2018-04-18T17:21:59Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-04-19T03:46:20Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-09-10T23:37:00Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-11-14T15:09:39Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2018-12-16T18:14:52Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-01-19T13:26:36Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-05-05T17:42:33Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-05-08T23:19:44Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-05-22T12:00:39Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2019-07-18T23:25:43Z"}}, {"node": {"content": "THUMBS_UP", "createdAt": "2020-04-12T13:02:04Z"}}]}, "state": "OPEN", "titleSegmented": ["track", "which", "stash", "units", "are", "filled"], "titleSegmentedWithoutStops": ["track", "stash", "units", "filled"], "titleSegmentedWithoutStopsStemmed": ["track", "stash", "unit", "fill"], "bodyParsed": [{"number": 14581, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "I\u2019m not sure of the feasibility of automating this, i.e.", "sentSegmented": ["i", "m", "not", "sure", "of", "the", "feasibility", "of", "automating", "this", "i.e"], "sentSegmentedWithoutStops": ["sure", "feasibility", "automating", "i.e"], "sentSegmentedWithoutStopsStemmed": ["sure", "feasibl", "autom", "i.e"]}, {"number": 14582, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "whether this data can be retrieved by the client at any time (I know it can be seen in an interface by speaking to Watson in-game), but even if it cant be shown as and when an emote clue is open, it could be useful to have a tool built into the client by which the user can manually track this, rather than having to visit Watson if unsure.", "sentSegmented": ["whether", "this", "data", "can", "be", "retrieved", "by", "the", "client", "at", "any", "time", "i", "know", "it", "can", "be", "seen", "in", "an", "interface", "by", "speaking", "to", "watson", "in-game", "but", "even", "if", "it", "cant", "be", "shown", "as", "and", "when", "an", "emote", "clue", "is", "open", "it", "could", "be", "useful", "to", "have", "a", "tool", "built", "into", "the", "client", "by", "which", "the", "user", "can", "manually", "track", "this", "rather", "than", "having", "to", "visit", "watson", "if", "unsure"], "sentSegmentedWithoutStops": ["whether", "data", "retrieved", "client", "time", "know", "seen", "interface", "speaking", "watson", "in-game", "even", "cant", "shown", "emote", "clue", "open", "could", "useful", "tool", "built", "client", "user", "manually", "track", "rather", "visit", "watson", "unsure"], "sentSegmentedWithoutStopsStemmed": ["whether", "data", "retriev", "client", "time", "know", "seen", "interfac", "speak", "watson", "in-gam", "even", "cant", "shown", "emot", "clue", "open", "could", "use", "tool", "built", "client", "user", "manual", "track", "rather", "visit", "watson", "unsur"]}, {"number": 14583, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "On the back of this, it may be nice to have an indicator of some description to alert the player to re-fill the STASH unit, for example by highlighting the in game asset.", "sentSegmented": ["on", "the", "back", "of", "this", "it", "may", "be", "nice", "to", "have", "an", "indicator", "of", "some", "description", "to", "alert", "the", "player", "to", "re-fill", "the", "stash", "unit", "for", "example", "by", "highlighting", "the", "in", "game", "asset"], "sentSegmentedWithoutStops": ["back", "may", "nice", "indicator", "description", "alert", "player", "re-fill", "stash", "unit", "example", "highlighting", "game", "asset"], "sentSegmentedWithoutStopsStemmed": ["back", "may", "nice", "indic", "descript", "alert", "player", "re-fil", "stash", "unit", "exampl", "highlight", "game", "asset"]}, {"number": 14584, "isCode": false, "isBlockQuote": false, "blockQuoteDepth": 0, "sent": "Or is it just me that has teleported away in my emote gear before putting it back too many times to count?", "sentSegmented": ["or", "is", "it", "just", "me", "that", "has", "teleported", "away", "in", "my", "emote", "gear", "before", "putting", "it", "back", "too", "many", "times", "to", "count"], "sentSegmentedWithoutStops": ["teleported", "away", "emote", "gear", "putting", "back", "many", "times", "count"], "sentSegmentedWithoutStopsStemmed": ["teleport", "away", "emot", "gear", "put", "back", "mani", "time", "count"]}]}